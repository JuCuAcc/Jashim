// <auto-generated />
using System;
using JashimApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JashimApi.Migrations
{
    [DbContext(typeof(CRUDDBContext))]
    [Migration("20230130095726_Initial Create")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("JashimApi.Models.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("City", (string)null);
                });

            modelBuilder.Entity("JashimApi.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Country", (string)null);
                });

            modelBuilder.Entity("JashimApi.Models.DeleteResumeFileResult", b =>
                {
                    b.ToView(null);
                });

            modelBuilder.Entity("JashimApi.Models.GetAllPersonsResult", b =>
                {
                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("LanguageSkills")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResumeFileName")
                        .HasColumnType("nvarchar(max)");

                    b.ToView(null);
                });

            modelBuilder.Entity("JashimApi.Models.GetPersonByIdResult", b =>
                {
                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("LanguageSkills")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResumeFileName")
                        .HasColumnType("nvarchar(max)");

                    b.ToView(null);
                });

            modelBuilder.Entity("JashimApi.Models.GetResumeFileByIdResult", b =>
                {
                    b.ToView(null);
                });

            modelBuilder.Entity("JashimApi.Models.GetResumeFileByPersonIdResult", b =>
                {
                    b.ToView(null);
                });

            modelBuilder.Entity("JashimApi.Models.InsertResumeFileResult", b =>
                {
                    b.ToView(null);
                });

            modelBuilder.Entity("JashimApi.Models.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Language", (string)null);
                });

            modelBuilder.Entity("JashimApi.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("LanguageSkills")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ResumeFileName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.ToTable("Person", (string)null);
                });

            modelBuilder.Entity("PersonLanguage", b =>
                {
                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.HasKey("PersonId", "LanguageId")
                        .HasName("PK__PersonLa__01BC7EBFC96E42F2");

                    b.HasIndex("LanguageId");

                    b.ToTable("PersonLanguage", (string)null);
                });

            modelBuilder.Entity("JashimApi.Models.City", b =>
                {
                    b.HasOne("JashimApi.Models.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .IsRequired()
                        .HasConstraintName("FK__City__CountryId__267ABA7A");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("JashimApi.Models.Person", b =>
                {
                    b.HasOne("JashimApi.Models.City", "City")
                        .WithMany("People")
                        .HasForeignKey("CityId")
                        .IsRequired()
                        .HasConstraintName("FK__Person__CityId__2E1BDC42");

                    b.HasOne("JashimApi.Models.Country", "Country")
                        .WithMany("People")
                        .HasForeignKey("CountryId")
                        .IsRequired()
                        .HasConstraintName("FK__Person__CountryI__2D27B809");

                    b.Navigation("City");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("PersonLanguage", b =>
                {
                    b.HasOne("JashimApi.Models.Language", null)
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .IsRequired()
                        .HasConstraintName("FK__PersonLan__Langu__31EC6D26");

                    b.HasOne("JashimApi.Models.Person", null)
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .IsRequired()
                        .HasConstraintName("FK__PersonLan__Perso__30F848ED");
                });

            modelBuilder.Entity("JashimApi.Models.City", b =>
                {
                    b.Navigation("People");
                });

            modelBuilder.Entity("JashimApi.Models.Country", b =>
                {
                    b.Navigation("Cities");

                    b.Navigation("People");
                });
#pragma warning restore 612, 618
        }
    }
}
