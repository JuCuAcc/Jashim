{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/people.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"../../services/country.service\";\nimport * as i5 from \"../../services/city.service\";\nimport * as i6 from \"../../services/language.service\";\nimport * as i7 from \"@angular/common/http\";\nimport * as i8 from \"@angular/common\";\nfunction EditPersonComponent_option_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 24);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const country_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", country_r3.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(country_r3.name);\n  }\n}\nfunction EditPersonComponent_option_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 24);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const language_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", language_r4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(language_r4);\n  }\n}\nexport class EditPersonComponent {\n  //updatePerson() {\n  //  this.personService.updatePerson(this.personDetails.id, this.personDetails)\n  //    .subscribe({\n  //      next: (response) => {\n  //        this.router.navigate(['people']);\n  //      }\n  //    });\n  //}\n  constructor(fb, personService, router, countryService, cityService, languageService, http, route) {\n    this.fb = fb;\n    this.personService = personService;\n    this.router = router;\n    this.countryService = countryService;\n    this.cityService = cityService;\n    this.languageService = languageService;\n    this.http = http;\n    this.route = route;\n    this.languageSkills = \"\";\n    this.isChecked = false;\n    this.languages = [];\n    this.personDetails = {\n      id: '',\n      name: '',\n      country: '',\n      city: '',\n      languageSkills: '',\n      dateOfBirth: new Date(2023, 1, 1),\n      resumeFileName: '',\n      languages: [],\n      cityId: 0,\n      countryId: 0,\n      resumeFile: new File([], '')\n    };\n  }\n  //constructor(private http: HttpClient, private route: ActivatedRoute, private personService: PeopleService, private router: Router) { }\n  ngOnInit() {\n    this.route.paramMap.subscribe({\n      next: params => {\n        const id = params.get('id');\n        if (id) {\n          // call api using service\n          this.personService.getPerson(id).subscribe({\n            next: response => {\n              this.personDetails = response;\n            }\n          });\n          this.countryService.getCountries().subscribe(data => {\n            this.countries = data;\n          });\n          this.cityService.getCities().subscribe(data => {\n            this.cities = data;\n          });\n          this.languageService.getLanguages().subscribe(data => {\n            this.languages = data;\n          });\n          this.getLanguages();\n          this.loadCities();\n        }\n      }\n    });\n  }\n  //ngOnInit() {\n  //  this.countryService.getCountries().subscribe((data: Country[]) => {\n  //    this.countries = data;\n  //  });\n  //  this.cityService.getCities().subscribe((data: City[]) => {\n  //    this.cities = data;\n  //  });\n  //  this.languageService.getLanguages().subscribe((data: Language[]) => {\n  //    this.languages = data;\n  //  });\n  //  this.getLanguages();\n  //  this.loadCities();\n  //}\n  getLanguages() {\n    this.languageService.getLanguages().subscribe(data => {\n      this.languages = data;\n    });\n  }\n  loadCities() {\n    this.cities = [];\n    this.personDetails.cityId = -1;\n    this.cityService.getCitiesByCountryId(this.personDetails.countryId).subscribe(data => {\n      this.cities = data;\n    });\n  }\n  updatePerson() {\n    let formData = new FormData();\n    formData.append(\"updatePersonRequest\", JSON.stringify(this.personDetails));\n    formData.append(\"resume\", this.selectedResumeFile, this.selectedResumeFile.name);\n    this.http.put('https://localhost:7043/api/People/${this.personDetails.id}', formData).subscribe(res => {\n      console.log(res);\n    });\n  }\n  //deletePerson(id: string) {\n  //  this.personService.deletePerson(id)\n  //    .subscribe({\n  //      next: (response) => {\n  //        this.router.navigate(['people']);\n  //      }\n  //    });\n  //}\n  deletePerson(id) {\n    this.http.delete('https://localhost:7043/api/People/${id}').subscribe(res => {\n      console.log(res);\n    });\n  }\n  onFileSelected(event) {\n    this.selectedResumeFile = event.target.files[0];\n  }\n}\nEditPersonComponent.ɵfac = function EditPersonComponent_Factory(t) {\n  return new (t || EditPersonComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.PeopleService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.CountryService), i0.ɵɵdirectiveInject(i5.CityService), i0.ɵɵdirectiveInject(i6.LanguageService), i0.ɵɵdirectiveInject(i7.HttpClient), i0.ɵɵdirectiveInject(i3.ActivatedRoute));\n};\nEditPersonComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EditPersonComponent,\n  selectors: [[\"app-edit-person\"]],\n  decls: 43,\n  vars: 8,\n  consts: [[1, \"container\", \"my-5\"], [1, \"mb-3\"], [1, \"row\"], [1, \"col-6\"], [3, \"ngSubmit\"], [\"form\", \"ngForm\"], [\"for\", \"id\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"id\", \"readonly\", \"\", \"name\", \"id\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"name\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"name\", \"name\", \"name\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"country\", 1, \"form-label\"], [\"id\", \"country\", \"name\", \"country\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [\"value\", \"0\", \"selected\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"city\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"city\", \"name\", \"city\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"languageSkills\", 1, \"form-label\"], [\"multiple\", \"\", \"id\", \"languageSkills\", \"name\", \"languageSkills\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"resumeFileName\", 1, \"form-label\"], [\"type\", \"file\", \"id\", \"resumeFileName\", \"name\", \"resumeFileName\", 1, \"form-control\", 3, \"change\"], [\"for\", \"dateOfBirth\", 1, \"form-label\"], [\"type\", \"date\", \"id\", \"dateOfBirth\", \"name\", \"dateOfBirth\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"mr-5\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", 3, \"click\"], [3, \"value\"]],\n  template: function EditPersonComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\", 1);\n      i0.ɵɵtext(2, \"Edit Person\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2)(4, \"div\", 3)(5, \"form\", 4, 5);\n      i0.ɵɵlistener(\"ngSubmit\", function EditPersonComponent_Template_form_ngSubmit_5_listener() {\n        return ctx.updatePerson();\n      });\n      i0.ɵɵelementStart(7, \"div\", 1)(8, \"label\", 6);\n      i0.ɵɵtext(9, \"Id\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function EditPersonComponent_Template_input_ngModelChange_10_listener($event) {\n        return ctx.personDetails.id = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"div\", 1)(12, \"label\", 8);\n      i0.ɵɵtext(13, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"input\", 9);\n      i0.ɵɵlistener(\"ngModelChange\", function EditPersonComponent_Template_input_ngModelChange_14_listener($event) {\n        return ctx.personDetails.name = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"div\", 1)(16, \"label\", 10);\n      i0.ɵɵtext(17, \"Country\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"select\", 11);\n      i0.ɵɵlistener(\"ngModelChange\", function EditPersonComponent_Template_select_ngModelChange_18_listener($event) {\n        return ctx.addPersonRequest.countryId = $event;\n      })(\"change\", function EditPersonComponent_Template_select_change_18_listener() {\n        return ctx.loadCities();\n      });\n      i0.ɵɵelementStart(19, \"option\", 12);\n      i0.ɵɵtext(20, \"Select Country\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(21, EditPersonComponent_option_21_Template, 2, 2, \"option\", 13);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(22, \"div\", 1)(23, \"label\", 14);\n      i0.ɵɵtext(24, \"City\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"input\", 15);\n      i0.ɵɵlistener(\"ngModelChange\", function EditPersonComponent_Template_input_ngModelChange_25_listener($event) {\n        return ctx.personDetails.city = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(26, \"div\", 1)(27, \"label\", 16);\n      i0.ɵɵtext(28, \"Language Skills\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"select\", 17);\n      i0.ɵɵlistener(\"ngModelChange\", function EditPersonComponent_Template_select_ngModelChange_29_listener($event) {\n        return ctx.personDetails.languageSkills = $event;\n      });\n      i0.ɵɵtemplate(30, EditPersonComponent_option_30_Template, 2, 2, \"option\", 13);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(31, \"div\", 1)(32, \"label\", 18);\n      i0.ɵɵtext(33, \"Resume\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(34, \"input\", 19);\n      i0.ɵɵlistener(\"change\", function EditPersonComponent_Template_input_change_34_listener($event) {\n        return ctx.onFileSelected($event);\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(35, \"div\", 1)(36, \"label\", 20);\n      i0.ɵɵtext(37, \"Date Of Birth\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(38, \"input\", 21);\n      i0.ɵɵlistener(\"ngModelChange\", function EditPersonComponent_Template_input_ngModelChange_38_listener($event) {\n        return ctx.personDetails.dateOfBirth = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(39, \"button\", 22);\n      i0.ɵɵtext(40, \"Save\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(41, \"button\", 23);\n      i0.ɵɵlistener(\"click\", function EditPersonComponent_Template_button_click_41_listener() {\n        return ctx.deletePerson(ctx.personDetails.id);\n      });\n      i0.ɵɵtext(42, \"Delete\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngModel\", ctx.personDetails.id);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.personDetails.name);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.addPersonRequest.countryId);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.countries);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.personDetails.city);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.personDetails.languageSkills);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.languages);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngModel\", ctx.personDetails.dateOfBirth);\n    }\n  },\n  dependencies: [i8.NgForOf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.SelectMultipleControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.NgModel, i1.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","EditPersonComponent","constructor","fb","personService","router","countryService","cityService","languageService","http","route","id","name","country","city","languageSkills","dateOfBirth","Date","resumeFileName","languages","cityId","countryId","resumeFile","File","ngOnInit","paramMap","subscribe","next","params","get","getPerson","response","personDetails","getCountries","data","countries","getCities","cities","getLanguages","loadCities","getCitiesByCountryId","updatePerson","formData","FormData","append","JSON","stringify","selectedResumeFile","put","res","console","log","deletePerson","delete","onFileSelected","event","target","files","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\Jashim\\Job\\AngularFullStack\\EIS\\FullStack UI\\FullStack.UI\\src\\app\\components\\edit-person\\edit-person.component.html","D:\\Jashim\\Job\\AngularFullStack\\EIS\\FullStack UI\\FullStack.UI\\src\\app\\components\\edit-person\\edit-person.component.ts"],"sourcesContent":["<div class=\"container my-5\">\r\n  <h1 class=\"mb-3\">Edit Person</h1>\r\n\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-6\">\r\n      <form #form=\"ngForm\" (ngSubmit)=\"updatePerson()\">\r\n        <div class=\"mb-3\">\r\n          <label for=\"id\" class=\"form-label\">Id</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"id\" readonly\r\n                 name=\"id\" [(ngModel)]=\"personDetails.id\">\r\n        </div>\r\n\r\n        <div class=\"mb-3\">\r\n          <label for=\"name\" class=\"form-label\">Name</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"name\"\r\n                 name=\"name\" [(ngModel)]=\"personDetails.name\" required>\r\n        </div>\r\n\r\n        <!--<div class=\"mb-3\">\r\n    <label for=\"country\" class=\"form-label\">Country</label>\r\n    <input type=\"text\" class=\"form-control\" id=\"country\"\r\n           name=\"country\" [(ngModel)]=\"personDetails.country\">\r\n  </div>-->\r\n        <!--<div class=\"mb-3\">\r\n    <label for=\"country\" class=\"form-label\">Country</label>\r\n    <select class=\"form-control\" id=\"country\"\r\n            name=\"country\" [(ngModel)]=\"personDetails.country\" required>\r\n      <option *ngFor=\"let country of countries\" [value]=\"country\">{{country}}</option>\r\n    </select>\r\n  </div>-->\r\n\r\n        <div class=\"mb-3\">\r\n          <label for=\"country\" class=\"form-label\">Country</label>\r\n          <select id=\"country\" class=\"form-control\" name=\"country\" [(ngModel)]=\"addPersonRequest.countryId\" (change)=\"loadCities()\">\r\n            <option value=\"0\" selected>Select Country</option>\r\n            <option *ngFor=\"let country of countries\" [value]=\"country.id\">{{country.name}}</option>\r\n          </select>\r\n        </div>\r\n\r\n        <!--<div class=\"mb-3\">\r\n    <label for=\"city\" class=\"form-label\">City</label>\r\n    <input type=\"text\" class=\"form-control\" id=\"city\"\r\n           name=\"city\" [(ngModel)]=\"personDetails.city\">\r\n  </div>-->\r\n        <!--<div class=\"mb-3\">\r\n    <label for=\"languageSkills\" class=\"form-label\">Language Skills</label>\r\n    <input type=\"text\" class=\"form-control\" id=\"languageSkills\"\r\n           name=\"languageSkills\" [(ngModel)]=\"personDetails.languageSkills\">\r\n  </div>-->\r\n        <!--<div class=\"mb-3\">\r\n    <label for=\"resumeFileName\" class=\"form-label\">Resume</label>\r\n    <input type=\"file\" class=\"form-control\" id=\"resumeFileName\"\r\n           name=\"resumeFileName\" [(ngModel)]=\"personDetails.resumeFileName\">\r\n  </div>-->\r\n\r\n        <div class=\"mb-3\">\r\n          <label for=\"city\" class=\"form-label\">City</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"city\"\r\n                 name=\"city\" [(ngModel)]=\"personDetails.city\" required>\r\n        </div>\r\n\r\n        <div class=\"mb-3\">\r\n          <label for=\"languageSkills\" class=\"form-label\">Language Skills</label>\r\n          <select multiple class=\"form-control\" id=\"languageSkills\"\r\n                  name=\"languageSkills\" [(ngModel)]=\"personDetails.languageSkills\" required>\r\n            <option *ngFor=\"let language of languages\" [value]=\"language\">{{language}}</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div class=\"mb-3\">\r\n          <label for=\"resumeFileName\" class=\"form-label\">Resume</label>\r\n          <!--<input type=\"file\" class=\"form-control\" id=\"resumeFileName\"\r\n    name=\"resumeFileName\" (change)=\"onResumeFileChange($event)\" required>-->\r\n          <input type=\"file\" class=\"form-control\" id=\"resumeFileName\"\r\n                 name=\"resumeFileName\" (change)=\"onFileSelected($event)\">\r\n\r\n        </div>\r\n\r\n        <div class=\"mb-3\">\r\n          <label for=\"dateOfBirth\" class=\"form-label\">Date Of Birth</label>\r\n          <input type=\"date\" class=\"form-control\" id=\"dateOfBirth\"\r\n                 name=\"dateOfBirth\" [(ngModel)]=\"personDetails.dateOfBirth\" required>\r\n        </div>\r\n\r\n        <button type=\"submit\" class=\"btn btn-primary mr-5\">Save</button>\r\n\r\n        <button type=\"button\" class=\"btn btn-danger\" (click)=\"deletePerson(personDetails.id)\">Delete</button>\r\n\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Person } from '../../models/person.model';\nimport { PeopleService } from '../../services/people.service';\n\nimport { HttpClient } from '@angular/common/http';\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Language } from '../../models/language.model';\r\nimport { City } from '../../models/city.model';\r\nimport { Country } from '../../models/country.model';\r\nimport { LanguageService } from '../../services/language.service';\r\nimport { CityService } from '../../services/city.service';\r\nimport { CountryService } from '../../services/country.service';\r\n\r\n\n@Component({\n  selector: 'app-edit-person',\n  templateUrl: './edit-person.component.html',\n  styleUrls: ['./edit-person.component.css']\n})\nexport class EditPersonComponent {\n\n\n  languageSkills: string = \"\";\n\n  countries!: Country[];\n  cities!: City[];\n\n  isChecked: boolean = false;\n  languages: Language[] = [];\n\n\n  addPersonForm!: FormGroup;\n  selectedResumeFile!: File;\n\n  personDetails: Person = {\n    id: '',\n    name: '',\n    country: '',\n    city: '',\n    languageSkills: '',\n    dateOfBirth: new Date(2023, 1, 1),\n    resumeFileName: '',\n    languages: [],\n    cityId: 0,\n    countryId: 0,\n    resumeFile: new File([], '')\n\n  };\n\n  //constructor(private http: HttpClient, private route: ActivatedRoute, private personService: PeopleService, private router: Router) { }\n\n  ngOnInit() {\n    this.route.paramMap.subscribe({\n      next: (params) => {\n        const id = params.get('id');\n        if (id) {\n          // call api using service\n          this.personService.getPerson(id).subscribe({\n            next: (response) => {\n              this.personDetails = response;\n            }\n          });\n          this.countryService.getCountries().subscribe((data: Country[]) => {\r\n            this.countries = data;\r\n          });\r\n\r\n          this.cityService.getCities().subscribe((data: City[]) => {\r\n            this.cities = data;\r\n          });\r\n\r\n          this.languageService.getLanguages().subscribe((data: Language[]) => {\r\n            this.languages = data;\r\n          });\n          this.getLanguages();\r\n          this.loadCities();\n        }\n      }\n\n    })\n  }\n\n  //updatePerson() {\n  //  this.personService.updatePerson(this.personDetails.id, this.personDetails)\n  //    .subscribe({\n  //      next: (response) => {\n  //        this.router.navigate(['people']);\n  //      }\n  //    });\n  //}\n\n\n  constructor(\r\n    private fb: FormBuilder,\r\n    private personService: PeopleService,\r\n    private router: Router,\r\n    private countryService: CountryService,\r\n    private cityService: CityService,\r\n    private languageService: LanguageService,\r\n    private http: HttpClient,\r\n    private route: ActivatedRoute,\r\n\r\n  ) { }\r\n\r\n\r\n  //ngOnInit() {\r\n  //  this.countryService.getCountries().subscribe((data: Country[]) => {\r\n  //    this.countries = data;\r\n  //  });\r\n\r\n  //  this.cityService.getCities().subscribe((data: City[]) => {\r\n  //    this.cities = data;\r\n  //  });\r\n\r\n  //  this.languageService.getLanguages().subscribe((data: Language[]) => {\r\n  //    this.languages = data;\r\n  //  });\r\n  //  this.getLanguages();\r\n  //  this.loadCities();\r\n  //}\r\n\r\n\r\n\r\n  getLanguages() {\r\n    this.languageService.getLanguages().subscribe((data: Language[]) => {\r\n      this.languages = data;\r\n    });\r\n  }\r\n\r\n\r\n  loadCities() {\r\n    this.cities = [];\r\n    this.personDetails.cityId = -1;\r\n    this.cityService.getCitiesByCountryId(this.personDetails.countryId).subscribe((data: City[]) => {\r\n      this.cities = data;\r\n    });\r\n  }\n\n\n\n  updatePerson() {\n    let formData = new FormData();\n    formData.append(\"updatePersonRequest\", JSON.stringify(this.personDetails));\n    formData.append(\"resume\", this.selectedResumeFile, this.selectedResumeFile.name);\n\n    this.http.put('https://localhost:7043/api/People/${this.personDetails.id}', formData)\n      .subscribe(res => {\n        console.log(res);\n      });\n  }\n\n  //deletePerson(id: string) {\n  //  this.personService.deletePerson(id)\n  //    .subscribe({\n  //      next: (response) => {\n  //        this.router.navigate(['people']);\n  //      }\n  //    });\n  //}\n\n\n  deletePerson(id: string) {\n    this.http.delete('https://localhost:7043/api/People/${id}')\n      .subscribe(res => {\n        console.log(res);\n      });\n  }\n\n  onFileSelected(event: any) {\n    this.selectedResumeFile = event.target.files[0];\n  }\n\n}\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}