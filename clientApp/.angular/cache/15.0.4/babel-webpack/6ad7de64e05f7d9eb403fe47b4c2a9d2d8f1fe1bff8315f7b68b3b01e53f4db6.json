{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\n//import { HttpEvent, HttpEventType } from '@angular/common/http';\nimport { Validators } from '@angular/forms';\nlet AddPersonComponent = class AddPersonComponent {\n  constructor(fb, personService, router, countryService, cityService, languageService) {\n    this.fb = fb;\n    this.personService = personService;\n    this.router = router;\n    this.countryService = countryService;\n    this.cityService = cityService;\n    this.languageService = languageService;\n    this.id = \"\";\n    this.name = \"\";\n    this.country = \"\";\n    this.city = \"\";\n    this.languageSkills = \"\";\n    this.dateOfBirth = new Date(2023, 1, 1);\n    this.resumeFileName = \"\";\n    this.languages = [];\n    this.cityId = 0;\n    this.countryId = 0;\n    this.isChecked = false;\n    this.addPersonRequest = {\n      id: '',\n      name: '',\n      country: '',\n      city: '',\n      languageSkills: '',\n      dateOfBirth: new Date(2023, 1, 1),\n      resumeFileName: '',\n      languages: [],\n      cityId: 0,\n      countryId: 0,\n      resumeFile: new File([], '')\n    };\n    this.addPersonForm = this.fb.group({\n      name: ['', Validators.required],\n      country: ['', Validators.required],\n      city: ['', Validators.required],\n      languageSkills: ['', Validators.required],\n      dateOfBirth: ['', Validators.required],\n      resumeFileName: ['', Validators.required],\n      languages: ['', Validators.required],\n      cityId: ['', Validators.required],\n      countryId: ['', Validators.required],\n      resumeFile: ['', Validators.required]\n    });\n  }\n  //constructor(\n  //  private fb: FormBuilder,\n  //  private personService: PeopleService,\n  //  private router: Router,\n  //  private countryService: CountryService,\n  //  private cityService: CityService,\n  //  private languageService: LanguageService\n  //) { }\n  ngOnInit() {\n    this.countryService.getCountries().subscribe(data => {\n      this.countries = data;\n    });\n    this.cityService.getCities().subscribe(data => {\n      this.cities = data;\n    });\n    this.languageService.getLanguages().subscribe(data => {\n      this.languages = data;\n    });\n    this.getLanguages();\n    this.loadCities();\n  }\n  getLanguages() {\n    this.languageService.getLanguages().subscribe(data => {\n      this.languages = data;\n    });\n  }\n  loadCities() {\n    this.cities = [];\n    this.addPersonRequest.cityId = -1;\n    this.cityService.getCitiesByCountryId(this.addPersonRequest.countryId).subscribe(data => {\n      this.cities = data;\n    });\n  }\n  onFileChange(e) {\n    const file = e['target'].files[0];\n    const fileName = file.name;\n    const fileSize = file.size;\n    const fileType = file.type;\n    console.log(fileName);\n    console.log(fileSize);\n    this.selectedResumeFile = file;\n    this.addPersonRequest.resumeFile = this.selectedResumeFile;\n    if (fileType === 'application/pdf' || fileType === 'application/msword') {\n      this.addPersonRequest.resumeFileName = fileName;\n    } else {\n      alert('Only pdf or doc files are allowed!');\n    }\n  }\n  //addPerson() {\n  //  console.log(this.addPersonRequest);\n  //  this.personService.addPerson(this.addPersonRequest)\n  //    .subscribe({\n  //      next: (person) => {\n  //        console.log(person);\n  //        this.router.navigate(['people']);\n  //      }\n  //    });\n  //}\n  //addPerson() {\n  //  const formData = new FormData();\n  //  formData.append('file', this.addPersonRequest.resumeFileName);\n  //  formData.append('addPersonRequest', JSON.stringify(this.addPersonRequest));\n  //  this.personService.addPerson(formData)\n  //    .subscribe({\n  //      next: (person) => {\n  //        console.log(person);\n  //        this.router.navigate(['people']);\n  //      },\n  //      error: (error) => {\n  //        console.log(error);\n  //      }\n  //    });\n  //}\n  //addPerson() {\n  //  const formData = new FormData();\n  //  formData.append('file', this.addPersonRequest.resumeFileName);\n  //  formData.append('addPersonRequest', JSON.stringify(this.addPersonRequest));\n  //  this.personService.addPerson(formData)\n  //    .subscribe((event: HttpEvent<any>) => {\n  //      switch (event.type) {\n  //        case HttpEventType.Sent:\n  //          console.log('Request sent!');\n  //          break;\n  //        case HttpEventType.Response:\n  //          console.log('Response received!', event.body);\n  //          if (event.body) {\n  //            this.router.navigate(['people']);\n  //          }\n  //          break;\n  //      }\n  //    });\n  //}\n  addPerson() {\n    const formData = new FormData();\n    formData.append('file', this.addPersonRequest.resumeFile);\n    formData.append('name', this.addPersonRequest.name);\n    formData.append('country', this.addPersonRequest.country);\n    formData.append('city', this.addPersonRequest.city);\n    formData.append('languageSkills', this.addPersonRequest.languageSkills);\n    formData.append('dateOfBirth', this.addPersonRequest.dateOfBirth.toDateString());\n    /*    const formData = new FormData();*/\n    formData.append('file', this.addPersonRequest.resumeFile);\n    formData.append('addPersonRequest', JSON.stringify(this.addPersonRequest));\n    this.personService.addPerson(formData).subscribe(response => {\n      console.log(response);\n      this.router.navigate(['people']);\n    }, error => {\n      console.log(error);\n    });\n  }\n};\nAddPersonComponent = __decorate([Component({\n  selector: 'app-add-person',\n  templateUrl: './add-person.component.html',\n  styleUrls: ['./add-person.component.css']\n})], AddPersonComponent);\nexport { AddPersonComponent };","map":{"version":3,"mappings":"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","names":["Component","Validators","AddPersonComponent","constructor","fb","personService","router","countryService","cityService","languageService","Date","id","name","country","city","languageSkills","dateOfBirth","resumeFileName","languages","cityId","countryId","resumeFile","File","addPersonForm","group","required","ngOnInit","getCountries","subscribe","data","countries","getCities","cities","getLanguages","loadCities","addPersonRequest","getCitiesByCountryId","onFileChange","e","file","files","fileName","fileSize","size","fileType","type","console","log","selectedResumeFile","alert","addPerson","formData","FormData","append","toDateString","JSON","stringify","response","navigate","error","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["D:\\Jashim\\Job\\AngularFullStack\\EIS\\FullStack UI\\FullStack.UI\\src\\app\\components\\add-person\\add-person.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { City } from '../../models/city.model';\r\nimport { Country } from '../../models/country.model';\r\nimport { Language } from '../../models/language.model';\r\nimport { Person } from '../../models/person.model';\r\nimport { CityService } from '../../services/city.service';\r\nimport { CountryService } from '../../services/country.service';\r\nimport { LanguageService } from '../../services/language.service';\r\nimport { PeopleService } from '../../services/people.service';\r\n\r\n//import { HttpEvent, HttpEventType } from '@angular/common/http';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-add-person',\r\n  templateUrl: './add-person.component.html',\r\n  styleUrls: ['./add-person.component.css']\r\n})\r\nexport class AddPersonComponent implements OnInit {\r\n\r\n\r\n  id: string = \"\";\r\n  name: string = \"\";\r\n  country: string = \"\";\r\n  city: string = \"\";\r\n  languageSkills: string = \"\";\r\n  dateOfBirth: Date = new Date(2023, 1, 1);\r\n  resumeFileName: string = \"\";\r\n  languages: Language[] = [];\r\n  cityId: number = 0;\r\n  countryId: number = 0;\r\n  resumeFile!: File;\r\n\r\n/*  languageSkills: string = \"\";*/\r\n\r\n  countries!: Country[];\r\n  cities!: City[];\r\n\r\n  isChecked: boolean = false;\r\n  //languages: Language[] = [];\r\n\r\n\r\n  addPersonForm!: FormGroup;\r\n  selectedResumeFile!: File;\r\n\r\n  addPersonRequest: Person = {\r\n    id: '',\r\n    name: '',\r\n    country: '',\r\n    city: '',\r\n    languageSkills: '',\r\n    dateOfBirth: new Date(2023, 1, 1),\r\n    resumeFileName: '',\r\n    languages: [],\r\n    cityId: 0,\r\n    countryId: 0,\r\n    resumeFile: new File([], '')\r\n\r\n  };\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private personService: PeopleService,\r\n    private router: Router,\r\n    private countryService: CountryService,\r\n    private cityService: CityService,\r\n    private languageService: LanguageService\r\n  ) {\r\n    this.addPersonForm = this.fb.group({\r\n      name: ['', Validators.required],\r\n      country: ['', Validators.required],\r\n      city: ['', Validators.required],\r\n      languageSkills: ['', Validators.required],\r\n      dateOfBirth: ['', Validators.required],\r\n      resumeFileName: ['', Validators.required],\r\n      languages: ['', Validators.required],\r\n      cityId: ['', Validators.required],\r\n      countryId: ['', Validators.required],\r\n      resumeFile: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n\r\n\r\n  //constructor(\r\n  //  private fb: FormBuilder,\r\n  //  private personService: PeopleService,\r\n  //  private router: Router,\r\n  //  private countryService: CountryService,\r\n  //  private cityService: CityService,\r\n  //  private languageService: LanguageService\r\n\r\n\r\n  //) { }\r\n\r\n\r\n  ngOnInit() {\r\n    this.countryService.getCountries().subscribe((data: Country[]) => {\r\n      this.countries = data;\r\n    });\r\n\r\n    this.cityService.getCities().subscribe((data: City[]) => {\r\n      this.cities = data;\r\n    });\r\n\r\n    this.languageService.getLanguages().subscribe((data: Language[]) => {\r\n      this.languages = data;\r\n    });\r\n    this.getLanguages();\r\n    this.loadCities();\r\n  }\r\n\r\n\r\n\r\n  getLanguages() {\r\n    this.languageService.getLanguages().subscribe((data: Language[]) => {\r\n      this.languages = data;\r\n    });\r\n  }\r\n\r\n\r\n  loadCities() {\r\n    this.cities = [];\r\n    this.addPersonRequest.cityId = -1;\r\n    this.cityService.getCitiesByCountryId(this.addPersonRequest.countryId).subscribe((data: City[]) => {\r\n      this.cities = data;\r\n    });\r\n  }\r\n\r\n\r\n\r\n\r\n \r\n  onFileChange(e: any) {\r\n\r\n    const file = e['target'].files[0];\r\n    const fileName = file.name;\r\n    const fileSize = file.size;\r\n    const fileType = file.type;\r\n\r\n\r\n    console.log(fileName);\r\n    console.log(fileSize);\r\n\r\n\r\n    this.selectedResumeFile = file;\r\n    this.addPersonRequest.resumeFile = this.selectedResumeFile;\r\n\r\n    if (fileType === 'application/pdf' || fileType === 'application/msword') {\r\n      this.addPersonRequest.resumeFileName = fileName;\r\n    } else {\r\n      alert('Only pdf or doc files are allowed!');\r\n    }\r\n  }\r\n\r\n\r\n  //addPerson() {\r\n  //  console.log(this.addPersonRequest);\r\n  //  this.personService.addPerson(this.addPersonRequest)\r\n  //    .subscribe({\r\n  //      next: (person) => {\r\n  //        console.log(person);\r\n  //        this.router.navigate(['people']);\r\n\r\n  //      }\r\n  //    });\r\n  //}\r\n\r\n  //addPerson() {\r\n  //  const formData = new FormData();\r\n  //  formData.append('file', this.addPersonRequest.resumeFileName);\r\n  //  formData.append('addPersonRequest', JSON.stringify(this.addPersonRequest));\r\n  //  this.personService.addPerson(formData)\r\n  //    .subscribe({\r\n  //      next: (person) => {\r\n  //        console.log(person);\r\n  //        this.router.navigate(['people']);\r\n  //      },\r\n  //      error: (error) => {\r\n  //        console.log(error);\r\n  //      }\r\n  //    });\r\n  //}\r\n\r\n\r\n\r\n//addPerson() {\r\n//  const formData = new FormData();\r\n//  formData.append('file', this.addPersonRequest.resumeFileName);\r\n//  formData.append('addPersonRequest', JSON.stringify(this.addPersonRequest));\r\n\r\n//  this.personService.addPerson(formData)\r\n//    .subscribe((event: HttpEvent<any>) => {\r\n//      switch (event.type) {\r\n//        case HttpEventType.Sent:\r\n//          console.log('Request sent!');\r\n//          break;\r\n//        case HttpEventType.Response:\r\n//          console.log('Response received!', event.body);\r\n//          if (event.body) {\r\n//            this.router.navigate(['people']);\r\n//          }\r\n//          break;\r\n//      }\r\n//    });\r\n//}\r\n\r\n\r\n  addPerson() {\r\n    const formData = new FormData();\r\n    formData.append('file', this.addPersonRequest.resumeFile);\r\n    formData.append('name', this.addPersonRequest.name);\r\n    formData.append('country', this.addPersonRequest.country);\r\n    formData.append('city', this.addPersonRequest.city);\r\n    formData.append('languageSkills', this.addPersonRequest.languageSkills);\r\n    formData.append('dateOfBirth', this.addPersonRequest.dateOfBirth.toDateString());\r\n\r\n/*    const formData = new FormData();*/\r\n    formData.append('file', this.addPersonRequest.resumeFile);\r\n    formData.append('addPersonRequest', JSON.stringify(this.addPersonRequest));\r\n\r\n\r\n    this.personService.addPerson(formData).subscribe(\r\n      (response) => {\r\n        console.log(response);\r\n        this.router.navigate(['people']);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}