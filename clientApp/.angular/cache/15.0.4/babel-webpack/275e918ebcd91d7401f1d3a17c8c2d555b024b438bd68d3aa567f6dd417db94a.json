{"ast":null,"code":"//import { HttpEvent, HttpEventType } from '@angular/common/http';\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/people.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"../../services/country.service\";\nimport * as i5 from \"../../services/city.service\";\nimport * as i6 from \"../../services/language.service\";\nimport * as i7 from \"@angular/common\";\nfunction AddPersonComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 26);\n    i0.ɵɵtext(1, \"Please Enter Name\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddPersonComponent_option_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 27);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const country_r10 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", country_r10.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(country_r10.name);\n  }\n}\nfunction AddPersonComponent_select_22_option_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 27);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const city_r12 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", city_r12.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(city_r12.name);\n  }\n}\nfunction AddPersonComponent_select_22_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"select\", 28);\n    i0.ɵɵlistener(\"ngModelChange\", function AddPersonComponent_select_22_Template_select_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.addPersonRequest.cityId = $event);\n    });\n    i0.ɵɵelementStart(1, \"option\", 11);\n    i0.ɵɵtext(2, \"Select City\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, AddPersonComponent_select_22_option_3_Template, 2, 2, \"option\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngModel\", ctx_r3.addPersonRequest.cityId);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.cities);\n  }\n}\nfunction AddPersonComponent_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 29)(1, \"div\", 30)(2, \"span\", 31);\n    i0.ɵɵtext(3, \"Loading...\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction AddPersonComponent_div_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 26);\n    i0.ɵɵtext(1, \"Please Select City\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddPersonComponent_div_29_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 32)(1, \"input\", 33);\n    i0.ɵɵlistener(\"ngModelChange\", function AddPersonComponent_div_29_Template_input_ngModelChange_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r17);\n      const language_r15 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(language_r15.isChecked = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"label\", 34);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const language_r15 = ctx.$implicit;\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formControlName\", ctx_r6.languageSkills)(\"ngModel\", language_r15.isChecked)(\"value\", language_r15.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"for\", language_r15.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(language_r15.name);\n  }\n}\nfunction AddPersonComponent_div_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 26);\n    i0.ɵɵtext(1, \"Please Choose at least 1 Language Skill\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddPersonComponent_div_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 26);\n    i0.ɵɵtext(1, \"Please Upload Resume\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddPersonComponent_div_40_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 26);\n    i0.ɵɵtext(1, \"Please Select Birth Date\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class AddPersonComponent {\n  constructor(fb, personService, router, countryService, cityService, languageService) {\n    this.fb = fb;\n    this.personService = personService;\n    this.router = router;\n    this.countryService = countryService;\n    this.cityService = cityService;\n    this.languageService = languageService;\n    //id: string = \"\";\n    //name: string = \"\";\n    //country: string = \"\";\n    //city: string = \"\";\n    //languageSkills: string = \"\";\n    //dateOfBirth: Date = new Date(2023, 1, 1);\n    //resumeFileName: string = \"\";\n    //languages: Language[] = [];\n    //cityId: number = 0;\n    //countryId: number = 0;\n    //resumeFile!: File;\n    this.languageSkills = \"\";\n    this.isChecked = false;\n    this.languages = [];\n    this.addPersonRequest = {\n      id: '',\n      name: '',\n      country: '',\n      city: '',\n      languageSkills: '',\n      dateOfBirth: new Date(2023, 1, 1),\n      resumeFileName: '',\n      languages: [],\n      cityId: 0,\n      countryId: 0,\n      resumeFile: new File([], '')\n    };\n    this.addPersonForm = this.fb.group({\n      name: ['', Validators.required],\n      country: ['', Validators.required],\n      city: ['', Validators.required],\n      languageSkills: ['', Validators.required],\n      dateOfBirth: ['', Validators.required],\n      resumeFileName: ['', Validators.required],\n      languages: ['', Validators.required],\n      cityId: ['', Validators.required],\n      countryId: ['', Validators.required],\n      resumeFile: ['', Validators.required]\n    });\n  }\n  //constructor(\n  //  private fb: FormBuilder,\n  //  private personService: PeopleService,\n  //  private router: Router,\n  //  private countryService: CountryService,\n  //  private cityService: CityService,\n  //  private languageService: LanguageService\n  //) { }\n  ngOnInit() {\n    this.countryService.getCountries().subscribe(data => {\n      this.countries = data;\n    });\n    this.cityService.getCities().subscribe(data => {\n      this.cities = data;\n    });\n    this.languageService.getLanguages().subscribe(data => {\n      this.languages = data;\n    });\n    this.getLanguages();\n    this.loadCities();\n  }\n  getLanguages() {\n    this.languageService.getLanguages().subscribe(data => {\n      this.languages = data;\n    });\n  }\n  loadCities() {\n    this.cities = [];\n    this.addPersonRequest.cityId = -1;\n    this.cityService.getCitiesByCountryId(this.addPersonRequest.countryId).subscribe(data => {\n      this.cities = data;\n    });\n  }\n  onFileChange(e) {\n    const file = e['target'].files[0];\n    const fileName = file.name;\n    const fileSize = file.size;\n    const fileType = file.type;\n    console.log(fileName);\n    console.log(fileSize);\n    this.selectedResumeFile = file;\n    this.addPersonRequest.resumeFile = this.selectedResumeFile;\n    if (fileType === 'application/pdf' || fileType === 'application/msword') {\n      this.addPersonRequest.resumeFileName = fileName;\n    } else {\n      alert('Only pdf or doc files are allowed!');\n    }\n  }\n  //addPerson() {\n  //  console.log(this.addPersonRequest);\n  //  this.personService.addPerson(this.addPersonRequest)\n  //    .subscribe({\n  //      next: (person) => {\n  //        console.log(person);\n  //        this.router.navigate(['people']);\n  //      }\n  //    });\n  //}\n  //addPerson() {\n  //  const formData = new FormData();\n  //  formData.append('file', this.addPersonRequest.resumeFileName);\n  //  formData.append('addPersonRequest', JSON.stringify(this.addPersonRequest));\n  //  this.personService.addPerson(formData)\n  //    .subscribe({\n  //      next: (person) => {\n  //        console.log(person);\n  //        this.router.navigate(['people']);\n  //      },\n  //      error: (error) => {\n  //        console.log(error);\n  //      }\n  //    });\n  //}\n  //addPerson() {\n  //  const formData = new FormData();\n  //  formData.append('file', this.addPersonRequest.resumeFileName);\n  //  formData.append('addPersonRequest', JSON.stringify(this.addPersonRequest));\n  //  this.personService.addPerson(formData)\n  //    .subscribe((event: HttpEvent<any>) => {\n  //      switch (event.type) {\n  //        case HttpEventType.Sent:\n  //          console.log('Request sent!');\n  //          break;\n  //        case HttpEventType.Response:\n  //          console.log('Response received!', event.body);\n  //          if (event.body) {\n  //            this.router.navigate(['people']);\n  //          }\n  //          break;\n  //      }\n  //    });\n  //}\n  addPerson() {\n    //const formData = new FormData();\n    //formData.append('file', this.addPersonRequest.resumeFile);\n    //formData.append('name', this.addPersonRequest.name);\n    //formData.append('country', this.addPersonRequest.country);\n    //formData.append('city', this.addPersonRequest.city);\n    //formData.append('languageSkills', this.addPersonRequest.languageSkills);\n    //formData.append('dateOfBirth', this.addPersonRequest.dateOfBirth.toDateString());\n    const formData = new FormData();\n    formData.append('file', this.addPersonRequest.resumeFile);\n    formData.append('addPersonRequest', JSON.stringify(this.addPersonRequest));\n    this.personService.addPerson(formData).subscribe(response => {\n      console.log(response);\n      this.router.navigate(['people']);\n    }, error => {\n      console.log(error);\n    });\n  }\n}\nAddPersonComponent.ɵfac = function AddPersonComponent_Factory(t) {\n  return new (t || AddPersonComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.PeopleService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.CountryService), i0.ɵɵdirectiveInject(i5.CityService), i0.ɵɵdirectiveInject(i6.LanguageService));\n};\nAddPersonComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddPersonComponent,\n  selectors: [[\"app-add-person\"]],\n  decls: 43,\n  vars: 13,\n  consts: [[1, \"container\", \"my-5\"], [1, \"mb-3\"], [1, \"row\"], [1, \"col-6\"], [3, \"ngSubmit\"], [\"form\", \"ngForm\"], [\"for\", \"name\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"name\", \"name\", \"name\", \"formControlName\", \"name\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"for\", \"country\", 1, \"form-label\"], [\"id\", \"country\", \"name\", \"country\", \"formControlName\", \"country\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [\"value\", \"0\", \"selected\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"city\", 1, \"form-label\"], [\"id\", \"city\", \"class\", \"form-control\", \"name\", \"city\", \"formControlName\", \"city\", 3, \"ngModel\", \"ngModelChange\", 4, \"ngIf\"], [\"class\", \"text-center\", 4, \"ngIf\"], [1, \"mb-6\"], [\"for\", \"languageSkills\", 1, \"form-label\"], [1, \"language-skills-group\", 3, \"ngModelGroup\"], [\"class\", \"language-skill-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"form-group\"], [\"for\", \"file\"], [\"id\", \"resumeFileName\", \"name\", \"resumeFileName\", \"type\", \"file\", \"accept\", \".pdf,.doc\", \"formControlName\", \"resumeFileName\", 1, \"form-control\", 3, \"change\"], [\"for\", \"dateOfBirth\", 1, \"form-label\"], [\"type\", \"date\", \"id\", \"dateOfBirth\", \"name\", \"dateOfBirth\", \"formControlName\", \"dateOfBirth\", 1, \"form-control\", 3, \"value\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [1, \"alert\", \"alert-danger\"], [3, \"value\"], [\"id\", \"city\", \"name\", \"city\", \"formControlName\", \"city\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"text-center\"], [\"role\", \"status\", 1, \"spinner-border\"], [1, \"sr-only\"], [1, \"language-skill-item\"], [\"type\", \"checkbox\", 3, \"formControlName\", \"ngModel\", \"value\", \"ngModelChange\"], [3, \"for\"]],\n  template: function AddPersonComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\", 1);\n      i0.ɵɵtext(2, \"Add New Person\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2)(4, \"div\", 3)(5, \"form\", 4, 5);\n      i0.ɵɵlistener(\"ngSubmit\", function AddPersonComponent_Template_form_ngSubmit_5_listener() {\n        return ctx.addPerson();\n      });\n      i0.ɵɵelementStart(7, \"div\", 1)(8, \"label\", 6);\n      i0.ɵɵtext(9, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function AddPersonComponent_Template_input_ngModelChange_10_listener($event) {\n        return ctx.addPersonRequest.name = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(11, AddPersonComponent_div_11_Template, 2, 0, \"div\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"div\", 1)(13, \"label\", 9);\n      i0.ɵɵtext(14, \"Country\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"select\", 10);\n      i0.ɵɵlistener(\"ngModelChange\", function AddPersonComponent_Template_select_ngModelChange_15_listener($event) {\n        return ctx.addPersonRequest.countryId = $event;\n      })(\"change\", function AddPersonComponent_Template_select_change_15_listener() {\n        return ctx.loadCities();\n      });\n      i0.ɵɵelementStart(16, \"option\", 11);\n      i0.ɵɵtext(17, \"Select Country\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(18, AddPersonComponent_option_18_Template, 2, 2, \"option\", 12);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(19, \"div\", 1)(20, \"label\", 13);\n      i0.ɵɵtext(21, \"City\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(22, AddPersonComponent_select_22_Template, 4, 2, \"select\", 14);\n      i0.ɵɵtemplate(23, AddPersonComponent_div_23_Template, 4, 0, \"div\", 15);\n      i0.ɵɵtemplate(24, AddPersonComponent_div_24_Template, 2, 0, \"div\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"div\", 16)(26, \"label\", 17);\n      i0.ɵɵtext(27, \"Language Skills\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"div\", 18);\n      i0.ɵɵtemplate(29, AddPersonComponent_div_29_Template, 4, 5, \"div\", 19);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(30, AddPersonComponent_div_30_Template, 2, 0, \"div\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(31, \"div\", 20)(32, \"label\", 21);\n      i0.ɵɵtext(33, \"Resume\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(34, \"input\", 22);\n      i0.ɵɵlistener(\"change\", function AddPersonComponent_Template_input_change_34_listener($event) {\n        return ctx.onFileChange($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(35, AddPersonComponent_div_35_Template, 2, 0, \"div\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(36, \"div\", 1)(37, \"label\", 23);\n      i0.ɵɵtext(38, \"Date Of Birth\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(39, \"input\", 24);\n      i0.ɵɵtemplate(40, AddPersonComponent_div_40_Template, 2, 0, \"div\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(41, \"button\", 25);\n      i0.ɵɵtext(42, \"Save\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(6);\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngModel\", ctx.addPersonRequest.name);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", _r0.controls[\"name\"].touched && _r0.controls[\"name\"].invalid);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.addPersonRequest.countryId);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.countries);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.cities);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.cities);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", _r0.controls[\"city\"].touched && _r0.controls[\"city\"].invalid);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModelGroup\", \"languageSkills\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.languages);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", _r0.controls[\"languageSkills\"].touched && _r0.controls[\"languageSkills\"].invalid);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", _r0.controls[\"resumeFileName\"].touched && _r0.controls[\"resumeFileName\"].invalid);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"value\", ctx.addPersonRequest.dateOfBirth);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.addPersonForm.controls[\"dateOfBirth\"].touched && ctx.addPersonForm.controls[\"dateOfBirth\"].invalid);\n    }\n  },\n  dependencies: [i7.NgForOf, i7.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.CheckboxControlValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.NgModelGroup, i1.NgForm, i1.FormControlName],\n  styles: [\".language-skills-group[_ngcontent-%COMP%] {\\r\\n  display: flex;\\r\\n  flex-wrap: wrap;\\r\\n}\\r\\n\\r\\n.language-skill-item[_ngcontent-%COMP%] {\\r\\n  margin: 0 10px 10px 0;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9hZGQtcGVyc29uL2FkZC1wZXJzb24uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQWE7RUFDYixlQUFlO0FBQ2pCOztBQUVBO0VBQ0UscUJBQXFCO0FBQ3ZCOzs7QUFHQTs7Ozs7Ozs7Q0FRQyIsInNvdXJjZXNDb250ZW50IjpbIi5sYW5ndWFnZS1za2lsbHMtZ3JvdXAge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC13cmFwOiB3cmFwO1xyXG59XHJcblxyXG4ubGFuZ3VhZ2Utc2tpbGwtaXRlbSB7XHJcbiAgbWFyZ2luOiAwIDEwcHggMTBweCAwO1xyXG59XHJcblxyXG5cclxuLyouY2hlY2tib3gtaW5saW5lIHtcclxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xyXG59XHJcblxyXG4uY2hlY2tib3gtbGFiZWwge1xyXG4gIG1hcmdpbi1sZWZ0OiA1cHg7XHJcbn1cclxuKi9cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","i0","AddPersonComponent","constructor","fb","personService","router","countryService","cityService","languageService","id","name","country","city","languageSkills","dateOfBirth","Date","resumeFileName","languages","cityId","countryId","resumeFile","File","addPersonForm","group","required","ngOnInit","getCountries","subscribe","data","countries","getCities","cities","getLanguages","loadCities","addPersonRequest","getCitiesByCountryId","onFileChange","e","file","files","fileName","fileSize","size","fileType","type","console","log","selectedResumeFile","alert","addPerson","formData","FormData","append","JSON","stringify","response","navigate","error","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\Jashim\\Job\\AngularFullStack\\EIS\\FullStack UI\\FullStack.UI\\src\\app\\components\\add-person\\add-person.component.ts","D:\\Jashim\\Job\\AngularFullStack\\EIS\\FullStack UI\\FullStack.UI\\src\\app\\components\\add-person\\add-person.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { City } from '../../models/city.model';\r\nimport { Country } from '../../models/country.model';\r\nimport { Language } from '../../models/language.model';\r\nimport { Person } from '../../models/person.model';\r\nimport { CityService } from '../../services/city.service';\r\nimport { CountryService } from '../../services/country.service';\r\nimport { LanguageService } from '../../services/language.service';\r\nimport { PeopleService } from '../../services/people.service';\r\n\r\n//import { HttpEvent, HttpEventType } from '@angular/common/http';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-add-person',\r\n  templateUrl: './add-person.component.html',\r\n  styleUrls: ['./add-person.component.css']\r\n})\r\nexport class AddPersonComponent implements OnInit {\r\n\r\n\r\n  //id: string = \"\";\r\n  //name: string = \"\";\r\n  //country: string = \"\";\r\n  //city: string = \"\";\r\n  //languageSkills: string = \"\";\r\n  //dateOfBirth: Date = new Date(2023, 1, 1);\r\n  //resumeFileName: string = \"\";\r\n  //languages: Language[] = [];\r\n  //cityId: number = 0;\r\n  //countryId: number = 0;\r\n  //resumeFile!: File;\r\n\r\n  languageSkills: string = \"\";\r\n\r\n  countries!: Country[];\r\n  cities!: City[];\r\n\r\n  isChecked: boolean = false;\r\n  languages: Language[] = [];\r\n\r\n\r\n  addPersonForm!: FormGroup;\r\n  selectedResumeFile!: File;\r\n\r\n  addPersonRequest: Person = {\r\n    id: '',\r\n    name: '',\r\n    country: '',\r\n    city: '',\r\n    languageSkills: '',\r\n    dateOfBirth: new Date(2023, 1, 1),\r\n    resumeFileName: '',\r\n    languages: [],\r\n    cityId: 0,\r\n    countryId: 0,\r\n    resumeFile: new File([], '')\r\n\r\n  };\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private personService: PeopleService,\r\n    private router: Router,\r\n    private countryService: CountryService,\r\n    private cityService: CityService,\r\n    private languageService: LanguageService\r\n  ) {\r\n    this.addPersonForm = this.fb.group({\r\n      name: ['', Validators.required],\r\n      country: ['', Validators.required],\r\n      city: ['', Validators.required],\r\n      languageSkills: ['', Validators.required],\r\n      dateOfBirth: ['', Validators.required],\r\n      resumeFileName: ['', Validators.required],\r\n      languages: ['', Validators.required],\r\n      cityId: ['', Validators.required],\r\n      countryId: ['', Validators.required],\r\n      resumeFile: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n\r\n\r\n  //constructor(\r\n  //  private fb: FormBuilder,\r\n  //  private personService: PeopleService,\r\n  //  private router: Router,\r\n  //  private countryService: CountryService,\r\n  //  private cityService: CityService,\r\n  //  private languageService: LanguageService\r\n\r\n\r\n  //) { }\r\n\r\n\r\n  ngOnInit() {\r\n    this.countryService.getCountries().subscribe((data: Country[]) => {\r\n      this.countries = data;\r\n    });\r\n\r\n    this.cityService.getCities().subscribe((data: City[]) => {\r\n      this.cities = data;\r\n    });\r\n\r\n    this.languageService.getLanguages().subscribe((data: Language[]) => {\r\n      this.languages = data;\r\n    });\r\n    this.getLanguages();\r\n    this.loadCities();\r\n  }\r\n\r\n\r\n\r\n  getLanguages() {\r\n    this.languageService.getLanguages().subscribe((data: Language[]) => {\r\n      this.languages = data;\r\n    });\r\n  }\r\n\r\n\r\n  loadCities() {\r\n    this.cities = [];\r\n    this.addPersonRequest.cityId = -1;\r\n    this.cityService.getCitiesByCountryId(this.addPersonRequest.countryId).subscribe((data: City[]) => {\r\n      this.cities = data;\r\n    });\r\n  }\r\n\r\n\r\n\r\n\r\n \r\n  onFileChange(e: any) {\r\n\r\n    const file = e['target'].files[0];\r\n    const fileName = file.name;\r\n    const fileSize = file.size;\r\n    const fileType = file.type;\r\n\r\n\r\n    console.log(fileName);\r\n    console.log(fileSize);\r\n\r\n\r\n    this.selectedResumeFile = file;\r\n    this.addPersonRequest.resumeFile = this.selectedResumeFile;\r\n\r\n    if (fileType === 'application/pdf' || fileType === 'application/msword') {\r\n      this.addPersonRequest.resumeFileName = fileName;\r\n    } else {\r\n      alert('Only pdf or doc files are allowed!');\r\n    }\r\n  }\r\n\r\n\r\n  //addPerson() {\r\n  //  console.log(this.addPersonRequest);\r\n  //  this.personService.addPerson(this.addPersonRequest)\r\n  //    .subscribe({\r\n  //      next: (person) => {\r\n  //        console.log(person);\r\n  //        this.router.navigate(['people']);\r\n\r\n  //      }\r\n  //    });\r\n  //}\r\n\r\n  //addPerson() {\r\n  //  const formData = new FormData();\r\n  //  formData.append('file', this.addPersonRequest.resumeFileName);\r\n  //  formData.append('addPersonRequest', JSON.stringify(this.addPersonRequest));\r\n  //  this.personService.addPerson(formData)\r\n  //    .subscribe({\r\n  //      next: (person) => {\r\n  //        console.log(person);\r\n  //        this.router.navigate(['people']);\r\n  //      },\r\n  //      error: (error) => {\r\n  //        console.log(error);\r\n  //      }\r\n  //    });\r\n  //}\r\n\r\n\r\n\r\n//addPerson() {\r\n//  const formData = new FormData();\r\n//  formData.append('file', this.addPersonRequest.resumeFileName);\r\n//  formData.append('addPersonRequest', JSON.stringify(this.addPersonRequest));\r\n\r\n//  this.personService.addPerson(formData)\r\n//    .subscribe((event: HttpEvent<any>) => {\r\n//      switch (event.type) {\r\n//        case HttpEventType.Sent:\r\n//          console.log('Request sent!');\r\n//          break;\r\n//        case HttpEventType.Response:\r\n//          console.log('Response received!', event.body);\r\n//          if (event.body) {\r\n//            this.router.navigate(['people']);\r\n//          }\r\n//          break;\r\n//      }\r\n//    });\r\n//}\r\n\r\n\r\n  addPerson() {\r\n    //const formData = new FormData();\r\n    //formData.append('file', this.addPersonRequest.resumeFile);\r\n    //formData.append('name', this.addPersonRequest.name);\r\n    //formData.append('country', this.addPersonRequest.country);\r\n    //formData.append('city', this.addPersonRequest.city);\r\n    //formData.append('languageSkills', this.addPersonRequest.languageSkills);\r\n    //formData.append('dateOfBirth', this.addPersonRequest.dateOfBirth.toDateString());\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', this.addPersonRequest.resumeFile);\r\n    formData.append('addPersonRequest', JSON.stringify(this.addPersonRequest));\r\n\r\n\r\n    this.personService.addPerson(formData).subscribe(\r\n      (response) => {\r\n        console.log(response);\r\n        this.router.navigate(['people']);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n\r\n","<div class=\"container my-5\">\r\n  <h1 class=\"mb-3\">Add New Person</h1>\r\n\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-6\">\r\n      <form #form=\"ngForm\" (ngSubmit)=\"addPerson()\">\r\n        <div class=\"mb-3\">\r\n          <label for=\"name\" class=\"form-label\">Name</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"name\"\r\n                 name=\"name\" [(ngModel)]=\"addPersonRequest.name\" formControlName=\"name\">\r\n          <div class=\"alert alert-danger\" *ngIf=\"form.controls['name'].touched && form.controls['name'].invalid\">Please Enter Name</div>\r\n        </div>\r\n\r\n\r\n        <div class=\"mb-3\">\r\n          <label for=\"country\" class=\"form-label\">Country</label>\r\n          <select id=\"country\" class=\"form-control\" name=\"country\" [(ngModel)]=\"addPersonRequest.countryId\" (change)=\"loadCities()\" formControlName=\"country\">\r\n            <option value=\"0\" selected>Select Country</option>\r\n            <option *ngFor=\"let country of countries\" [value]=\"country.id\">{{country.name}}</option>\r\n          </select>\r\n          <!--<div class=\"alert alert-danger\" *ngIf=\"form.controls['country'].touched && form.controls['country'].invalid\">Please Select Country</div>-->\r\n        </div>\r\n\r\n\r\n        <div class=\"mb-3\">\r\n          <label for=\"city\" class=\"form-label\">City</label>\r\n          <select id=\"city\" class=\"form-control\" name=\"city\" [(ngModel)]=\"addPersonRequest.cityId\" *ngIf=\"cities\" formControlName=\"city\">\r\n            <option value=\"0\" selected>Select City</option>\r\n            <option *ngFor=\"let city of cities\" [value]=\"city.id\">{{city.name}}</option>\r\n          </select>\r\n          <div class=\"text-center\" *ngIf=\"!cities\">\r\n            <div class=\"spinner-border\" role=\"status\">\r\n              <span class=\"sr-only\">Loading...</span>\r\n            </div>\r\n          </div>\r\n          <div class=\"alert alert-danger\" *ngIf=\"form.controls['city'].touched && form.controls['city'].invalid\">Please Select City</div>\r\n        </div>\r\n\r\n\r\n        <div class=\"mb-6\">\r\n          <label for=\"languageSkills\" class=\"form-label\">Language Skills</label>\r\n          <div [ngModelGroup]=\"'languageSkills'\" class=\"language-skills-group\">\r\n            <div *ngFor=\"let language of languages\" class=\"language-skill-item\">\r\n              <!--<input type=\"checkbox\" [checked]=\"language.isChecked\" id=\"{{language.name}}\"\r\n              [(ngModel)]=\"addPersonRequest.languageSkills\" [value]=\"language.id\" [ngModelOptions]=\"{standalone: true}\">-->\r\n              <!--<input type=\"checkbox\" [checked]=\"language.isChecked\" id=\"{{language.name}}\"\r\n              [(ngModel)]=\"language.isChecked\" [value]=\"language.id\" [ngModelOptions]=\"{standalone: true}\" formControlName=\"languageSkills\">-->\r\n              <input type=\"checkbox\" [formControlName]=\"languageSkills\" [(ngModel)]=\"language.isChecked\" [value]=\"language.id\">\r\n\r\n              <label for=\"{{language.name}}\">{{language.name}}</label>\r\n            </div>\r\n          </div>\r\n          <div class=\"alert alert-danger\" *ngIf=\"form.controls['languageSkills'].touched && form.controls['languageSkills'].invalid\">Please Choose at least 1 Language Skill</div>\r\n        </div>\r\n\r\n\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"file\">Resume</label>\r\n          <!--<input formControlName=\"file\"-->\r\n          <input id=\"resumeFileName\"\r\n                 name=\"resumeFileName\"\r\n                 type=\"file\"\r\n                 class=\"form-control\"\r\n                 (change)=\"onFileChange($event)\"\r\n                 accept=\".pdf,.doc\"\r\n                 formControlName=\"resumeFileName\">\r\n          <div class=\"alert alert-danger\" *ngIf=\"form.controls['resumeFileName'].touched && form.controls['resumeFileName'].invalid\">Please Upload Resume</div>\r\n        </div>\r\n\r\n\r\n\r\n        <div class=\"mb-3\">\r\n          <label for=\"dateOfBirth\" class=\"form-label\">Date Of Birth</label>\r\n          <!--<input type=\"date\" class=\"form-control\" id=\"dateOfBirth\"\r\n          [(ngModel)]=\"addPersonRequest.dateOfBirth\" [formControl]=\"addPersonForm.controls['dateOfBirth']\">-->\r\n          <input type=\"date\" class=\"form-control\" id=\"dateOfBirth\" name=\"dateOfBirth\" [value]=\"addPersonRequest.dateOfBirth\" formControlName=\"dateOfBirth\">\r\n          <div class=\"alert alert-danger\" *ngIf=\"addPersonForm.controls['dateOfBirth'].touched && addPersonForm.controls['dateOfBirth'].invalid\">Please Select Birth Date</div>\r\n        </div>\r\n\r\n\r\n        <button type=\"submit\" class=\"btn btn-primary\">Save</button>\r\n\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}