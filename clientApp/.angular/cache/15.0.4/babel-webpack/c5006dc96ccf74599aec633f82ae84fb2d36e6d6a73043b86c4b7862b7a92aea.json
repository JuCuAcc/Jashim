{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../services/people.service\";\nimport * as i3 from \"@angular/forms\";\nexport class EditPersonComponent {\n  constructor(route, personService, router) {\n    this.route = route;\n    this.personService = personService;\n    this.router = router;\n    this.personDetails = {\n      id: '',\n      name: '',\n      country: '',\n      city: '',\n      languageSkills: '',\n      dateOfBirth: new Date(2023, 1, 1),\n      resumeFileName: '',\n      languages: [],\n      cityId: 0,\n      countryId: 0,\n      resumeFile: new File([], '')\n    };\n  }\n  ngOnInit() {\n    this.route.paramMap.subscribe({\n      next: params => {\n        const id = params.get('id');\n        if (id) {\n          // call api using service\n          this.personService.getPerson(id).subscribe({\n            next: response => {\n              this.personDetails = response;\n            }\n          });\n        }\n      }\n    });\n  }\n  updatePerson() {\n    this.personService.updatePerson(this.personDetails.id, this.personDetails).subscribe({\n      next: response => {\n        this.router.navigate(['people']);\n      }\n    });\n  }\n  deletePerson(id) {\n    this.personService.deletePerson(id).subscribe({\n      next: response => {\n        this.router.navigate(['people']);\n      }\n    });\n  }\n}\nEditPersonComponent.ɵfac = function EditPersonComponent_Factory(t) {\n  return new (t || EditPersonComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.PeopleService), i0.ɵɵdirectiveInject(i1.Router));\n};\nEditPersonComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EditPersonComponent,\n  selectors: [[\"app-edit-person\"]],\n  decls: 39,\n  vars: 7,\n  consts: [[1, \"container\", \"my-5\"], [1, \"mb-3\"], [1, \"row\"], [1, \"col-6\"], [3, \"ngSubmit\"], [\"form\", \"ngForm\"], [\"for\", \"id\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"id\", \"readonly\", \"\", \"name\", \"id\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"name\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"name\", \"name\", \"name\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"country\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"country\", \"name\", \"country\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"city\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"city\", \"name\", \"city\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"languageSkills\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"languageSkills\", \"name\", \"languageSkills\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"resumeFileName\", 1, \"form-label\"], [\"type\", \"file\", \"id\", \"resumeFileName\", \"name\", \"resumeFileName\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"dateOfBirth\", 1, \"form-label\"], [\"type\", \"date\", \"id\", \"dateOfBirth\", \"name\", \"dateOfBirth\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"mr-5\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", 3, \"click\"]],\n  template: function EditPersonComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\", 1);\n      i0.ɵɵtext(2, \"Edit Person\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2)(4, \"div\", 3)(5, \"form\", 4, 5);\n      i0.ɵɵlistener(\"ngSubmit\", function EditPersonComponent_Template_form_ngSubmit_5_listener() {\n        return ctx.updatePerson();\n      });\n      i0.ɵɵelementStart(7, \"div\", 1)(8, \"label\", 6);\n      i0.ɵɵtext(9, \"Id\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function EditPersonComponent_Template_input_ngModelChange_10_listener($event) {\n        return ctx.personDetails.id = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"div\", 1)(12, \"label\", 8);\n      i0.ɵɵtext(13, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"input\", 9);\n      i0.ɵɵlistener(\"ngModelChange\", function EditPersonComponent_Template_input_ngModelChange_14_listener($event) {\n        return ctx.personDetails.name = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"div\", 1)(16, \"label\", 10);\n      i0.ɵɵtext(17, \"Country\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"input\", 11);\n      i0.ɵɵlistener(\"ngModelChange\", function EditPersonComponent_Template_input_ngModelChange_18_listener($event) {\n        return ctx.personDetails.country = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(19, \"div\", 1)(20, \"label\", 12);\n      i0.ɵɵtext(21, \"City\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"input\", 13);\n      i0.ɵɵlistener(\"ngModelChange\", function EditPersonComponent_Template_input_ngModelChange_22_listener($event) {\n        return ctx.personDetails.city = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(23, \"div\", 1)(24, \"label\", 14);\n      i0.ɵɵtext(25, \"Language Skills\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"input\", 15);\n      i0.ɵɵlistener(\"ngModelChange\", function EditPersonComponent_Template_input_ngModelChange_26_listener($event) {\n        return ctx.personDetails.languageSkills = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(27, \"div\", 1)(28, \"label\", 16);\n      i0.ɵɵtext(29, \"Resume\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"input\", 17);\n      i0.ɵɵlistener(\"ngModelChange\", function EditPersonComponent_Template_input_ngModelChange_30_listener($event) {\n        return ctx.personDetails.resumeFileName = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(31, \"div\", 1)(32, \"label\", 18);\n      i0.ɵɵtext(33, \"Date Of Birth\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(34, \"input\", 19);\n      i0.ɵɵlistener(\"ngModelChange\", function EditPersonComponent_Template_input_ngModelChange_34_listener($event) {\n        return ctx.personDetails.dateOfBirth = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(35, \"button\", 20);\n      i0.ɵɵtext(36, \"Save\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(37, \"button\", 21);\n      i0.ɵɵlistener(\"click\", function EditPersonComponent_Template_button_click_37_listener() {\n        return ctx.deletePerson(ctx.personDetails.id);\n      });\n      i0.ɵɵtext(38, \"Delete\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngModel\", ctx.personDetails.id);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.personDetails.name);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.personDetails.country);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.personDetails.city);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.personDetails.languageSkills);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.personDetails.resumeFileName);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.personDetails.dateOfBirth);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["EditPersonComponent","constructor","route","personService","router","id","name","country","city","languageSkills","dateOfBirth","Date","resumeFileName","languages","cityId","countryId","resumeFile","File","ngOnInit","paramMap","subscribe","next","params","get","getPerson","response","personDetails","updatePerson","navigate","deletePerson","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["D:\\Jashim\\Job\\AngularFullStack\\EIS\\FullStack UI\\FullStack.UI\\src\\app\\components\\edit-person\\edit-person.component.ts","D:\\Jashim\\Job\\AngularFullStack\\EIS\\FullStack UI\\FullStack.UI\\src\\app\\components\\edit-person\\edit-person.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Person } from '../../models/person.model';\nimport { PeopleService } from '../../services/people.service';\n\n@Component({\n  selector: 'app-edit-person',\n  templateUrl: './edit-person.component.html',\n  styleUrls: ['./edit-person.component.css']\n})\nexport class EditPersonComponent {\n\n  personDetails: Person = {\n    id: '',\n    name: '',\n    country: '',\n    city: '',\n    languageSkills: '',\n    dateOfBirth: new Date(2023, 1, 1),\n    resumeFileName: '',\n    languages: [],\n    cityId: 0,\n    countryId: 0,\n    resumeFile: new File([], '')\n\n  };\n    \n  constructor(private route: ActivatedRoute, private personService: PeopleService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe({\n      next: (params) => {\n        const id = params.get('id');\n        if (id) {\n          // call api using service\n          this.personService.getPerson(id).subscribe({\n            next: (response) => {\n              this.personDetails = response;\n            }\n          });\n        }\n      }\n    })\n  }\n\n  updatePerson() {\n    this.personService.updatePerson(this.personDetails.id, this.personDetails)\n      .subscribe({\n        next: (response) => {\n          this.router.navigate(['people']);\n        }\n      });\n  }\n\n\n\n  deletePerson(id: string) {\n    this.personService.deletePerson(id)\n      .subscribe({\n        next: (response) => {\n          this.router.navigate(['people']);\n        }\n      });\n  }\n}\n\n","<div class=\"container my-5\">\r\n  <h1 class=\"mb-3\">Edit Person</h1>\r\n\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-6\">\r\n      <form #form=\"ngForm\" (ngSubmit)=\"updatePerson()\">\r\n        <div class=\"mb-3\">\r\n          <label for=\"id\" class=\"form-label\">Id</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"id\" readonly\r\n                 name=\"id\" [(ngModel)]=\"personDetails.id\">\r\n        </div>\r\n\r\n        <div class=\"mb-3\">\r\n          <label for=\"name\" class=\"form-label\">Name</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"name\"\r\n                 name=\"name\" [(ngModel)]=\"personDetails.name\">\r\n        </div>\r\n\r\n        <div class=\"mb-3\">\r\n          <label for=\"country\" class=\"form-label\">Country</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"country\"\r\n                 name=\"country\" [(ngModel)]=\"personDetails.country\">\r\n        </div>\r\n\r\n        <div class=\"mb-3\">\r\n          <label for=\"city\" class=\"form-label\">City</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"city\"\r\n                 name=\"city\" [(ngModel)]=\"personDetails.city\">\r\n        </div>\r\n\r\n\r\n        <div class=\"mb-3\">\r\n          <label for=\"languageSkills\" class=\"form-label\">Language Skills</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"languageSkills\"\r\n                 name=\"languageSkills\" [(ngModel)]=\"personDetails.languageSkills\">\r\n        </div>\r\n\r\n\r\n        <div class=\"mb-3\">\r\n          <label for=\"resumeFileName\" class=\"form-label\">Resume</label>\r\n          <input type=\"file\" class=\"form-control\" id=\"resumeFileName\"\r\n                 name=\"resumeFileName\" [(ngModel)]=\"personDetails.resumeFileName\">\r\n        </div>\r\n\r\n        <div class=\"mb-3\">\r\n          <label for=\"dateOfBirth\" class=\"form-label\">Date Of Birth</label>\r\n          <input type=\"date\" class=\"form-control\" id=\"dateOfBirth\"\r\n                 name=\"dateOfBirth\" [(ngModel)]=\"personDetails.dateOfBirth\">\r\n        </div>\r\n\r\n        <button type=\"submit\" class=\"btn btn-primary mr-5\">Save</button>\r\n\r\n        <button type=\"button\" class=\"btn btn-danger\" (click)=\"deletePerson(personDetails.id)\">Delete</button>\r\n\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}