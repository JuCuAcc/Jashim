{"ast":null,"code":"import { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PeopleService {\n  constructor(http) {\n    this.http = http;\n    this.baseApiUrl = environment.baseApiUrl;\n  }\n  getAllPeople() {\n    return this.http.get(this.baseApiUrl + '/api/people');\n  }\n  addPerson(addPersonRequest) {\n    addPersonRequest.id = '00000000-0000-0000-0000-000000000000';\n    return this.http.post(this.baseApiUrl + '/api/people', addPersonRequest);\n  }\n  //addPerson(formData: FormData): Observable<any> {\n  //  const headers = new HttpHeaders({ 'enctype': 'multipart/form-data' });\n  //  return this.http.post<any>(`${this.baseApiUrl}/api/people`, formData, { headers });\n  //}\n  getPerson(id) {\n    return this.http.get(this.baseApiUrl + '/api/people/' + id);\n  }\n  updatePerson(id, updatePersonRequest) {\n    return this.http.put(this.baseApiUrl + '/api/people/' + id, updatePersonRequest);\n  }\n  deletePerson(id) {\n    return this.http.delete(this.baseApiUrl + '/api/people/' + id);\n  }\n}\nPeopleService.ɵfac = function PeopleService_Factory(t) {\n  return new (t || PeopleService)(i0.ɵɵinject(i1.HttpClient));\n};\nPeopleService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: PeopleService,\n  factory: PeopleService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAGA,SAASA,WAAW,QAAQ,gCAAgC;;;AAM5D,OAAM,MAAOC,aAAa;EAGxBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IADxB,eAAU,GAAWH,WAAW,CAACI,UAAU;EACH;EAExCC,YAAY;IACV,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAW,IAAI,CAACF,UAAU,GAAG,aAAa,CAAC;EACjE;EAEAG,SAAS,CAACC,gBAAwB;IAChCA,gBAAgB,CAACC,EAAE,GAAG,sCAAsC;IAC5D,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAS,IAAI,CAACN,UAAU,GAAG,aAAa,EAAEI,gBAAgB,CAAC;EAElF;EAEA;EACA;EACA;EACA;EAEAG,SAAS,CAACF,EAAU;IAClB,OAAO,IAAI,CAACN,IAAI,CAACG,GAAG,CAAS,IAAI,CAACF,UAAU,GAAG,cAAc,GAAGK,EAAE,CAAC;EACrE;EAEAG,YAAY,CAACH,EAAU,EAAEI,mBAA2B;IAClD,OAAO,IAAI,CAACV,IAAI,CAACW,GAAG,CAAS,IAAI,CAACV,UAAU,GAAG,cAAc,GAAGK,EAAE,EAAEI,mBAAmB,CAAC;EAC1F;EAEAE,YAAY,CAACN,EAAU;IACrB,OAAO,IAAI,CAACN,IAAI,CAACa,MAAM,CAAS,IAAI,CAACZ,UAAU,GAAG,cAAc,GAAGK,EAAE,CAAC;EACxE;;AA9BWR,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;SAAbA,aAAa;EAAAgB,SAAbhB,aAAa;EAAAiB,YAFZ;AAAM","names":["environment","PeopleService","constructor","http","baseApiUrl","getAllPeople","get","addPerson","addPersonRequest","id","post","getPerson","updatePerson","updatePersonRequest","put","deletePerson","delete","factory","providedIn"],"sourceRoot":"","sources":["D:\\Jashim\\Job\\AngularFullStack\\EIS\\FullStack UI\\FullStack.UI\\src\\app\\services\\people.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';\nimport { Person } from '../models/person.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PeopleService {\n\n  baseApiUrl: string = environment.baseApiUrl;\n  constructor(private http: HttpClient) { }\n\n  getAllPeople(): Observable<Person[]> {\n    return this.http.get<Person[]>(this.baseApiUrl + '/api/people');\n  }\n\n  addPerson(addPersonRequest: Person): Observable<Person> {\n    addPersonRequest.id = '00000000-0000-0000-0000-000000000000';\n    return this.http.post<Person>(this.baseApiUrl + '/api/people', addPersonRequest);\n\n  }\n\n  //addPerson(formData: FormData): Observable<any> {\n  //  const headers = new HttpHeaders({ 'enctype': 'multipart/form-data' });\n  //  return this.http.post<any>(`${this.baseApiUrl}/api/people`, formData, { headers });\n  //}\n\n  getPerson(id: string): Observable<Person> {\n    return this.http.get<Person>(this.baseApiUrl + '/api/people/' + id);\n  }\n\n  updatePerson(id: string, updatePersonRequest: Person): Observable<Person> {\n    return this.http.put<Person>(this.baseApiUrl + '/api/people/' + id, updatePersonRequest);\n  }\n\n  deletePerson(id: string): Observable<Person> {\n    return this.http.delete<Person>(this.baseApiUrl + '/api/people/' + id);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}