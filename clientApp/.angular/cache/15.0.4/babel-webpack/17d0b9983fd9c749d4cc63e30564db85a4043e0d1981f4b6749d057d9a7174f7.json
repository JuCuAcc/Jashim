{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet AddPersonComponent = class AddPersonComponent {\n  //constructor(\n  //  private fb: FormBuilder,\n  //  private personService: PeopleService,\n  //  private router: Router,\n  //  private countryService: CountryService,\n  //  private cityService: CityService,\n  //  private languageService: LanguageService\n  //) {\n  //  this.addPersonForm = this.fb.group({\n  //    name: ['', Validators.required],\n  //    country: ['', Validators.required],\n  //    city: ['', Validators.required],\n  //    languageSkills: ['', Validators.required],\n  //    dateOfBirth: ['', Validators.required],\n  //    resumeFileName: ['', Validators.required],\n  //    languages: ['', Validators.required],\n  //    cityId: ['', Validators.required],\n  //    countryId: ['', Validators.required],\n  //    resumeFile: ['', Validators.required],\n  //  });\n  //}\n  constructor(fb, personService, router, countryService, cityService, languageService, http) {\n    this.fb = fb;\n    this.personService = personService;\n    this.router = router;\n    this.countryService = countryService;\n    this.cityService = cityService;\n    this.languageService = languageService;\n    this.http = http;\n    this.languageSkills = \"\";\n    this.isChecked = false;\n    this.languages = [];\n    this.addPersonRequest = {\n      id: '',\n      name: '',\n      country: '',\n      city: '',\n      languageSkills: '',\n      dateOfBirth: new Date(2023, 1, 1),\n      resumeFileName: '',\n      languages: [],\n      cityId: 0,\n      countryId: 0,\n      resumeFile: new File([], '')\n    };\n  }\n  ngOnInit() {\n    this.countryService.getCountries().subscribe(data => {\n      this.countries = data;\n    });\n    this.cityService.getCities().subscribe(data => {\n      this.cities = data;\n    });\n    this.languageService.getLanguages().subscribe(data => {\n      this.languages = data;\n    });\n    this.getLanguages();\n    this.loadCities();\n  }\n  getLanguages() {\n    this.languageService.getLanguages().subscribe(data => {\n      this.languages = data;\n    });\n  }\n  loadCities() {\n    this.cities = [];\n    this.addPersonRequest.cityId = -1;\n    this.cityService.getCitiesByCountryId(this.addPersonRequest.countryId).subscribe(data => {\n      this.cities = data;\n    });\n  }\n  //onFileSelected(event: any) {\n  //  this.selectedResumeFile = <File>event.target.files[0];\n  //}\n  //onUpload() {\n  //  const fd = new FormData();\n  //  fd.append('image', this.selectedResumeFile, this.selectedResumeFile.name);\n  //  this.http.post('https://localhost:7043/api/File', fd).subscribe(res => {\n  //    console.log(res);\n  //  });\n  //}\n  //onFileChange(e: any) {\n  //  const file = e['target'].files[0];\n  //  const fileName = file.name;\n  //  const fileSize = file.size;\n  //  const fileType = file.type;\n  //  console.log(fileName);\n  //  console.log(fileSize);\n  //  this.selectedResumeFile = file;\n  //  this.addPersonRequest.resumeFile = this.selectedResumeFile;\n  //  if (fileType === 'application/pdf' || fileType === 'application/msword') {\n  //    this.addPersonRequest.resumeFileName = fileName;\n  //  } else {\n  //    alert('Only pdf or doc files are allowed!');\n  //  }\n  //}\n  //addPerson() {\n  //  const formData = new FormData();\n  //  formData.append('file', this.addPersonRequest.resumeFile);\n  //  formData.append('name', this.addPersonRequest.name);\n  //  formData.append('country', this.addPersonRequest.country);\n  //  formData.append('city', this.addPersonRequest.city);\n  //  formData.append('languageSkills', this.addPersonRequest.languageSkills);\n  //  formData.append('dateOfBirth', this.addPersonRequest.dateOfBirth.toDateString());\n  //  //const formData = new FormData();\n  //  //formData.append('file', this.addPersonRequest.resumeFile);\n  //  //formData.append('addPersonRequest', JSON.stringify(this.addPersonRequest));\n  //  this.personService.addPerson(formData).subscribe(\n  //    (response) => {\n  //      console.log(response);\n  //      this.router.navigate(['people']);\n  //    },\n  //    (error) => {\n  //      console.log(error);\n  //    }\n  //  );\n  //}\n  onFileSelected(event) {\n    this.selectedResumeFile = event.target.files[0];\n  }\n  //onSubmit(personForm: NgForm) {\n  //  const fd = new FormData();\n  //  fd.append('Name', personForm.value.Name);\n  //  fd.append('Country', personForm.value.Country);\n  //  fd.append('City', personForm.value.City);\n  //  fd.append('LanguageSkills', personForm.value.LanguageSkills);\n  //  fd.append('DateOfBirth', personForm.value.DateOfBirth);\n  //  fd.append('Languages', personForm.value.Languages);\n  //  fd.append('Resume', this.selectedResumeFile, this.selectedResumeFile.name);\n  //  this.http.post('https://localhost:7043/api/People', fd).subscribe(res => {\n  //    console.log(res);\n  //  });\n  //}\n  onSubmit() {\n    const fd = new FormData();\n    fd.append('addPersonRequest', JSON.stringify(this.addPersonRequest));\n    fd.append('resume', this.selectedResumeFile, this.selectedResumeFile.name);\n    this.http.post('https://localhost:7043/api/People', fd).subscribe(res => {\n      console.log(res);\n    });\n  }\n};\nAddPersonComponent = __decorate([Component({\n  selector: 'app-add-person',\n  templateUrl: './add-person.component.html',\n  styleUrls: ['./add-person.component.css']\n})], AddPersonComponent);\nexport { AddPersonComponent };","map":{"version":3,"mappings":"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","names":["Component","AddPersonComponent","constructor","fb","personService","router","countryService","cityService","languageService","http","id","name","country","city","languageSkills","dateOfBirth","Date","resumeFileName","languages","cityId","countryId","resumeFile","File","ngOnInit","getCountries","subscribe","data","countries","getCities","cities","getLanguages","loadCities","addPersonRequest","getCitiesByCountryId","onFileSelected","event","selectedResumeFile","target","files","onSubmit","fd","FormData","append","JSON","stringify","post","res","console","log","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["D:\\Jashim\\Job\\AngularFullStack\\EIS\\FullStack UI\\FullStack.UI\\src\\app\\components\\add-person\\add-person.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { City } from '../../models/city.model';\r\nimport { Country } from '../../models/country.model';\r\nimport { Language } from '../../models/language.model';\r\nimport { Person } from '../../models/person.model';\r\nimport { CityService } from '../../services/city.service';\r\nimport { CountryService } from '../../services/country.service';\r\nimport { LanguageService } from '../../services/language.service';\r\nimport { PeopleService } from '../../services/people.service';\r\n\r\nimport { HttpClient} from '@angular/common/http';\r\nimport { FormBuilder, FormGroup, NgForm } from '@angular/forms';\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-add-person',\r\n  templateUrl: './add-person.component.html',\r\n  styleUrls: ['./add-person.component.css']\r\n})\r\nexport class AddPersonComponent implements OnInit {\r\n\r\n\r\n  languageSkills: string = \"\";\r\n\r\n  countries!: Country[];\r\n  cities!: City[];\r\n\r\n  isChecked: boolean = false;\r\n  languages: Language[] = [];\r\n\r\n\r\n  addPersonForm!: FormGroup;\r\n  selectedResumeFile!: File;\r\n\r\n  addPersonRequest: Person = {\r\n    id: '',\r\n    name: '',\r\n    country: '',\r\n    city: '',\r\n    languageSkills: '',\r\n    dateOfBirth: new Date(2023, 1, 1),\r\n    resumeFileName: '',\r\n    languages: [],\r\n    cityId: 0,\r\n    countryId: 0,\r\n    resumeFile: new File([], '')\r\n\r\n  };\r\n\r\n  //constructor(\r\n  //  private fb: FormBuilder,\r\n  //  private personService: PeopleService,\r\n  //  private router: Router,\r\n  //  private countryService: CountryService,\r\n  //  private cityService: CityService,\r\n  //  private languageService: LanguageService\r\n  //) {\r\n  //  this.addPersonForm = this.fb.group({\r\n  //    name: ['', Validators.required],\r\n  //    country: ['', Validators.required],\r\n  //    city: ['', Validators.required],\r\n  //    languageSkills: ['', Validators.required],\r\n  //    dateOfBirth: ['', Validators.required],\r\n  //    resumeFileName: ['', Validators.required],\r\n  //    languages: ['', Validators.required],\r\n  //    cityId: ['', Validators.required],\r\n  //    countryId: ['', Validators.required],\r\n  //    resumeFile: ['', Validators.required],\r\n  //  });\r\n  //}\r\n\r\n\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private personService: PeopleService,\r\n    private router: Router,\r\n    private countryService: CountryService,\r\n    private cityService: CityService,\r\n    private languageService: LanguageService,\r\n    private http: HttpClient\r\n\r\n  ) { }\r\n\r\n\r\n  ngOnInit() {\r\n    this.countryService.getCountries().subscribe((data: Country[]) => {\r\n      this.countries = data;\r\n    });\r\n\r\n    this.cityService.getCities().subscribe((data: City[]) => {\r\n      this.cities = data;\r\n    });\r\n\r\n    this.languageService.getLanguages().subscribe((data: Language[]) => {\r\n      this.languages = data;\r\n    });\r\n    this.getLanguages();\r\n    this.loadCities();\r\n  }\r\n\r\n\r\n\r\n  getLanguages() {\r\n    this.languageService.getLanguages().subscribe((data: Language[]) => {\r\n      this.languages = data;\r\n    });\r\n  }\r\n\r\n\r\n  loadCities() {\r\n    this.cities = [];\r\n    this.addPersonRequest.cityId = -1;\r\n    this.cityService.getCitiesByCountryId(this.addPersonRequest.countryId).subscribe((data: City[]) => {\r\n      this.cities = data;\r\n    });\r\n  }\r\n\r\n\r\n  //onFileSelected(event: any) {\r\n  //  this.selectedResumeFile = <File>event.target.files[0];\r\n  //}\r\n\r\n  //onUpload() {\r\n  //  const fd = new FormData();\r\n  //  fd.append('image', this.selectedResumeFile, this.selectedResumeFile.name);\r\n  //  this.http.post('https://localhost:7043/api/File', fd).subscribe(res => {\r\n  //    console.log(res);\r\n  //  });\r\n  //}\r\n\r\n  //onFileChange(e: any) {\r\n\r\n  //  const file = e['target'].files[0];\r\n  //  const fileName = file.name;\r\n  //  const fileSize = file.size;\r\n  //  const fileType = file.type;\r\n\r\n\r\n  //  console.log(fileName);\r\n  //  console.log(fileSize);\r\n\r\n\r\n  //  this.selectedResumeFile = file;\r\n  //  this.addPersonRequest.resumeFile = this.selectedResumeFile;\r\n\r\n  //  if (fileType === 'application/pdf' || fileType === 'application/msword') {\r\n  //    this.addPersonRequest.resumeFileName = fileName;\r\n  //  } else {\r\n  //    alert('Only pdf or doc files are allowed!');\r\n  //  }\r\n  //}\r\n\r\n  //addPerson() {\r\n  //  const formData = new FormData();\r\n  //  formData.append('file', this.addPersonRequest.resumeFile);\r\n  //  formData.append('name', this.addPersonRequest.name);\r\n  //  formData.append('country', this.addPersonRequest.country);\r\n  //  formData.append('city', this.addPersonRequest.city);\r\n  //  formData.append('languageSkills', this.addPersonRequest.languageSkills);\r\n  //  formData.append('dateOfBirth', this.addPersonRequest.dateOfBirth.toDateString());\r\n\r\n  //  //const formData = new FormData();\r\n  //  //formData.append('file', this.addPersonRequest.resumeFile);\r\n  //  //formData.append('addPersonRequest', JSON.stringify(this.addPersonRequest));\r\n\r\n\r\n  //  this.personService.addPerson(formData).subscribe(\r\n  //    (response) => {\r\n  //      console.log(response);\r\n  //      this.router.navigate(['people']);\r\n  //    },\r\n  //    (error) => {\r\n  //      console.log(error);\r\n  //    }\r\n  //  );\r\n  //}\r\n\r\n\r\n  onFileSelected(event: any) {\r\n    this.selectedResumeFile = <File>event.target.files[0];\r\n  }\r\n\r\n  //onSubmit(personForm: NgForm) {\r\n  //  const fd = new FormData();\r\n  //  fd.append('Name', personForm.value.Name);\r\n  //  fd.append('Country', personForm.value.Country);\r\n  //  fd.append('City', personForm.value.City);\r\n  //  fd.append('LanguageSkills', personForm.value.LanguageSkills);\r\n  //  fd.append('DateOfBirth', personForm.value.DateOfBirth);\r\n  //  fd.append('Languages', personForm.value.Languages);\r\n  //  fd.append('Resume', this.selectedResumeFile, this.selectedResumeFile.name);\r\n\r\n  //  this.http.post('https://localhost:7043/api/People', fd).subscribe(res => {\r\n  //    console.log(res);\r\n  //  });\r\n  //}\r\n\r\n\r\n  onSubmit() {\r\n    const fd = new FormData();\r\n    fd.append('addPersonRequest', JSON.stringify(this.addPersonRequest));\r\n    fd.append('resume', this.selectedResumeFile, this.selectedResumeFile.name);\r\n\r\n    this.http\r\n      .post('https://localhost:7043/api/People', fd)\r\n      .subscribe(res => {\r\n        console.log(res);\r\n      });\r\n  }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}