{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/people.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"../../services/country.service\";\nimport * as i5 from \"../../services/city.service\";\nimport * as i6 from \"../../services/language.service\";\nimport * as i7 from \"@angular/common/http\";\nexport class AddPersonComponent {\n  //constructor(\n  //  private fb: FormBuilder,\n  //  private personService: PeopleService,\n  //  private router: Router,\n  //  private countryService: CountryService,\n  //  private cityService: CityService,\n  //  private languageService: LanguageService\n  //) {\n  //  this.addPersonForm = this.fb.group({\n  //    name: ['', Validators.required],\n  //    country: ['', Validators.required],\n  //    city: ['', Validators.required],\n  //    languageSkills: ['', Validators.required],\n  //    dateOfBirth: ['', Validators.required],\n  //    resumeFileName: ['', Validators.required],\n  //    languages: ['', Validators.required],\n  //    cityId: ['', Validators.required],\n  //    countryId: ['', Validators.required],\n  //    resumeFile: ['', Validators.required],\n  //  });\n  //}\n  constructor(fb, personService, router, countryService, cityService, languageService, http) {\n    this.fb = fb;\n    this.personService = personService;\n    this.router = router;\n    this.countryService = countryService;\n    this.cityService = cityService;\n    this.languageService = languageService;\n    this.http = http;\n    this.languageSkills = \"\";\n    this.isChecked = false;\n    this.languages = [];\n    this.addPersonRequest = {\n      id: '',\n      name: '',\n      country: '',\n      city: '',\n      languageSkills: '',\n      dateOfBirth: new Date(2023, 1, 1),\n      resumeFileName: '',\n      languages: [],\n      cityId: 0,\n      countryId: 0,\n      resumeFile: new File([], '')\n    };\n  }\n  ngOnInit() {\n    this.countryService.getCountries().subscribe(data => {\n      this.countries = data;\n    });\n    this.cityService.getCities().subscribe(data => {\n      this.cities = data;\n    });\n    this.languageService.getLanguages().subscribe(data => {\n      this.languages = data;\n    });\n    this.getLanguages();\n    this.loadCities();\n  }\n  getLanguages() {\n    this.languageService.getLanguages().subscribe(data => {\n      this.languages = data;\n    });\n  }\n  loadCities() {\n    this.cities = [];\n    this.addPersonRequest.cityId = -1;\n    this.cityService.getCitiesByCountryId(this.addPersonRequest.countryId).subscribe(data => {\n      this.cities = data;\n    });\n  }\n  //onFileSelected(event: any) {\n  //  this.selectedResumeFile = <File>event.target.files[0];\n  //}\n  //onUpload() {\n  //  const fd = new FormData();\n  //  fd.append('image', this.selectedResumeFile, this.selectedResumeFile.name);\n  //  this.http.post('https://localhost:7043/api/File', fd).subscribe(res => {\n  //    console.log(res);\n  //  });\n  //}\n  //onFileChange(e: any) {\n  //  const file = e['target'].files[0];\n  //  const fileName = file.name;\n  //  const fileSize = file.size;\n  //  const fileType = file.type;\n  //  console.log(fileName);\n  //  console.log(fileSize);\n  //  this.selectedResumeFile = file;\n  //  this.addPersonRequest.resumeFile = this.selectedResumeFile;\n  //  if (fileType === 'application/pdf' || fileType === 'application/msword') {\n  //    this.addPersonRequest.resumeFileName = fileName;\n  //  } else {\n  //    alert('Only pdf or doc files are allowed!');\n  //  }\n  //}\n  //addPerson() {\n  //  const formData = new FormData();\n  //  formData.append('file', this.addPersonRequest.resumeFile);\n  //  formData.append('name', this.addPersonRequest.name);\n  //  formData.append('country', this.addPersonRequest.country);\n  //  formData.append('city', this.addPersonRequest.city);\n  //  formData.append('languageSkills', this.addPersonRequest.languageSkills);\n  //  formData.append('dateOfBirth', this.addPersonRequest.dateOfBirth.toDateString());\n  //  //const formData = new FormData();\n  //  //formData.append('file', this.addPersonRequest.resumeFile);\n  //  //formData.append('addPersonRequest', JSON.stringify(this.addPersonRequest));\n  //  this.personService.addPerson(formData).subscribe(\n  //    (response) => {\n  //      console.log(response);\n  //      this.router.navigate(['people']);\n  //    },\n  //    (error) => {\n  //      console.log(error);\n  //    }\n  //  );\n  //}\n  onFileSelected(event) {\n    this.selectedResumeFile = event.target.files[0];\n  }\n  //onSubmit(personForm: NgForm) {\n  //  const fd = new FormData();\n  //  fd.append('Name', personForm.value.Name);\n  //  fd.append('Country', personForm.value.Country);\n  //  fd.append('City', personForm.value.City);\n  //  fd.append('LanguageSkills', personForm.value.LanguageSkills);\n  //  fd.append('DateOfBirth', personForm.value.DateOfBirth);\n  //  fd.append('Languages', personForm.value.Languages);\n  //  fd.append('Resume', this.selectedResumeFile, this.selectedResumeFile.name);\n  //  this.http.post('https://localhost:7043/api/People', fd).subscribe(res => {\n  //    console.log(res);\n  //  });\n  //}\n  onSubmit() {\n    const fd = new FormData();\n    fd.append('addPersonRequest', JSON.stringify(this.addPersonRequest));\n    fd.append('resume', this.selectedResumeFile, this.selectedResumeFile.name);\n    this.http.post('https://localhost:7043/api/People', fd).subscribe(res => {\n      console.log(res);\n    });\n  }\n}\nAddPersonComponent.ɵfac = function AddPersonComponent_Factory(t) {\n  return new (t || AddPersonComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.PeopleService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.CountryService), i0.ɵɵdirectiveInject(i5.CityService), i0.ɵɵdirectiveInject(i6.LanguageService), i0.ɵɵdirectiveInject(i7.HttpClient));\n};\nAddPersonComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddPersonComponent,\n  selectors: [[\"app-add-person\"]],\n  decls: 23,\n  vars: 4,\n  consts: [[3, \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"name\", \"name\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"country\"], [\"type\", \"text\", \"id\", \"country\", \"name\", \"country\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"city\"], [\"type\", \"text\", \"id\", \"city\", \"name\", \"city\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"languages\"], [\"type\", \"text\", \"id\", \"languages\", \"name\", \"languages\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"resume\"], [\"type\", \"file\", \"id\", \"resume\", \"name\", \"resume\", 1, \"form-control\", 3, \"change\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"]],\n  template: function AddPersonComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function AddPersonComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(1, \"div\", 1)(2, \"label\", 2);\n      i0.ɵɵtext(3, \"Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function AddPersonComponent_Template_input_ngModelChange_4_listener($event) {\n        return ctx.addPersonRequest.name = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"div\", 1)(6, \"label\", 4);\n      i0.ɵɵtext(7, \"Country:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function AddPersonComponent_Template_input_ngModelChange_8_listener($event) {\n        return ctx.addPersonRequest.country = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"div\", 1)(10, \"label\", 6);\n      i0.ɵɵtext(11, \"City:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function AddPersonComponent_Template_input_ngModelChange_12_listener($event) {\n        return ctx.addPersonRequest.city = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"div\", 1)(14, \"label\", 8);\n      i0.ɵɵtext(15, \"Languages:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"input\", 9);\n      i0.ɵɵlistener(\"ngModelChange\", function AddPersonComponent_Template_input_ngModelChange_16_listener($event) {\n        return ctx.addPersonRequest.languages = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(17, \"div\", 1)(18, \"label\", 10);\n      i0.ɵɵtext(19, \"Resume:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"input\", 11);\n      i0.ɵɵlistener(\"change\", function AddPersonComponent_Template_input_change_20_listener($event) {\n        return ctx.onFileSelected($event);\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(21, \"button\", 12);\n      i0.ɵɵtext(22, \"Submit\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.addPersonRequest.name);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.addPersonRequest.country);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.addPersonRequest.city);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.addPersonRequest.languages);\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.NgModel, i1.NgForm],\n  styles: [\".language-skills-group[_ngcontent-%COMP%] {\\r\\n  display: flex;\\r\\n  flex-wrap: wrap;\\r\\n}\\r\\n\\r\\n.language-skill-item[_ngcontent-%COMP%] {\\r\\n  margin: 0 10px 10px 0;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9hZGQtcGVyc29uL2FkZC1wZXJzb24uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQWE7RUFDYixlQUFlO0FBQ2pCOztBQUVBO0VBQ0UscUJBQXFCO0FBQ3ZCOzs7QUFHQTs7Ozs7Ozs7Q0FRQyIsInNvdXJjZXNDb250ZW50IjpbIi5sYW5ndWFnZS1za2lsbHMtZ3JvdXAge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC13cmFwOiB3cmFwO1xyXG59XHJcblxyXG4ubGFuZ3VhZ2Utc2tpbGwtaXRlbSB7XHJcbiAgbWFyZ2luOiAwIDEwcHggMTBweCAwO1xyXG59XHJcblxyXG5cclxuLyouY2hlY2tib3gtaW5saW5lIHtcclxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xyXG59XHJcblxyXG4uY2hlY2tib3gtbGFiZWwge1xyXG4gIG1hcmdpbi1sZWZ0OiA1cHg7XHJcbn1cclxuKi9cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["AddPersonComponent","constructor","fb","personService","router","countryService","cityService","languageService","http","id","name","country","city","languageSkills","dateOfBirth","Date","resumeFileName","languages","cityId","countryId","resumeFile","File","ngOnInit","getCountries","subscribe","data","countries","getCities","cities","getLanguages","loadCities","addPersonRequest","getCitiesByCountryId","onFileSelected","event","selectedResumeFile","target","files","onSubmit","fd","FormData","append","JSON","stringify","post","res","console","log","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["D:\\Jashim\\Job\\AngularFullStack\\EIS\\FullStack UI\\FullStack.UI\\src\\app\\components\\add-person\\add-person.component.ts","D:\\Jashim\\Job\\AngularFullStack\\EIS\\FullStack UI\\FullStack.UI\\src\\app\\components\\add-person\\add-person.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { City } from '../../models/city.model';\r\nimport { Country } from '../../models/country.model';\r\nimport { Language } from '../../models/language.model';\r\nimport { Person } from '../../models/person.model';\r\nimport { CityService } from '../../services/city.service';\r\nimport { CountryService } from '../../services/country.service';\r\nimport { LanguageService } from '../../services/language.service';\r\nimport { PeopleService } from '../../services/people.service';\r\n\r\nimport { HttpClient} from '@angular/common/http';\r\nimport { FormBuilder, FormGroup, NgForm } from '@angular/forms';\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-add-person',\r\n  templateUrl: './add-person.component.html',\r\n  styleUrls: ['./add-person.component.css']\r\n})\r\nexport class AddPersonComponent implements OnInit {\r\n\r\n\r\n  languageSkills: string = \"\";\r\n\r\n  countries!: Country[];\r\n  cities!: City[];\r\n\r\n  isChecked: boolean = false;\r\n  languages: Language[] = [];\r\n\r\n\r\n  addPersonForm!: FormGroup;\r\n  selectedResumeFile!: File;\r\n\r\n  addPersonRequest: Person = {\r\n    id: '',\r\n    name: '',\r\n    country: '',\r\n    city: '',\r\n    languageSkills: '',\r\n    dateOfBirth: new Date(2023, 1, 1),\r\n    resumeFileName: '',\r\n    languages: [],\r\n    cityId: 0,\r\n    countryId: 0,\r\n    resumeFile: new File([], '')\r\n\r\n  };\r\n\r\n  //constructor(\r\n  //  private fb: FormBuilder,\r\n  //  private personService: PeopleService,\r\n  //  private router: Router,\r\n  //  private countryService: CountryService,\r\n  //  private cityService: CityService,\r\n  //  private languageService: LanguageService\r\n  //) {\r\n  //  this.addPersonForm = this.fb.group({\r\n  //    name: ['', Validators.required],\r\n  //    country: ['', Validators.required],\r\n  //    city: ['', Validators.required],\r\n  //    languageSkills: ['', Validators.required],\r\n  //    dateOfBirth: ['', Validators.required],\r\n  //    resumeFileName: ['', Validators.required],\r\n  //    languages: ['', Validators.required],\r\n  //    cityId: ['', Validators.required],\r\n  //    countryId: ['', Validators.required],\r\n  //    resumeFile: ['', Validators.required],\r\n  //  });\r\n  //}\r\n\r\n\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private personService: PeopleService,\r\n    private router: Router,\r\n    private countryService: CountryService,\r\n    private cityService: CityService,\r\n    private languageService: LanguageService,\r\n    private http: HttpClient\r\n\r\n  ) { }\r\n\r\n\r\n  ngOnInit() {\r\n    this.countryService.getCountries().subscribe((data: Country[]) => {\r\n      this.countries = data;\r\n    });\r\n\r\n    this.cityService.getCities().subscribe((data: City[]) => {\r\n      this.cities = data;\r\n    });\r\n\r\n    this.languageService.getLanguages().subscribe((data: Language[]) => {\r\n      this.languages = data;\r\n    });\r\n    this.getLanguages();\r\n    this.loadCities();\r\n  }\r\n\r\n\r\n\r\n  getLanguages() {\r\n    this.languageService.getLanguages().subscribe((data: Language[]) => {\r\n      this.languages = data;\r\n    });\r\n  }\r\n\r\n\r\n  loadCities() {\r\n    this.cities = [];\r\n    this.addPersonRequest.cityId = -1;\r\n    this.cityService.getCitiesByCountryId(this.addPersonRequest.countryId).subscribe((data: City[]) => {\r\n      this.cities = data;\r\n    });\r\n  }\r\n\r\n\r\n  //onFileSelected(event: any) {\r\n  //  this.selectedResumeFile = <File>event.target.files[0];\r\n  //}\r\n\r\n  //onUpload() {\r\n  //  const fd = new FormData();\r\n  //  fd.append('image', this.selectedResumeFile, this.selectedResumeFile.name);\r\n  //  this.http.post('https://localhost:7043/api/File', fd).subscribe(res => {\r\n  //    console.log(res);\r\n  //  });\r\n  //}\r\n\r\n  //onFileChange(e: any) {\r\n\r\n  //  const file = e['target'].files[0];\r\n  //  const fileName = file.name;\r\n  //  const fileSize = file.size;\r\n  //  const fileType = file.type;\r\n\r\n\r\n  //  console.log(fileName);\r\n  //  console.log(fileSize);\r\n\r\n\r\n  //  this.selectedResumeFile = file;\r\n  //  this.addPersonRequest.resumeFile = this.selectedResumeFile;\r\n\r\n  //  if (fileType === 'application/pdf' || fileType === 'application/msword') {\r\n  //    this.addPersonRequest.resumeFileName = fileName;\r\n  //  } else {\r\n  //    alert('Only pdf or doc files are allowed!');\r\n  //  }\r\n  //}\r\n\r\n  //addPerson() {\r\n  //  const formData = new FormData();\r\n  //  formData.append('file', this.addPersonRequest.resumeFile);\r\n  //  formData.append('name', this.addPersonRequest.name);\r\n  //  formData.append('country', this.addPersonRequest.country);\r\n  //  formData.append('city', this.addPersonRequest.city);\r\n  //  formData.append('languageSkills', this.addPersonRequest.languageSkills);\r\n  //  formData.append('dateOfBirth', this.addPersonRequest.dateOfBirth.toDateString());\r\n\r\n  //  //const formData = new FormData();\r\n  //  //formData.append('file', this.addPersonRequest.resumeFile);\r\n  //  //formData.append('addPersonRequest', JSON.stringify(this.addPersonRequest));\r\n\r\n\r\n  //  this.personService.addPerson(formData).subscribe(\r\n  //    (response) => {\r\n  //      console.log(response);\r\n  //      this.router.navigate(['people']);\r\n  //    },\r\n  //    (error) => {\r\n  //      console.log(error);\r\n  //    }\r\n  //  );\r\n  //}\r\n\r\n\r\n  onFileSelected(event: any) {\r\n    this.selectedResumeFile = <File>event.target.files[0];\r\n  }\r\n\r\n  //onSubmit(personForm: NgForm) {\r\n  //  const fd = new FormData();\r\n  //  fd.append('Name', personForm.value.Name);\r\n  //  fd.append('Country', personForm.value.Country);\r\n  //  fd.append('City', personForm.value.City);\r\n  //  fd.append('LanguageSkills', personForm.value.LanguageSkills);\r\n  //  fd.append('DateOfBirth', personForm.value.DateOfBirth);\r\n  //  fd.append('Languages', personForm.value.Languages);\r\n  //  fd.append('Resume', this.selectedResumeFile, this.selectedResumeFile.name);\r\n\r\n  //  this.http.post('https://localhost:7043/api/People', fd).subscribe(res => {\r\n  //    console.log(res);\r\n  //  });\r\n  //}\r\n\r\n\r\n  onSubmit() {\r\n    const fd = new FormData();\r\n    fd.append('addPersonRequest', JSON.stringify(this.addPersonRequest));\r\n    fd.append('resume', this.selectedResumeFile, this.selectedResumeFile.name);\r\n\r\n    this.http\r\n      .post('https://localhost:7043/api/People', fd)\r\n      .subscribe(res => {\r\n        console.log(res);\r\n      });\r\n  }\r\n}\r\n\r\n","<form (ngSubmit)=\"onSubmit()\">\r\n  <div class=\"form-group\">\r\n    <label for=\"name\">Name:</label>\r\n    <input type=\"text\" class=\"form-control\" id=\"name\" [(ngModel)]=\"addPersonRequest.name\" name=\"name\">\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label for=\"country\">Country:</label>\r\n    <input type=\"text\" class=\"form-control\" id=\"country\" [(ngModel)]=\"addPersonRequest.country\" name=\"country\">\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label for=\"city\">City:</label>\r\n    <input type=\"text\" class=\"form-control\" id=\"city\" [(ngModel)]=\"addPersonRequest.city\" name=\"city\">\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label for=\"languages\">Languages:</label>\r\n    <input type=\"text\" class=\"form-control\" id=\"languages\" [(ngModel)]=\"addPersonRequest.languages\" name=\"languages\">\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label for=\"resume\">Resume:</label>\r\n    <input type=\"file\" class=\"form-control\" id=\"resume\" (change)=\"onFileSelected($event)\" name=\"resume\">\r\n  </div>\r\n  <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}