{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet EditPersonComponent = class EditPersonComponent {\n  //updatePerson() {\n  //  this.personService.updatePerson(this.personDetails.id, this.personDetails)\n  //    .subscribe({\n  //      next: (response) => {\n  //        this.router.navigate(['people']);\n  //      }\n  //    });\n  //}\n  constructor(fb, personService, router, countryService, cityService, languageService, http, route) {\n    this.fb = fb;\n    this.personService = personService;\n    this.router = router;\n    this.countryService = countryService;\n    this.cityService = cityService;\n    this.languageService = languageService;\n    this.http = http;\n    this.route = route;\n    this.languageSkills = \"\";\n    this.isChecked = false;\n    this.languages = [];\n    this.personDetails = {\n      id: '',\n      name: '',\n      country: '',\n      city: '',\n      languageSkills: '',\n      dateOfBirth: new Date(2023, 1, 1),\n      resumeFileName: '',\n      languages: [],\n      cityId: 0,\n      countryId: 0,\n      resumeFile: new File([], '')\n    };\n  }\n  //constructor(private http: HttpClient, private route: ActivatedRoute, private personService: PeopleService, private router: Router) { }\n  ngOnInit() {\n    this.route.paramMap.subscribe({\n      next: params => {\n        const id = params.get('id');\n        if (id) {\n          // call api using service\n          this.personService.getPerson(id).subscribe({\n            next: response => {\n              this.personDetails = response;\n            }\n          });\n          this.countryService.getCountries().subscribe(data => {\n            this.countries = data;\n          });\n          this.cityService.getCities().subscribe(data => {\n            this.cities = data;\n          });\n          this.languageService.getLanguages().subscribe(data => {\n            this.languages = data;\n          });\n          this.getLanguages();\n          this.loadCities();\n        }\n      }\n    });\n  }\n  //ngOnInit() {\n  //  this.countryService.getCountries().subscribe((data: Country[]) => {\n  //    this.countries = data;\n  //  });\n  //  this.cityService.getCities().subscribe((data: City[]) => {\n  //    this.cities = data;\n  //  });\n  //  this.languageService.getLanguages().subscribe((data: Language[]) => {\n  //    this.languages = data;\n  //  });\n  //  this.getLanguages();\n  //  this.loadCities();\n  //}\n  getLanguages() {\n    this.languageService.getLanguages().subscribe(data => {\n      this.languages = data;\n    });\n  }\n  loadCities() {\n    this.cities = [];\n    this.personDetails.cityId = -1;\n    this.cityService.getCitiesByCountryId(this.personDetails.countryId).subscribe(data => {\n      this.cities = data;\n    });\n  }\n  updatePerson() {\n    let formData = new FormData();\n    formData.append(\"updatePersonRequest\", JSON.stringify(this.personDetails));\n    formData.append(\"resume\", this.selectedResumeFile, this.selectedResumeFile.name);\n    this.http.put('https://localhost:7043/api/People/${this.personDetails.id}', formData).subscribe(res => {\n      console.log(res);\n    });\n  }\n  //deletePerson(id: string) {\n  //  this.personService.deletePerson(id)\n  //    .subscribe({\n  //      next: (response) => {\n  //        this.router.navigate(['people']);\n  //      }\n  //    });\n  //}\n  deletePerson(id) {\n    this.http.delete('https://localhost:7043/api/People/${id}').subscribe(res => {\n      console.log(res);\n    });\n  }\n  onFileSelected(event) {\n    this.selectedResumeFile = event.target.files[0];\n  }\n};\nEditPersonComponent = __decorate([Component({\n  selector: 'app-edit-person',\n  templateUrl: './edit-person.component.html',\n  styleUrls: ['./edit-person.component.css']\n})], EditPersonComponent);\nexport { EditPersonComponent };","map":{"version":3,"mappings":"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","names":["Component","EditPersonComponent","constructor","fb","personService","router","countryService","cityService","languageService","http","route","id","name","country","city","languageSkills","dateOfBirth","Date","resumeFileName","languages","cityId","countryId","resumeFile","File","ngOnInit","paramMap","subscribe","next","params","get","getPerson","response","personDetails","getCountries","data","countries","getCities","cities","getLanguages","loadCities","getCitiesByCountryId","updatePerson","formData","FormData","append","JSON","stringify","selectedResumeFile","put","res","console","log","deletePerson","delete","onFileSelected","event","target","files","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["D:\\Jashim\\Job\\AngularFullStack\\EIS\\FullStack UI\\FullStack.UI\\src\\app\\components\\edit-person\\edit-person.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Person } from '../../models/person.model';\nimport { PeopleService } from '../../services/people.service';\n\nimport { HttpClient } from '@angular/common/http';\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Language } from '../../models/language.model';\r\nimport { City } from '../../models/city.model';\r\nimport { Country } from '../../models/country.model';\r\nimport { LanguageService } from '../../services/language.service';\r\nimport { CityService } from '../../services/city.service';\r\nimport { CountryService } from '../../services/country.service';\r\n\r\n\n@Component({\n  selector: 'app-edit-person',\n  templateUrl: './edit-person.component.html',\n  styleUrls: ['./edit-person.component.css']\n})\nexport class EditPersonComponent {\n\n\n  languageSkills: string = \"\";\n\n  countries!: Country[];\n  cities!: City[];\n\n  isChecked: boolean = false;\n  languages: Language[] = [];\n\n\n  addPersonForm!: FormGroup;\n  selectedResumeFile!: File;\n\n  personDetails: Person = {\n    id: '',\n    name: '',\n    country: '',\n    city: '',\n    languageSkills: '',\n    dateOfBirth: new Date(2023, 1, 1),\n    resumeFileName: '',\n    languages: [],\n    cityId: 0,\n    countryId: 0,\n    resumeFile: new File([], '')\n\n  };\n\n  //constructor(private http: HttpClient, private route: ActivatedRoute, private personService: PeopleService, private router: Router) { }\n\n  ngOnInit() {\n    this.route.paramMap.subscribe({\n      next: (params) => {\n        const id = params.get('id');\n        if (id) {\n          // call api using service\n          this.personService.getPerson(id).subscribe({\n            next: (response) => {\n              this.personDetails = response;\n            }\n          });\n          this.countryService.getCountries().subscribe((data: Country[]) => {\r\n            this.countries = data;\r\n          });\r\n\r\n          this.cityService.getCities().subscribe((data: City[]) => {\r\n            this.cities = data;\r\n          });\r\n\r\n          this.languageService.getLanguages().subscribe((data: Language[]) => {\r\n            this.languages = data;\r\n          });\n          this.getLanguages();\r\n          this.loadCities();\n        }\n      }\n\n    })\n  }\n\n  //updatePerson() {\n  //  this.personService.updatePerson(this.personDetails.id, this.personDetails)\n  //    .subscribe({\n  //      next: (response) => {\n  //        this.router.navigate(['people']);\n  //      }\n  //    });\n  //}\n\n\n  constructor(\r\n    private fb: FormBuilder,\r\n    private personService: PeopleService,\r\n    private router: Router,\r\n    private countryService: CountryService,\r\n    private cityService: CityService,\r\n    private languageService: LanguageService,\r\n    private http: HttpClient,\r\n    private route: ActivatedRoute,\r\n\r\n  ) { }\r\n\r\n\r\n  //ngOnInit() {\r\n  //  this.countryService.getCountries().subscribe((data: Country[]) => {\r\n  //    this.countries = data;\r\n  //  });\r\n\r\n  //  this.cityService.getCities().subscribe((data: City[]) => {\r\n  //    this.cities = data;\r\n  //  });\r\n\r\n  //  this.languageService.getLanguages().subscribe((data: Language[]) => {\r\n  //    this.languages = data;\r\n  //  });\r\n  //  this.getLanguages();\r\n  //  this.loadCities();\r\n  //}\r\n\r\n\r\n\r\n  getLanguages() {\r\n    this.languageService.getLanguages().subscribe((data: Language[]) => {\r\n      this.languages = data;\r\n    });\r\n  }\r\n\r\n\r\n  loadCities() {\r\n    this.cities = [];\r\n    this.personDetails.cityId = -1;\r\n    this.cityService.getCitiesByCountryId(this.personDetails.countryId).subscribe((data: City[]) => {\r\n      this.cities = data;\r\n    });\r\n  }\n\n\n\n  updatePerson() {\n    let formData = new FormData();\n    formData.append(\"updatePersonRequest\", JSON.stringify(this.personDetails));\n    formData.append(\"resume\", this.selectedResumeFile, this.selectedResumeFile.name);\n\n    this.http.put('https://localhost:7043/api/People/${this.personDetails.id}', formData)\n      .subscribe(res => {\n        console.log(res);\n      });\n  }\n\n  //deletePerson(id: string) {\n  //  this.personService.deletePerson(id)\n  //    .subscribe({\n  //      next: (response) => {\n  //        this.router.navigate(['people']);\n  //      }\n  //    });\n  //}\n\n\n  deletePerson(id: string) {\n    this.http.delete('https://localhost:7043/api/People/${id}')\n      .subscribe(res => {\n        console.log(res);\n      });\n  }\n\n  onFileSelected(event: any) {\n    this.selectedResumeFile = event.target.files[0];\n  }\n\n}\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}