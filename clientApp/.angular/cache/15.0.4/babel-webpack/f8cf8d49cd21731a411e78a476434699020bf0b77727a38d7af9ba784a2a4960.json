{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet EditPersonComponent = class EditPersonComponent {\n  //constructor(private http: HttpClient, private route: ActivatedRoute, private personService: PeopleService, private router: Router) { }\n  //ngOnInit(): void {\n  //  this.route.paramMap.subscribe({\n  //    next: (params) => {\n  //      const id = params.get('id');\n  //      if (id) {\n  //        // call api using service\n  //        this.personService.getPerson(id).subscribe({\n  //          next: (response) => {\n  //            this.personDetails = response;\n  //          }\n  //        });\n  //      }\n  //    }\n  //  })\n  //}\n  //updatePerson() {\n  //  this.personService.updatePerson(this.personDetails.id, this.personDetails)\n  //    .subscribe({\n  //      next: (response) => {\n  //        this.router.navigate(['people']);\n  //      }\n  //    });\n  //}\n  constructor(fb, personService, router, countryService, cityService, languageService, http) {\n    this.fb = fb;\n    this.personService = personService;\n    this.router = router;\n    this.countryService = countryService;\n    this.cityService = cityService;\n    this.languageService = languageService;\n    this.http = http;\n    this.languageSkills = \"\";\n    this.isChecked = false;\n    this.languages = [];\n    this.personDetails = {\n      id: '',\n      name: '',\n      country: '',\n      city: '',\n      languageSkills: '',\n      dateOfBirth: new Date(2023, 1, 1),\n      resumeFileName: '',\n      languages: [],\n      cityId: 0,\n      countryId: 0,\n      resumeFile: new File([], '')\n    };\n  }\n  ngOnInit() {\n    this.countryService.getCountries().subscribe(data => {\n      this.countries = data;\n    });\n    this.cityService.getCities().subscribe(data => {\n      this.cities = data;\n    });\n    this.languageService.getLanguages().subscribe(data => {\n      this.languages = data;\n    });\n    this.getLanguages();\n    this.loadCities();\n  }\n  getLanguages() {\n    this.languageService.getLanguages().subscribe(data => {\n      this.languages = data;\n    });\n  }\n  loadCities() {\n    this.cities = [];\n    this.addPersonRequest.cityId = -1;\n    this.cityService.getCitiesByCountryId(this.addPersonRequest.countryId).subscribe(data => {\n      this.cities = data;\n    });\n  }\n  updatePerson() {\n    let formData = new FormData();\n    formData.append(\"updatePersonRequest\", JSON.stringify(this.personDetails));\n    formData.append(\"resume\", this.selectedResumeFile, this.selectedResumeFile.name);\n    this.http.put('https://localhost:7043/api/People/${this.personDetails.id}', formData).subscribe(res => {\n      console.log(res);\n    });\n  }\n  //deletePerson(id: string) {\n  //  this.personService.deletePerson(id)\n  //    .subscribe({\n  //      next: (response) => {\n  //        this.router.navigate(['people']);\n  //      }\n  //    });\n  //}\n  deletePerson(id) {\n    this.http.delete('https://localhost:7043/api/People/${id}').subscribe(res => {\n      console.log(res);\n    });\n  }\n  onFileSelected(event) {\n    this.selectedResumeFile = event.target.files[0];\n  }\n};\nEditPersonComponent = __decorate([Component({\n  selector: 'app-edit-person',\n  templateUrl: './edit-person.component.html',\n  styleUrls: ['./edit-person.component.css']\n})], EditPersonComponent);\nexport { EditPersonComponent };","map":{"version":3,"mappings":"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","names":["Component","EditPersonComponent","constructor","fb","personService","router","countryService","cityService","languageService","http","id","name","country","city","languageSkills","dateOfBirth","Date","resumeFileName","languages","cityId","countryId","resumeFile","File","ngOnInit","getCountries","subscribe","data","countries","getCities","cities","getLanguages","loadCities","addPersonRequest","getCitiesByCountryId","updatePerson","formData","FormData","append","JSON","stringify","personDetails","selectedResumeFile","put","res","console","log","deletePerson","delete","onFileSelected","event","target","files","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["D:\\Jashim\\Job\\AngularFullStack\\EIS\\FullStack UI\\FullStack.UI\\src\\app\\components\\edit-person\\edit-person.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Person } from '../../models/person.model';\nimport { PeopleService } from '../../services/people.service';\n\nimport { HttpClient } from '@angular/common/http';\nimport { FormGroup } from '@angular/forms';\r\nimport { Language } from '../../models/language.model';\r\nimport { City } from '../../models/city.model';\r\nimport { Country } from '../../models/country.model';\r\n\n@Component({\n  selector: 'app-edit-person',\n  templateUrl: './edit-person.component.html',\n  styleUrls: ['./edit-person.component.css']\n})\nexport class EditPersonComponent {\n\n\n  languageSkills: string = \"\";\n\n  countries!: Country[];\n  cities!: City[];\n\n  isChecked: boolean = false;\n  languages: Language[] = [];\n\n\n  addPersonForm!: FormGroup;\n  selectedResumeFile!: File;\n\n  personDetails: Person = {\n    id: '',\n    name: '',\n    country: '',\n    city: '',\n    languageSkills: '',\n    dateOfBirth: new Date(2023, 1, 1),\n    resumeFileName: '',\n    languages: [],\n    cityId: 0,\n    countryId: 0,\n    resumeFile: new File([], '')\n\n  };\n\n  //constructor(private http: HttpClient, private route: ActivatedRoute, private personService: PeopleService, private router: Router) { }\n\n  //ngOnInit(): void {\n  //  this.route.paramMap.subscribe({\n  //    next: (params) => {\n  //      const id = params.get('id');\n  //      if (id) {\n  //        // call api using service\n  //        this.personService.getPerson(id).subscribe({\n  //          next: (response) => {\n  //            this.personDetails = response;\n  //          }\n  //        });\n  //      }\n  //    }\n  //  })\n  //}\n\n  //updatePerson() {\n  //  this.personService.updatePerson(this.personDetails.id, this.personDetails)\n  //    .subscribe({\n  //      next: (response) => {\n  //        this.router.navigate(['people']);\n  //      }\n  //    });\n  //}\n\n\n  constructor(\r\n    private fb: FormBuilder,\r\n    private personService: PeopleService,\r\n    private router: Router,\r\n    private countryService: CountryService,\r\n    private cityService: CityService,\r\n    private languageService: LanguageService,\r\n    private http: HttpClient\r\n\r\n  ) { }\r\n\r\n\r\n  ngOnInit() {\r\n    this.countryService.getCountries().subscribe((data: Country[]) => {\r\n      this.countries = data;\r\n    });\r\n\r\n    this.cityService.getCities().subscribe((data: City[]) => {\r\n      this.cities = data;\r\n    });\r\n\r\n    this.languageService.getLanguages().subscribe((data: Language[]) => {\r\n      this.languages = data;\r\n    });\r\n    this.getLanguages();\r\n    this.loadCities();\r\n  }\r\n\r\n\r\n\r\n  getLanguages() {\r\n    this.languageService.getLanguages().subscribe((data: Language[]) => {\r\n      this.languages = data;\r\n    });\r\n  }\r\n\r\n\r\n  loadCities() {\r\n    this.cities = [];\r\n    this.addPersonRequest.cityId = -1;\r\n    this.cityService.getCitiesByCountryId(this.addPersonRequest.countryId).subscribe((data: City[]) => {\r\n      this.cities = data;\r\n    });\r\n  }\n\n\n\n  updatePerson() {\n    let formData = new FormData();\n    formData.append(\"updatePersonRequest\", JSON.stringify(this.personDetails));\n    formData.append(\"resume\", this.selectedResumeFile, this.selectedResumeFile.name);\n\n    this.http.put('https://localhost:7043/api/People/${this.personDetails.id}', formData)\n      .subscribe(res => {\n        console.log(res);\n      });\n  }\n\n  //deletePerson(id: string) {\n  //  this.personService.deletePerson(id)\n  //    .subscribe({\n  //      next: (response) => {\n  //        this.router.navigate(['people']);\n  //      }\n  //    });\n  //}\n\n\n  deletePerson(id: string) {\n    this.http.delete('https://localhost:7043/api/People/${id}')\n      .subscribe(res => {\n        console.log(res);\n      });\n  }\n\n  onFileSelected(event: any) {\n    this.selectedResumeFile = event.target.files[0];\n  }\n\n}\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}