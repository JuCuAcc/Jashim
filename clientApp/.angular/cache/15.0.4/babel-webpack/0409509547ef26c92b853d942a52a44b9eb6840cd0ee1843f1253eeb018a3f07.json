{"ast":null,"code":"import { Person } from '../../models/person.model';\nimport { HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/people.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"../../services/country.service\";\nimport * as i5 from \"../../services/city.service\";\nimport * as i6 from \"../../services/language.service\";\nimport * as i7 from \"@angular/common/http\";\nimport * as i8 from \"../../services/file-upload.service\";\nimport * as i9 from \"../../services/person.service\";\nimport * as i10 from \"@angular/common\";\nfunction AddPersonComponent_option_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 27);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const country_r6 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", country_r6.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(country_r6.name);\n  }\n}\nfunction AddPersonComponent_select_24_option_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 30);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const city_r8 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", city_r8.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(city_r8.name);\n  }\n}\nfunction AddPersonComponent_select_24_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"select\", 28);\n    i0.ɵɵlistener(\"ngModelChange\", function AddPersonComponent_select_24_Template_select_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.addPersonRequest.cityId = $event);\n    });\n    i0.ɵɵelementStart(1, \"option\", 14);\n    i0.ɵɵtext(2, \"--Select City--\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, AddPersonComponent_select_24_option_3_Template, 2, 2, \"option\", 29);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.addPersonRequest.cityId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngValue\", 0);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.cities);\n  }\n}\nfunction AddPersonComponent_div_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 31)(1, \"div\", 32)(2, \"span\", 33);\n    i0.ɵɵtext(3, \"Loading...\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nexport class AddPersonComponent {\n  constructor(fb, peopleService, router, countryService, cityService, languageService, http, fileUploadService, personService) {\n    this.fb = fb;\n    this.peopleService = peopleService;\n    this.router = router;\n    this.countryService = countryService;\n    this.cityService = cityService;\n    this.languageService = languageService;\n    this.http = http;\n    this.fileUploadService = fileUploadService;\n    this.personService = personService;\n    this.person = new Person();\n    this.people = [];\n    this.countries = [];\n    this.selectedFile = new File([], '');\n    this.success = false;\n    this.error = false;\n    this.errorMessage = \"\";\n    this.languageSkills = \"\";\n    this.languages = [];\n    this.isChecked = false;\n    this.addPersonRequest = {\n      id: 0,\n      name: '',\n      countryId: 0,\n      cityId: 0,\n      languageSkills: '',\n      dateOfBirth: new Date(),\n      resumeFileName: '',\n      languages: [],\n      resumeFile: new File([], '')\n    };\n    //constructor(\n    //  private fb: FormBuilder,\n    //  private personService: PeopleService,\n    //  private router: Router,\n    //  private countryService: CountryService,\n    //  private cityService: CityService,\n    //  private languageService: LanguageService\n    //) {\n    //  this.addPersonForm = this.fb.group({\n    //    name: ['', Validators.required],\n    //    country: ['', Validators.required],\n    //    city: ['', Validators.required],\n    //    languageSkills: ['', Validators.required],\n    //    dateOfBirth: ['', Validators.required],\n    //    resumeFileName: ['', Validators.required],\n    //    languages: ['', Validators.required],\n    //    cityId: ['', Validators.required],\n    //    countryId: ['', Validators.required],\n    //    resumeFile: ['', Validators.required],\n    //  });\n    //}\n    this.baseApiUrl = environment.baseApiUrl;\n    this.uploadProgress = 0;\n    this.uploadSuccess = false;\n    this.uploadMessage = \"\";\n    this.err = \"\";\n  }\n  ngOnInit() {\n    this.peopleService.getAllPeople().subscribe({\n      next: people => {\n        this.people = people;\n      },\n      error: response => {\n        console.log(response);\n      }\n    });\n    this.countryService.getCountries().subscribe(data => {\n      this.countries = data;\n    });\n    this.cityService.getCities().subscribe(data => {\n      this.cities = data;\n    });\n    this.languageService.getLanguages().subscribe(data => {\n      this.languages = data;\n    });\n    this.getLanguages();\n    this.loadCities();\n  }\n  getLanguages() {\n    this.languageService.getLanguages().subscribe(data => {\n      this.languages = data;\n    });\n  }\n  loadCities() {\n    this.cities = [];\n    this.addPersonRequest.cityId = -1;\n    this.cityService.getCitiesByCountryId(this.addPersonRequest.countryId).subscribe(data => {\n      this.cities = data;\n    });\n  }\n  //getSelectedLanguageSkills(): string {\n  //  let selectedLanguageIds = this.languages\n  //    .filter(language => language.isChecked)\n  //    .map(language => language.id)\n  //    .join(',');\n  //  return selectedLanguageIds;\n  //}\n  getSelectedLanguageSkills() {\n    let l = this.languages.length;\n    var p = new Array();\n    for (var i = 0; i < l; i++) {\n      if (this.languages[i].checked) {\n        p.push(this.languages[i].value);\n      }\n    }\n    return this.languageSkills = p.join(\", \");\n  }\n  onFileSelected(event) {\n    this.selectedResumeFile = event.target.files[0];\n    const file = event.target.files[0];\n    this.person.resumeFile = file;\n    this.person.resumeFileName = file.name;\n  }\n  onFileSelect(event) {\n    if (event.target.files.length > 0) {\n      const file = event.target.files[0];\n      this.person.resumeFile = file;\n      this.person.resumeFileName = file.name;\n    }\n  }\n  //savePerson(formValues: any) {\n  //  let person = {\n  //    ...formValues,\n  //    languageSkills: this.getSelectedLanguageSkills()\n  //  };\n  //  person = { ...person, ...this.person };\n  //  this.personService.savePerson(person)\n  //    .subscribe(data => {\n  //      console.clear();\n  //      console.log(person);\n  //      console.log(this.person.languageSkills);\n  //      console.log('Person saved successfully.');\n  //      this.refreshData();\n  //      this.refreshPeopleData();\n  //    });\n  //  this.router.navigate(['/people']);\n  //}\n  savePerson(formValues) {\n    let person = {\n      ...formValues,\n      languageSkills: this.getSelectedLanguageSkills()\n    };\n    person = {\n      ...person,\n      ...this.person\n    };\n    person.languageSkills = this.getSelectedLanguageSkills();\n    this.personService.savePerson(person).subscribe(data => {\n      console.clear();\n      console.log(person);\n      console.log(this.person.languageSkills);\n      console.log('Person saved successfully.');\n      this.refreshData();\n      this.refreshPeopleData();\n    });\n    this.router.navigate(['/people']);\n  }\n  refreshPeopleData() {\n    this.peopleService.getAllPeople().subscribe(data => {\n      this.people = data;\n    });\n  }\n  refreshData() {\n    this.languageService.getLanguages().subscribe(languages => {\n      this.languages = languages;\n    });\n  }\n  addPerson(addPersonRequest) {\n    this.showValidation();\n    this.person.languageSkills = this.getSelectedLanguageSkills();\n    console.log(this.addPersonRequest);\n    console.log(event);\n    return this.http.post(this.baseApiUrl + '/api/people', {\n      countryId: addPersonRequest.countryId,\n      cityId: addPersonRequest.cityId\n    });\n  }\n  showValidation() {\n    this.err = \"\\n\";\n    if (this.addPersonRequest.name == \"\") this.err += \"\\nPlease, Provide your name \";\n    if (this.addPersonRequest.countryId == 0) this.err += \"\\nPlease, Select your country \";\n    if (this.addPersonRequest.cityId <= 0) this.err += \"\\nPlease, Select your city\";\n    //if (this.addPersonRequest.languageSkills.length < 1) this.err += \"\\nPlease, Choose at least 1 languange skill \";\n    this.err += \"\";\n    if (this.err == \"\" || this.err == \"\\n\") {\n      return;\n    }\n    confirm(this.err);\n  }\n  onSubmit(form) {\n    const formData = new FormData();\n    let headers = new HttpHeaders();\n    headers = headers.append('enctype', 'multipart/form-data');\n    this.person.countryId = this.addPersonRequest.countryId, this.person.cityId = this.addPersonRequest.cityId, console.log(this.person);\n    this.peopleService.addPerson(this.person);\n    this.people.push(this.person);\n    this.people[-1] = this.person;\n    this.router.navigate(['/people']);\n  }\n}\nAddPersonComponent.ɵfac = function AddPersonComponent_Factory(t) {\n  return new (t || AddPersonComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.PeopleService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.CountryService), i0.ɵɵdirectiveInject(i5.CityService), i0.ɵɵdirectiveInject(i6.LanguageService), i0.ɵɵdirectiveInject(i7.HttpClient), i0.ɵɵdirectiveInject(i8.FileUploadService), i0.ɵɵdirectiveInject(i9.PersonService));\n};\nAddPersonComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddPersonComponent,\n  selectors: [[\"app-add-person\"]],\n  decls: 39,\n  vars: 9,\n  consts: [[\"rel\", \"stylesheet\", \"href\", \"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/css/bootstrap.min.css\"], [1, \"container\", \"my-5\"], [1, \"mb-3\"], [1, \"glyphicon\", \"glyphicon-envelope\", 2, \"background-color\", \"deeppink\", \"resize\", \"block\", \"color\", \"white\", \"border\", \"3px solid deeppink\"], [1, \"row\"], [1, \"col-6\"], [3, \"ngSubmit\"], [\"form\", \"ngForm\"], [1, \"mb-3\", \"form-group\"], [\"for\", \"name\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"name\", \"required\", \"\", \"name\", \"name\", \"autocomplete\", \"on\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"mb-3\", \"from-group\"], [\"for\", \"country\", 1, \"form-label\"], [\"id\", \"country\", \"name\", \"country\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [3, \"ngValue\"], [\"id\", \"countryId\", 3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"city\", 1, \"form-label\"], [\"id\", \"city\", \"class\", \"form-control\", \"name\", \"city\", 3, \"ngModel\", \"ngModelChange\", 4, \"ngIf\"], [\"class\", \"text-center\", 4, \"ngIf\"], [1, \"form-group\"], [\"for\", \"file\"], [\"id\", \"resumeFileName\", \"name\", \"resumeFileName\", \"type\", \"file\", \"accept\", \".pdf,.doc\", 1, \"form-control\", 3, \"ngModel\", \"change\", \"ngModelChange\"], [\"resumeFileName\", \"ngModel\"], [\"for\", \"dateOfBirth\", 1, \"form-label\"], [\"type\", \"date\", \"id\", \"dateOfBirth\", \"name\", \"dateOfBirth\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"dateOfBirth\", \"ngModel\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"id\", \"countryId\", 3, \"value\"], [\"id\", \"city\", \"name\", \"city\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"id\", \"cityId\", 3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"id\", \"cityId\", 3, \"value\"], [1, \"text-center\"], [\"role\", \"status\", 1, \"spinner-border\"], [1, \"sr-only\"]],\n  template: function AddPersonComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r11 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\");\n      i0.ɵɵelement(1, \"link\", 0);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 1)(3, \"h1\", 2);\n      i0.ɵɵelement(4, \"span\", 3);\n      i0.ɵɵtext(5, \" Personal Information \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"div\", 4)(7, \"div\", 5)(8, \"form\", 6, 7);\n      i0.ɵɵlistener(\"ngSubmit\", function AddPersonComponent_Template_form_ngSubmit_8_listener() {\n        i0.ɵɵrestoreView(_r11);\n        const _r0 = i0.ɵɵreference(9);\n        return i0.ɵɵresetView(ctx.savePerson(_r0.value));\n      });\n      i0.ɵɵelementStart(10, \"div\", 8)(11, \"label\", 9);\n      i0.ɵɵtext(12, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"input\", 10);\n      i0.ɵɵlistener(\"ngModelChange\", function AddPersonComponent_Template_input_ngModelChange_13_listener($event) {\n        return ctx.person.name = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"div\", 11)(15, \"label\", 12);\n      i0.ɵɵtext(16, \"Country\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"select\", 13);\n      i0.ɵɵlistener(\"ngModelChange\", function AddPersonComponent_Template_select_ngModelChange_17_listener($event) {\n        return ctx.addPersonRequest.countryId = $event;\n      })(\"change\", function AddPersonComponent_Template_select_change_17_listener() {\n        return ctx.loadCities();\n      });\n      i0.ɵɵelementStart(18, \"option\", 14);\n      i0.ɵɵtext(19, \"--Select Country--\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(20, AddPersonComponent_option_20_Template, 2, 2, \"option\", 15);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(21, \"div\", 11)(22, \"label\", 16);\n      i0.ɵɵtext(23, \"City\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(24, AddPersonComponent_select_24_Template, 4, 3, \"select\", 17);\n      i0.ɵɵtemplate(25, AddPersonComponent_div_25_Template, 4, 0, \"div\", 18);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(26, \"my-app\");\n      i0.ɵɵelementStart(27, \"div\", 19)(28, \"label\", 20);\n      i0.ɵɵtext(29, \"Resume\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"input\", 21, 22);\n      i0.ɵɵlistener(\"change\", function AddPersonComponent_Template_input_change_30_listener($event) {\n        return ctx.onFileSelected($event);\n      })(\"ngModelChange\", function AddPersonComponent_Template_input_ngModelChange_30_listener($event) {\n        return ctx.person.resumeFileName = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(32, \"div\", 8)(33, \"label\", 23);\n      i0.ɵɵtext(34, \"Date Of Birth\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(35, \"input\", 24, 25);\n      i0.ɵɵlistener(\"ngModelChange\", function AddPersonComponent_Template_input_ngModelChange_35_listener($event) {\n        return ctx.person.dateOfBirth = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(37, \"button\", 26);\n      i0.ɵɵtext(38, \"Save\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(9);\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"ngModel\", ctx.person.name);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.addPersonRequest.countryId);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngValue\", 0);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.countries);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.cities);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.cities);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.person.resumeFileName);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.person.dateOfBirth);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", !_r0.valid);\n    }\n  },\n  dependencies: [i10.NgForOf, i10.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.NgModel, i1.NgForm],\n  styles: [\".language-skills-group[_ngcontent-%COMP%] {\\r\\n  display: flex;\\r\\n  flex-wrap: wrap;\\r\\n}\\r\\n\\r\\n.language-skill-item[_ngcontent-%COMP%] {\\r\\n  margin: 0 10px 10px 0;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9hZGQtcGVyc29uL2FkZC1wZXJzb24uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQWE7RUFDYixlQUFlO0FBQ2pCOztBQUVBO0VBQ0UscUJBQXFCO0FBQ3ZCOzs7QUFHQTs7Ozs7Ozs7Q0FRQyIsInNvdXJjZXNDb250ZW50IjpbIi5sYW5ndWFnZS1za2lsbHMtZ3JvdXAge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC13cmFwOiB3cmFwO1xyXG59XHJcblxyXG4ubGFuZ3VhZ2Utc2tpbGwtaXRlbSB7XHJcbiAgbWFyZ2luOiAwIDEwcHggMTBweCAwO1xyXG59XHJcblxyXG5cclxuLyouY2hlY2tib3gtaW5saW5lIHtcclxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xyXG59XHJcblxyXG4uY2hlY2tib3gtbGFiZWwge1xyXG4gIG1hcmdpbi1sZWZ0OiA1cHg7XHJcbn1cclxuKi9cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Person","HttpHeaders","environment","i0","AddPersonComponent","constructor","fb","peopleService","router","countryService","cityService","languageService","http","fileUploadService","personService","File","id","name","countryId","cityId","languageSkills","dateOfBirth","Date","resumeFileName","languages","resumeFile","baseApiUrl","ngOnInit","getAllPeople","subscribe","next","people","error","response","console","log","getCountries","data","countries","getCities","cities","getLanguages","loadCities","addPersonRequest","getCitiesByCountryId","getSelectedLanguageSkills","l","length","p","Array","i","checked","push","value","join","onFileSelected","event","selectedResumeFile","target","files","file","person","onFileSelect","savePerson","formValues","clear","refreshData","refreshPeopleData","navigate","addPerson","showValidation","post","err","confirm","onSubmit","form","formData","FormData","headers","append","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\Jashim\\Job\\AngularFullStack\\EIS\\FullStack UI\\FullStack.UI\\src\\app\\components\\add-person\\add-person.component.ts","D:\\Jashim\\Job\\AngularFullStack\\EIS\\FullStack UI\\FullStack.UI\\src\\app\\components\\add-person\\add-person.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { City } from '../../models/city.model';\r\nimport { Country } from '../../models/country.model';\r\nimport { Language } from '../../models/language.model';\r\nimport { Person } from '../../models/person.model';\r\nimport { CityService } from '../../services/city.service';\r\nimport { CountryService } from '../../services/country.service';\r\nimport { LanguageService } from '../../services/language.service';\r\nimport { PeopleService } from '../../services/people.service';\r\n\r\nimport { HttpClient, HttpEvent, HttpEventType, HttpHeaders, HttpRequest } from '@angular/common/http';\r\nimport { FormBuilder, FormGroup, NgForm } from '@angular/forms';\r\n\r\n\r\nimport { FileUploadService } from '../../services/file-upload.service';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../environments/environment';\r\n\r\n\r\nimport { PersonService } from '../../services/person.service';\r\n\r\n@Component({\r\n  selector: 'app-add-person',\r\n  templateUrl: './add-person.component.html',\r\n  styleUrls: ['./add-person.component.css']\r\n})\r\nexport class AddPersonComponent implements OnInit {\r\n\r\n  person: Person = new Person();\r\n\r\n  people: Person[] = [\r\n\r\n  ];\r\n\r\n  countries: any[] = [];\r\n\r\n  selectedFile: File = new File([], '');\r\n  success = false;\r\n  error = false;\r\n  errorMessage: string = \"\";\r\n\r\n\r\n  languageSkills: string = \"\";\r\n  languages: any[] = [];\r\n\r\n  cities!: City[];\r\n  isChecked: boolean = false;\r\n\r\n\r\n\r\n  addPersonForm!: FormGroup;\r\n  selectedResumeFile!: File;\r\n\r\n  addPersonRequest: Person = {\r\n    id: 0,\r\n    name: '',\r\n    countryId: 0,\r\n    cityId: 0,\r\n    languageSkills: '',\r\n    dateOfBirth: new Date(),\r\n    resumeFileName: '',\r\n    languages: [],\r\n    resumeFile: new File([], '')\r\n\r\n  };\r\n\r\n  //constructor(\r\n  //  private fb: FormBuilder,\r\n  //  private personService: PeopleService,\r\n  //  private router: Router,\r\n  //  private countryService: CountryService,\r\n  //  private cityService: CityService,\r\n  //  private languageService: LanguageService\r\n  //) {\r\n  //  this.addPersonForm = this.fb.group({\r\n  //    name: ['', Validators.required],\r\n  //    country: ['', Validators.required],\r\n  //    city: ['', Validators.required],\r\n  //    languageSkills: ['', Validators.required],\r\n  //    dateOfBirth: ['', Validators.required],\r\n  //    resumeFileName: ['', Validators.required],\r\n  //    languages: ['', Validators.required],\r\n  //    cityId: ['', Validators.required],\r\n  //    countryId: ['', Validators.required],\r\n  //    resumeFile: ['', Validators.required],\r\n  //  });\r\n  //}\r\n\r\n  baseApiUrl: string = environment.baseApiUrl;\r\n  uploadProgress: number = 0;\r\n  uploadSuccess: boolean = false;\r\n  uploadMessage: string = \"\";\r\n  err: string = \"\";\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private peopleService: PeopleService,\r\n    private router: Router,\r\n    private countryService: CountryService,\r\n    private cityService: CityService,\r\n    private languageService: LanguageService,\r\n    private http: HttpClient,\r\n    private fileUploadService: FileUploadService,\r\n    private personService: PersonService\r\n\r\n  ) { }\r\n\r\n\r\n  ngOnInit() {\r\n\r\n    this.peopleService.getAllPeople()\r\n      .subscribe({\r\n        next: (people) => {\r\n          this.people = people;\r\n        },\r\n        error: (response) => {\r\n          console.log(response);\r\n        }\r\n      });\r\n\r\n    this.countryService.getCountries().subscribe((data: Country[]) => {\r\n      this.countries = data;\r\n    });\r\n\r\n    this.cityService.getCities().subscribe((data: City[]) => {\r\n      this.cities = data;\r\n    });\r\n\r\n    this.languageService.getLanguages().subscribe((data: Language[]) => {\r\n      this.languages = data;\r\n    });\r\n    this.getLanguages();\r\n    this.loadCities();\r\n  }\r\n\r\n\r\n\r\n\r\n  getLanguages() {\r\n    this.languageService.getLanguages().subscribe((data: Language[]) => {\r\n      this.languages = data;\r\n    });\r\n  }\r\n\r\n\r\n  loadCities() {\r\n    this.cities = [];\r\n    this.addPersonRequest.cityId = -1;\r\n    this.cityService.getCitiesByCountryId(this.addPersonRequest.countryId).subscribe((data: City[]) => {\r\n      this.cities = data;\r\n    });\r\n  }\r\n\r\n\r\n  //getSelectedLanguageSkills(): string {\r\n  //  let selectedLanguageIds = this.languages\r\n  //    .filter(language => language.isChecked)\r\n  //    .map(language => language.id)\r\n  //    .join(',');\r\n  //  return selectedLanguageIds;\r\n  //}\r\n\r\n\r\n  getSelectedLanguageSkills(): string {\r\n\r\n    let l = this.languages.length;\r\n    var p = new Array();\r\n    for (var i = 0; i < l; i++) {\r\n      if (this.languages[i].checked) {\r\n        p.push(this.languages[i].value);\r\n\r\n      }\r\n    }\r\n\r\n    return this.languageSkills = p.join(\", \");\r\n  }\r\n\r\n\r\n\r\n  onFileSelected(event: any) {\r\n    this.selectedResumeFile = <File>event.target.files[0];\r\n\r\n    const file = event.target.files[0];\r\n    this.person.resumeFile = file;\r\n    this.person.resumeFileName = file.name;\r\n  }\r\n\r\n  onFileSelect(event: any) {\r\n    if (event.target.files.length > 0) {\r\n      const file = event.target.files[0];\r\n      this.person.resumeFile = file;\r\n      this.person.resumeFileName = file.name;\r\n    }\r\n  }\r\n\r\n\r\n  //savePerson(formValues: any) {\r\n  //  let person = {\r\n  //    ...formValues,\r\n  //    languageSkills: this.getSelectedLanguageSkills()\r\n  //  };\r\n  //  person = { ...person, ...this.person };\r\n\r\n  //  this.personService.savePerson(person)\r\n  //    .subscribe(data => {\r\n  //      console.clear();\r\n  //      console.log(person);\r\n  //      console.log(this.person.languageSkills);\r\n  //      console.log('Person saved successfully.');\r\n  //      this.refreshData();\r\n  //      this.refreshPeopleData();\r\n  //    });\r\n  //  this.router.navigate(['/people']);\r\n  //}\r\n\r\n  savePerson(formValues: any) {\r\n    let person = {\r\n      ...formValues,\r\n      languageSkills: this.getSelectedLanguageSkills()\r\n    };\r\n    person = { ...person, ...this.person };\r\n    person.languageSkills = this.getSelectedLanguageSkills();\r\n    this.personService.savePerson(person)\r\n      .subscribe(data => {\r\n        console.clear();\r\n        console.log(person);\r\n        console.log(this.person.languageSkills);\r\n        console.log('Person saved successfully.');\r\n        this.refreshData();\r\n        this.refreshPeopleData();\r\n      });\r\n    this.router.navigate(['/people']);\r\n  }\r\n\r\n\r\n  refreshPeopleData() {\r\n    this.peopleService.getAllPeople().subscribe(data => {\r\n      this.people = data;\r\n    });\r\n  }\r\n\r\n  refreshData() {\r\n    this.languageService.getLanguages().subscribe(languages => {\r\n      this.languages = languages;\r\n    });\r\n  }\r\n\r\n\r\n  addPerson(addPersonRequest: Person): Observable<Person> {\r\n    this.showValidation();\r\n    this.person.languageSkills = this.getSelectedLanguageSkills();\r\n    console.log(this.addPersonRequest);\r\n    console.log(event);\r\n\r\n    return this.http.post<Person>(this.baseApiUrl + '/api/people', {\r\n\r\n      countryId: addPersonRequest.countryId,\r\n      cityId: addPersonRequest.cityId,\r\n    });\r\n  }\r\n\r\n\r\n\r\n  showValidation() {\r\n    this.err = \"\\n\";\r\n    if (this.addPersonRequest.name == \"\") this.err += \"\\nPlease, Provide your name \";\r\n    if (this.addPersonRequest.countryId == 0) this.err += \"\\nPlease, Select your country \";\r\n    if (this.addPersonRequest.cityId <= 0) this.err += \"\\nPlease, Select your city\";\r\n    //if (this.addPersonRequest.languageSkills.length < 1) this.err += \"\\nPlease, Choose at least 1 languange skill \";\r\n    this.err += \"\";\r\n    if (this.err == \"\" || this.err == \"\\n\") {\r\n      return;\r\n    }\r\n    confirm(this.err);\r\n  }\r\n\r\n\r\n  onSubmit(form: NgForm) {\r\n    const formData = new FormData();\r\n    let headers = new HttpHeaders();\r\n    headers = headers.append('enctype', 'multipart/form-data');\r\n    this.person.countryId = this.addPersonRequest.countryId,\r\n    this.person.cityId = this.addPersonRequest.cityId,\r\n\r\n    console.log(this.person);\r\n\r\n    this.peopleService.addPerson(this.person);\r\n    this.people.push(this.person);\r\n    this.people[-1] = this.person;\r\n\r\n    this.router.navigate(['/people']);\r\n  }\r\n\r\n}\r\n","<div>\n  <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/css/bootstrap.min.css\">\n  <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.6.1/jquery.min.js\"></script>\n  <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/js/bootstrap.min.js\"></script>\n</div>\n\n<div class=\"container my-5\">\n  <h1 class=\"mb-3\">\n  <span class=\"glyphicon glyphicon-envelope\" style=\"background-color:deeppink; resize:block; color:white; border: 3px solid deeppink;\"></span>\n  Personal Information\n  </h1>\n\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <!--<form #form=\"ngForm\" (ngSubmit)=\"onAddPerson()\" enctype=\"multipart/form-data\">-->\n      <!--<form #form=\"ngForm\" (ngSubmit)=\"addPerson(addPersonRequest)\" enctype=\"multipart/form-data\">-->\n      <!--<form #form=\"ngForm\" (ngSubmit)=\"onSubmit(form)\">-->\n      <form #form=\"ngForm\" (ngSubmit)=\"savePerson(form.value)\">\n        <div class=\"mb-3 form-group\">\n          <label for=\"name\" class=\"form-label\">Name</label>\n          <input type=\"text\" class=\"form-control\" id=\"name\" required\n                 name=\"name\" [(ngModel)]=\"person.name\" autocomplete=\"on\">\n        </div>\n\n\n\n        <div class=\"mb-3 from-group\">\n          <label for=\"country\" class=\"form-label\">Country</label>\n          <select id=\"country\" class=\"form-control\" name=\"country\" [(ngModel)]=\"addPersonRequest.countryId\" (change)=\"loadCities()\">\n            <option [ngValue]=\"0\">--Select Country--</option>\n            <option id=\"countryId\" *ngFor=\"let country of countries\" [value]=\"country.id\">{{country.name}}</option>\n          </select>\n        </div>\n\n\n        <div class=\"mb-3 from-group\">\n          <label for=\"city\" class=\"form-label\">City</label>\n          <select id=\"city\" class=\"form-control\" name=\"city\" [(ngModel)]=\"addPersonRequest.cityId\" *ngIf=\"cities\">\n            <option [ngValue]=\"0\">--Select City--</option>\n            <option id=\"cityId\" *ngFor=\"let city of cities\" [value]=\"city.id\">{{city.name}}</option>\n          </select>\n          <div class=\"text-center\" *ngIf=\"!cities\">\n            <div class=\"spinner-border\" role=\"status\">\n              <span class=\"sr-only\">Loading...</span>\n            </div>\n          </div>\n        </div>\n\n\n        <!--<div class=\"mb-6 form-group\">\n          <label for=\"languageSkills\" class=\"form-label\">Language Skills</label>\n          <div [ngModelGroup]=\"'languageSkills'\" class=\"language-skills-group\">\n            <div *ngFor=\"let language of languages\" class=\"language-skill-item\">\n              <input type=\"checkbox\" [(ngModel)]=\"language.isChecked\" [value]=\"language.id\" name=\"language\">\n              <label for=\"{{language.name}}\">{{language.name}}</label>\n            </div>\n          </div>\n        </div>-->\n\n      <my-app></my-app>\n        <div class=\"form-group\">\n          <label for=\"file\">Resume</label>\n          <input id=\"resumeFileName\"\n                 name=\"resumeFileName\"\n                 type=\"file\"\n                 class=\"form-control\"\n                 (change)=\"onFileSelected($event)\"\n                 accept=\".pdf,.doc\"\n                 [(ngModel)]=\"person.resumeFileName\"\n                 #resumeFileName=\"ngModel\">\n        </div>\n\n\n        <div class=\"mb-3 form-group\">\n          <label for=\"dateOfBirth\" class=\"form-label\">Date Of Birth</label>\n          <!--<input type=\"date\" class=\"form-control\" id=\"dateOfBirth\" name=\"dateOfBirth\" [value]=\"addPersonRequest.dateOfBirth | date: 'yyyy-MM-dd'\">-->\n          <input type=\"date\" class=\"form-control\" id=\"dateOfBirth\" name=\"dateOfBirth\" required [(ngModel)]=\"person.dateOfBirth\" #dateOfBirth=\"ngModel\">\n        </div>\n\n\n        <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!form.valid\">Save</button>\n\n      </form>\n    </div>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}