{"ast":null,"code":"import { environment } from '../../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/people.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"../../services/country.service\";\nimport * as i5 from \"../../services/city.service\";\nimport * as i6 from \"../../services/language.service\";\nimport * as i7 from \"@angular/common/http\";\nimport * as i8 from \"../../services/file-upload.service\";\nimport * as i9 from \"@angular/common\";\nfunction AddPersonComponent_option_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 31);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const country_r8 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", country_r8.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(country_r8.name);\n  }\n}\nfunction AddPersonComponent_select_25_option_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 34);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const city_r10 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", city_r10.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(city_r10.name);\n  }\n}\nfunction AddPersonComponent_select_25_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"select\", 32);\n    i0.ɵɵlistener(\"ngModelChange\", function AddPersonComponent_select_25_Template_select_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.person.cityId = $event);\n    });\n    i0.ɵɵelementStart(1, \"option\", 14);\n    i0.ɵɵtext(2, \"--Select City--\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, AddPersonComponent_select_25_option_3_Template, 2, 2, \"option\", 33);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngModel\", ctx_r3.person.cityId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngValue\", 0);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.cities);\n  }\n}\nfunction AddPersonComponent_div_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 35)(1, \"div\", 36)(2, \"span\", 37);\n    i0.ɵɵtext(3, \"Loading...\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction AddPersonComponent_div_31_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 38)(1, \"input\", 39);\n    i0.ɵɵlistener(\"ngModelChange\", function AddPersonComponent_div_31_Template_input_ngModelChange_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r15);\n      const language_r13 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(language_r13.isChecked = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"label\", 40);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const language_r13 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", language_r13.isChecked)(\"value\", language_r13.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"for\", language_r13.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(language_r13.name);\n  }\n}\nexport class AddPersonComponent {\n  constructor(fb, peopleService, router, countryService, cityService, languageService, http, fileUploadService) {\n    this.fb = fb;\n    this.peopleService = peopleService;\n    this.router = router;\n    this.countryService = countryService;\n    this.cityService = cityService;\n    this.languageService = languageService;\n    this.http = http;\n    this.fileUploadService = fileUploadService;\n    this.person = {\n      id: 0,\n      name: '',\n      countryId: 0,\n      cityId: 0,\n      languageSkills: '',\n      dateOfBirth: new Date(),\n      resumeFileName: '',\n      city: null,\n      country: null,\n      languages: [],\n      resumeFile: null\n    };\n    this.countries = [];\n    //person: Person = {\n    //  id: 0,\n    //  name: '',\n    //  countryId: 0,\n    //  cityId: 0,\n    //  languageSkills: '',\n    //  dateOfBirth: new Date(),\n    //  resumeFileName: '',\n    //  languages: [],\n    //  resumeFile: new File([], '')\n    //};\n    this.selectedFile = new File([], '');\n    this.success = false;\n    this.error = false;\n    this.errorMessage = \"\";\n    /*  resumeSelected: boolean = false;*/\n    this.languageSkills = \"\";\n    this.isChecked = false;\n    this.languages = [];\n    this.addPersonRequest = {\n      id: 0,\n      name: '',\n      countryId: 0,\n      cityId: 0,\n      languageSkills: '',\n      dateOfBirth: new Date(),\n      resumeFileName: '',\n      languages: [],\n      resumeFile: new File([], '')\n    };\n    //constructor(\n    //  private fb: FormBuilder,\n    //  private personService: PeopleService,\n    //  private router: Router,\n    //  private countryService: CountryService,\n    //  private cityService: CityService,\n    //  private languageService: LanguageService\n    //) {\n    //  this.addPersonForm = this.fb.group({\n    //    name: ['', Validators.required],\n    //    country: ['', Validators.required],\n    //    city: ['', Validators.required],\n    //    languageSkills: ['', Validators.required],\n    //    dateOfBirth: ['', Validators.required],\n    //    resumeFileName: ['', Validators.required],\n    //    languages: ['', Validators.required],\n    //    cityId: ['', Validators.required],\n    //    countryId: ['', Validators.required],\n    //    resumeFile: ['', Validators.required],\n    //  });\n    //}\n    this.baseApiUrl = environment.baseApiUrl;\n    this.uploadProgress = 0;\n    this.uploadSuccess = false;\n    this.uploadMessage = \"\";\n    this.err = \"\";\n  }\n  ngOnInit() {\n    this.countryService.getCountries().subscribe(data => {\n      this.countries = data;\n    });\n    this.cityService.getCities().subscribe(data => {\n      this.cities = data;\n    });\n    this.languageService.getLanguages().subscribe(data => {\n      this.languages = data;\n    });\n    this.getLanguages();\n    this.loadCities();\n  }\n  getLanguages() {\n    this.languageService.getLanguages().subscribe(data => {\n      this.languages = data;\n    });\n  }\n  loadCities() {\n    this.cities = [];\n    this.addPersonRequest.cityId = -1;\n    this.cityService.getCitiesByCountryId(this.addPersonRequest.countryId).subscribe(data => {\n      this.cities = data;\n    });\n  }\n  getSelectedLanguageSkills() {\n    let selectedLanguageIds = this.languages.filter(language => language.isChecked).map(language => language.id).join(',');\n    return selectedLanguageIds;\n  }\n  onFileSelected(event) {\n    this.selectedResumeFile = event.target.files[0];\n    //this.addPersonRequest.resumeFile = event.target.files[0];\n    //this.resumeSelected = true;\n    this.selectedFile = this.selectedResumeFile;\n    console.log(this.selectedFile);\n    console.log(\"File Got\");\n    console.log(this.selectedFile.name);\n  }\n  //addPerson(addPersonRequest: Person): Observable<Person> {\n  //  /*debugger;*/\n  //  const formData = new FormData();\n  //  addPersonRequest.languageSkills = this.getSelectedLanguageSkills();\n  //  formData.append('city', addPersonRequest.city);\n  //  formData.append('country', addPersonRequest.country);\n  //  formData.append('languages', addPersonRequest.languages);\n  //  formData.append('id', addPersonRequest.id.toString());\n  //  formData.append('name', addPersonRequest.name);\n  //  formData.append('countryId', addPersonRequest.countryId.toString());\n  //  formData.append('cityId', addPersonRequest.cityId.toString());\n  //  formData.append('languageSkills', addPersonRequest.languageSkills);\n  //  formData.append('dateOfBirth', addPersonRequest.dateOfBirth.toString());\n  //  formData.append('resumeFileName', this.selectedFile.name);\n  //  formData.append('resumeFile', this.selectedFile);\n  //  console.log(addPersonRequest);\n  //  this.showValidation();\n  //  let headers = new HttpHeaders();\n  //  headers.append('Content-Type', 'multipart/form-data');\n  //  return this.http.post<Person>(`${this.baseApiUrl}/api/people`, formData, {\n  //    headers: headers,\n  //    reportProgress: true,\n  //  });\n  //}\n  //onAddPerson() {\n  //  //this.fileUploadService.uploadFile(this.selectedFile).subscribe(\n  //  this.showValidation();\n  //  this.fileUploadService.uploadFile(this.selectedResumeFile).subscribe(\n  //    (event) => {\n  //      if (event instanceof HttpResponse) {\n  //        this.person.resumeFileName = event.body;\n  //        /*this.person.resumeFileName = this.selectedFile.name;*/\n  //        this.addPerson(this.person).subscribe();\n  //      }\n  //      this.router.navigate(['/people']);\n  //    }\n  //  );\n  //}\n  addPerson(addPersonRequest) {\n    this.showValidation();\n    this.person.languageSkills = this.getSelectedLanguageSkills();\n    console.log(this.addPersonRequest);\n    console.log(event);\n    //const formData = new FormData();\n    //formData.append('file', file);\n    //let headers = new HttpHeaders();\n    //headers = headers.append('enctype', 'multipart/form-data');\n    //return this.http.post(path, formData, { headers: headers })\n    return this.http.post(this.baseApiUrl + '/api/people', {\n      countryId: addPersonRequest.countryId,\n      cityId: addPersonRequest.cityId\n    });\n  }\n  showValidation() {\n    this.err = \"\\n\";\n    if (this.addPersonRequest.name == \"\") this.err += \"\\nPlease, Provide your name \";\n    if (this.addPersonRequest.countryId == 0) this.err += \"\\nPlease, Select your country \";\n    if (this.addPersonRequest.cityId <= 0) this.err += \"\\nPlease, Select your city\";\n    //if (this.addPersonRequest.languageSkills.length < 1) this.err += \"\\nPlease, Choose at least 1 languange skill \";\n    this.err += \"\";\n    if (this.err == \"\" || this.err == \"\\n\") {\n      return;\n    }\n    confirm(this.err);\n  }\n  onSubmit(form) {\n    this.peopleService.addPerson(this.person).subscribe(() => {\n      // show success message or navigate to the candidates list\n      this.router.navigate(['/people']);\n    });\n  }\n}\nAddPersonComponent.ɵfac = function AddPersonComponent_Factory(t) {\n  return new (t || AddPersonComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.PeopleService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.CountryService), i0.ɵɵdirectiveInject(i5.CityService), i0.ɵɵdirectiveInject(i6.LanguageService), i0.ɵɵdirectiveInject(i7.HttpClient), i0.ɵɵdirectiveInject(i8.FileUploadService));\n};\nAddPersonComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddPersonComponent,\n  selectors: [[\"app-add-person\"]],\n  decls: 44,\n  vars: 11,\n  consts: [[\"rel\", \"stylesheet\", \"href\", \"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/css/bootstrap.min.css\"], [1, \"container\", \"my-5\"], [1, \"mb-3\"], [1, \"glyphicon\", \"glyphicon-envelope\", 2, \"background-color\", \"deeppink\", \"resize\", \"block\", \"color\", \"white\", \"border\", \"3px solid deeppink\"], [1, \"row\"], [1, \"col-6\"], [3, \"ngSubmit\"], [\"form\", \"ngForm\"], [1, \"mb-3\", \"form-group\"], [\"for\", \"name\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"name\", \"required\", \"\", \"name\", \"name\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"ngModel\"], [\"for\", \"country\", 1, \"form-label\"], [\"id\", \"countryId\", \"name\", \"countryId\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [3, \"ngValue\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"city\", 1, \"form-label\"], [\"id\", \"city\", \"class\", \"form-control\", \"name\", \"city\", 3, \"ngModel\", \"ngModelChange\", 4, \"ngIf\"], [\"class\", \"text-center\", 4, \"ngIf\"], [1, \"mb-6\", \"form-group\"], [\"for\", \"languageSkills\", 1, \"form-label\"], [1, \"language-skills-group\", 3, \"ngModelGroup\"], [\"class\", \"language-skill-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"form-group\"], [\"for\", \"file\"], [\"id\", \"resumeFileName\", \"name\", \"resumeFileName\", \"type\", \"file\", \"accept\", \".pdf,.doc\", 1, \"form-control\", 3, \"ngModel\", \"change\", \"ngModelChange\"], [\"resumeFileName\", \"ngModel\"], [\"for\", \"dateOfBirth\", 1, \"form-label\"], [\"type\", \"date\", \"id\", \"dateOfBirth\", \"name\", \"dateOfBirth\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"dateOfBirth\", \"ngModel\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [3, \"value\"], [\"id\", \"city\", \"name\", \"city\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"id\", \"cityId\", 3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"id\", \"cityId\", 3, \"value\"], [1, \"text-center\"], [\"role\", \"status\", 1, \"spinner-border\"], [1, \"sr-only\"], [1, \"language-skill-item\"], [\"type\", \"checkbox\", \"name\", \"language\", 3, \"ngModel\", \"value\", \"ngModelChange\"], [3, \"for\"]],\n  template: function AddPersonComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r16 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\");\n      i0.ɵɵelement(1, \"link\", 0);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 1)(3, \"h1\", 2);\n      i0.ɵɵelement(4, \"span\", 3);\n      i0.ɵɵtext(5, \" Personal Information \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"div\", 4)(7, \"div\", 5)(8, \"form\", 6, 7);\n      i0.ɵɵlistener(\"ngSubmit\", function AddPersonComponent_Template_form_ngSubmit_8_listener() {\n        i0.ɵɵrestoreView(_r16);\n        const _r0 = i0.ɵɵreference(9);\n        return i0.ɵɵresetView(ctx.onSubmit(_r0));\n      });\n      i0.ɵɵelementStart(10, \"div\", 8)(11, \"label\", 9);\n      i0.ɵɵtext(12, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"input\", 10, 11);\n      i0.ɵɵlistener(\"ngModelChange\", function AddPersonComponent_Template_input_ngModelChange_13_listener($event) {\n        return ctx.person.name = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"div\", 8)(16, \"label\", 12);\n      i0.ɵɵtext(17, \"Country\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"select\", 13);\n      i0.ɵɵlistener(\"ngModelChange\", function AddPersonComponent_Template_select_ngModelChange_18_listener($event) {\n        return ctx.person.countryId = $event;\n      })(\"change\", function AddPersonComponent_Template_select_change_18_listener() {\n        return ctx.loadCities();\n      });\n      i0.ɵɵelementStart(19, \"option\", 14);\n      i0.ɵɵtext(20, \"--Select Country--\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(21, AddPersonComponent_option_21_Template, 2, 2, \"option\", 15);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(22, \"div\", 2)(23, \"label\", 16);\n      i0.ɵɵtext(24, \"City\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(25, AddPersonComponent_select_25_Template, 4, 3, \"select\", 17);\n      i0.ɵɵtemplate(26, AddPersonComponent_div_26_Template, 4, 0, \"div\", 18);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"div\", 19)(28, \"label\", 20);\n      i0.ɵɵtext(29, \"Language Skills\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"div\", 21);\n      i0.ɵɵtemplate(31, AddPersonComponent_div_31_Template, 4, 4, \"div\", 22);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(32, \"div\", 23)(33, \"label\", 24);\n      i0.ɵɵtext(34, \"Resume\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(35, \"input\", 25, 26);\n      i0.ɵɵlistener(\"change\", function AddPersonComponent_Template_input_change_35_listener($event) {\n        return ctx.onFileSelected($event);\n      })(\"ngModelChange\", function AddPersonComponent_Template_input_ngModelChange_35_listener($event) {\n        return ctx.person.resumeFileName = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(37, \"div\", 8)(38, \"label\", 27);\n      i0.ɵɵtext(39, \"Date Of Birth\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(40, \"input\", 28, 29);\n      i0.ɵɵlistener(\"ngModelChange\", function AddPersonComponent_Template_input_ngModelChange_40_listener($event) {\n        return ctx.person.dateOfBirth = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(42, \"button\", 30);\n      i0.ɵɵtext(43, \"Save\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(9);\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"ngModel\", ctx.person.name);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.person.countryId);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngValue\", 0);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.countries);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.cities);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.cities);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModelGroup\", \"languageSkills\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.languages);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.person.resumeFileName);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.person.dateOfBirth);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", !_r0.valid);\n    }\n  },\n  dependencies: [i9.NgForOf, i9.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.CheckboxControlValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.NgModel, i1.NgModelGroup, i1.NgForm],\n  styles: [\".language-skills-group[_ngcontent-%COMP%] {\\r\\n  display: flex;\\r\\n  flex-wrap: wrap;\\r\\n}\\r\\n\\r\\n.language-skill-item[_ngcontent-%COMP%] {\\r\\n  margin: 0 10px 10px 0;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9hZGQtcGVyc29uL2FkZC1wZXJzb24uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQWE7RUFDYixlQUFlO0FBQ2pCOztBQUVBO0VBQ0UscUJBQXFCO0FBQ3ZCOzs7QUFHQTs7Ozs7Ozs7Q0FRQyIsInNvdXJjZXNDb250ZW50IjpbIi5sYW5ndWFnZS1za2lsbHMtZ3JvdXAge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC13cmFwOiB3cmFwO1xyXG59XHJcblxyXG4ubGFuZ3VhZ2Utc2tpbGwtaXRlbSB7XHJcbiAgbWFyZ2luOiAwIDEwcHggMTBweCAwO1xyXG59XHJcblxyXG5cclxuLyouY2hlY2tib3gtaW5saW5lIHtcclxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xyXG59XHJcblxyXG4uY2hlY2tib3gtbGFiZWwge1xyXG4gIG1hcmdpbi1sZWZ0OiA1cHg7XHJcbn1cclxuKi9cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["environment","i0","AddPersonComponent","constructor","fb","peopleService","router","countryService","cityService","languageService","http","fileUploadService","id","name","countryId","cityId","languageSkills","dateOfBirth","Date","resumeFileName","city","country","languages","resumeFile","File","baseApiUrl","ngOnInit","getCountries","subscribe","data","countries","getCities","cities","getLanguages","loadCities","addPersonRequest","getCitiesByCountryId","getSelectedLanguageSkills","selectedLanguageIds","filter","language","isChecked","map","join","onFileSelected","event","selectedResumeFile","target","files","selectedFile","console","log","addPerson","showValidation","person","post","err","confirm","onSubmit","form","navigate","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\Jashim\\Job\\AngularFullStack\\EIS\\FullStack UI\\FullStack.UI\\src\\app\\components\\add-person\\add-person.component.ts","D:\\Jashim\\Job\\AngularFullStack\\EIS\\FullStack UI\\FullStack.UI\\src\\app\\components\\add-person\\add-person.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { City } from '../../models/city.model';\r\nimport { Country } from '../../models/country.model';\r\nimport { Language } from '../../models/language.model';\r\nimport { Person } from '../../models/person.model';\r\nimport { CityService } from '../../services/city.service';\r\nimport { CountryService } from '../../services/country.service';\r\nimport { LanguageService } from '../../services/language.service';\r\nimport { PeopleService } from '../../services/people.service';\r\n\r\nimport { HttpClient, HttpEvent, HttpEventType, HttpHeaders, HttpRequest } from '@angular/common/http';\r\nimport { FormBuilder, FormGroup, NgForm } from '@angular/forms';\r\n\r\n\r\nimport { FileUploadService } from '../../services/file-upload.service';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-add-person',\r\n  templateUrl: './add-person.component.html',\r\n  styleUrls: ['./add-person.component.css']\r\n})\r\nexport class AddPersonComponent implements OnInit {\r\n\r\n  person: Person = {\r\n    id: 0,\r\n    name: '',\r\n    countryId: 0,\r\n    cityId: 0,\r\n    languageSkills: '',\r\n    dateOfBirth: new Date(),\r\n    resumeFileName: '',\r\n    city: null,\r\n    country: null,\r\n    languages: [],\r\n    resumeFile: null\r\n  };\r\n  countries: any[] = [];\r\n\r\n  //person: Person = {\r\n  //  id: 0,\r\n  //  name: '',\r\n  //  countryId: 0,\r\n  //  cityId: 0,\r\n  //  languageSkills: '',\r\n  //  dateOfBirth: new Date(),\r\n  //  resumeFileName: '',\r\n  //  languages: [],\r\n  //  resumeFile: new File([], '')\r\n\r\n  //};\r\n  selectedFile: File = new File([], '');\r\n  success = false;\r\n  error = false;\r\n  errorMessage: string = \"\";\r\n\r\n  /*  resumeSelected: boolean = false;*/\r\n\r\n  languageSkills: string = \"\";\r\n  /*countries!: Country[];*/\r\n  cities!: City[];\r\n  isChecked: boolean = false;\r\n  languages: Language[] = [];\r\n\r\n\r\n  addPersonForm!: FormGroup;\r\n  selectedResumeFile!: File;\r\n\r\n  addPersonRequest: Person = {\r\n    id: 0,\r\n    name: '',\r\n    countryId: 0,\r\n    cityId: 0,\r\n    languageSkills: '',\r\n    dateOfBirth: new Date(),\r\n    resumeFileName: '',\r\n    languages: [],\r\n    resumeFile: new File([], '')\r\n\r\n  };\r\n\r\n  //constructor(\r\n  //  private fb: FormBuilder,\r\n  //  private personService: PeopleService,\r\n  //  private router: Router,\r\n  //  private countryService: CountryService,\r\n  //  private cityService: CityService,\r\n  //  private languageService: LanguageService\r\n  //) {\r\n  //  this.addPersonForm = this.fb.group({\r\n  //    name: ['', Validators.required],\r\n  //    country: ['', Validators.required],\r\n  //    city: ['', Validators.required],\r\n  //    languageSkills: ['', Validators.required],\r\n  //    dateOfBirth: ['', Validators.required],\r\n  //    resumeFileName: ['', Validators.required],\r\n  //    languages: ['', Validators.required],\r\n  //    cityId: ['', Validators.required],\r\n  //    countryId: ['', Validators.required],\r\n  //    resumeFile: ['', Validators.required],\r\n  //  });\r\n  //}\r\n\r\n  baseApiUrl: string = environment.baseApiUrl;\r\n  uploadProgress: number = 0;\r\n  uploadSuccess: boolean = false;\r\n  uploadMessage: string = \"\";\r\n  err: string = \"\";\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private peopleService: PeopleService,\r\n    private router: Router,\r\n    private countryService: CountryService,\r\n    private cityService: CityService,\r\n    private languageService: LanguageService,\r\n    private http: HttpClient,\r\n    private fileUploadService: FileUploadService\r\n\r\n  ) { }\r\n\r\n\r\n  ngOnInit() {\r\n\r\n    this.countryService.getCountries().subscribe((data: Country[]) => {\r\n      this.countries = data;\r\n    });\r\n\r\n    this.cityService.getCities().subscribe((data: City[]) => {\r\n      this.cities = data;\r\n    });\r\n\r\n    this.languageService.getLanguages().subscribe((data: Language[]) => {\r\n      this.languages = data;\r\n    });\r\n    this.getLanguages();\r\n    this.loadCities();\r\n  }\r\n\r\n\r\n\r\n\r\n  getLanguages() {\r\n    this.languageService.getLanguages().subscribe((data: Language[]) => {\r\n      this.languages = data;\r\n    });\r\n  }\r\n\r\n\r\n  loadCities() {\r\n    this.cities = [];\r\n    this.addPersonRequest.cityId = -1;\r\n    this.cityService.getCitiesByCountryId(this.addPersonRequest.countryId).subscribe((data: City[]) => {\r\n      this.cities = data;\r\n    });\r\n  }\r\n\r\n\r\n  getSelectedLanguageSkills(): string {\r\n    let selectedLanguageIds = this.languages\r\n      .filter(language => language.isChecked)\r\n      .map(language => language.id)\r\n      .join(',');\r\n    return selectedLanguageIds;\r\n  }\r\n\r\n\r\n  onFileSelected(event: any) {\r\n    this.selectedResumeFile = <File>event.target.files[0];\r\n    //this.addPersonRequest.resumeFile = event.target.files[0];\r\n    //this.resumeSelected = true;\r\n    this.selectedFile = this.selectedResumeFile;\r\n    console.log(this.selectedFile);\r\n    console.log(\"File Got\");\r\n    console.log(this.selectedFile.name);\r\n  }\r\n\r\n\r\n\r\n  //addPerson(addPersonRequest: Person): Observable<Person> {\r\n  //  /*debugger;*/\r\n  //  const formData = new FormData();\r\n\r\n  //  addPersonRequest.languageSkills = this.getSelectedLanguageSkills();\r\n\r\n  //  formData.append('city', addPersonRequest.city);\r\n  //  formData.append('country', addPersonRequest.country);\r\n  //  formData.append('languages', addPersonRequest.languages);\r\n\r\n  //  formData.append('id', addPersonRequest.id.toString());\r\n  //  formData.append('name', addPersonRequest.name);\r\n  //  formData.append('countryId', addPersonRequest.countryId.toString());\r\n  //  formData.append('cityId', addPersonRequest.cityId.toString());\r\n  //  formData.append('languageSkills', addPersonRequest.languageSkills);\r\n  //  formData.append('dateOfBirth', addPersonRequest.dateOfBirth.toString());\r\n\r\n  //  formData.append('resumeFileName', this.selectedFile.name);\r\n  //  formData.append('resumeFile', this.selectedFile);\r\n  //  console.log(addPersonRequest);\r\n\r\n  //  this.showValidation();\r\n\r\n  //  let headers = new HttpHeaders();\r\n  //  headers.append('Content-Type', 'multipart/form-data');\r\n  //  return this.http.post<Person>(`${this.baseApiUrl}/api/people`, formData, {\r\n  //    headers: headers,\r\n  //    reportProgress: true,\r\n  //  });\r\n  //}\r\n\r\n  //onAddPerson() {\r\n  //  //this.fileUploadService.uploadFile(this.selectedFile).subscribe(\r\n  //  this.showValidation();\r\n  //  this.fileUploadService.uploadFile(this.selectedResumeFile).subscribe(\r\n  //    (event) => {\r\n  //      if (event instanceof HttpResponse) {\r\n  //        this.person.resumeFileName = event.body;\r\n  //        /*this.person.resumeFileName = this.selectedFile.name;*/\r\n  //        this.addPerson(this.person).subscribe();\r\n  //      }\r\n  //      this.router.navigate(['/people']);\r\n  //    }\r\n  //  );\r\n  //}\r\n\r\n\r\n  addPerson(addPersonRequest: Person): Observable<Person> {\r\n    this.showValidation();\r\n    this.person.languageSkills = this.getSelectedLanguageSkills();\r\n    console.log(this.addPersonRequest);\r\n    console.log(event);\r\n\r\n\r\n    //const formData = new FormData();\r\n    //formData.append('file', file);\r\n    //let headers = new HttpHeaders();\r\n    //headers = headers.append('enctype', 'multipart/form-data');\r\n    //return this.http.post(path, formData, { headers: headers })\r\n\r\n\r\n    return this.http.post<Person>(this.baseApiUrl + '/api/people', {\r\n\r\n      countryId: addPersonRequest.countryId,\r\n      cityId: addPersonRequest.cityId,\r\n    });\r\n  }\r\n\r\n\r\n\r\n  showValidation() {\r\n    this.err = \"\\n\";\r\n    if (this.addPersonRequest.name == \"\") this.err += \"\\nPlease, Provide your name \";\r\n    if (this.addPersonRequest.countryId == 0) this.err += \"\\nPlease, Select your country \";\r\n    if (this.addPersonRequest.cityId <= 0) this.err += \"\\nPlease, Select your city\";\r\n    //if (this.addPersonRequest.languageSkills.length < 1) this.err += \"\\nPlease, Choose at least 1 languange skill \";\r\n    this.err += \"\";\r\n    if (this.err == \"\" || this.err == \"\\n\") {\r\n      return;\r\n    }\r\n    confirm(this.err);\r\n  }\r\n\r\n\r\n  onSubmit(form: NgForm) {\r\n    this.peopleService.addPerson(this.person).subscribe(() => {\r\n      // show success message or navigate to the candidates list\r\n      this.router.navigate(['/people']);\r\n    });\r\n  }\r\n\r\n}\r\n","<div>\n  <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/css/bootstrap.min.css\">\n  <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.6.1/jquery.min.js\"></script>\n  <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/js/bootstrap.min.js\"></script>\n</div>\n\n<div class=\"container my-5\">\n  <h1 class=\"mb-3\">\n  <span class=\"glyphicon glyphicon-envelope\" style=\"background-color:deeppink; resize:block; color:white; border: 3px solid deeppink;\"></span>\n  Personal Information\n  </h1>\n\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <!--<form #form=\"ngForm\" (ngSubmit)=\"onAddPerson()\" enctype=\"multipart/form-data\">-->\n      <!--<form #form=\"ngForm\" (ngSubmit)=\"addPerson(addPersonRequest)\" enctype=\"multipart/form-data\">-->\n      <form #form=\"ngForm\" (ngSubmit)=\"onSubmit(form)\">\n        <div class=\"mb-3 form-group\">\n          <label for=\"name\" class=\"form-label\">Name</label>\n          <input type=\"text\" class=\"form-control\" id=\"name\" required\n                 name=\"name\" [(ngModel)]=\"person.name\" #name=\"ngModel\">\n        </div>\n\n\n        <div class=\"mb-3 form-group\">\n          <label for=\"country\" class=\"form-label\">Country</label>\n          <select id=\"countryId\" class=\"form-control\" name=\"countryId\" [(ngModel)]=\"person.countryId\" (change)=\"loadCities()\">\n            <option [ngValue]=\"0\">--Select Country--</option>\n            <option *ngFor=\"let country of countries\" [value]=\"country.id\">{{country.name}}</option>\n          </select>\n        </div>\n\n\n\n        <div class=\"mb-3\">\n          <label for=\"city\" class=\"form-label\">City</label>\n          <select id=\"city\" class=\"form-control\" name=\"city\" [(ngModel)]=\"person.cityId\" *ngIf=\"cities\">\n            <option [ngValue]=\"0\">--Select City--</option>\n            <option id=\"cityId\" *ngFor=\"let city of cities\" [value]=\"city.id\">{{city.name}}</option>\n          </select>\n          <div class=\"text-center\" *ngIf=\"!cities\">\n            <div class=\"spinner-border\" role=\"status\">\n              <span class=\"sr-only\">Loading...</span>\n            </div>\n          </div>\n        </div>\n\n\n        <div class=\"mb-6 form-group\">\n          <label for=\"languageSkills\" class=\"form-label\">Language Skills</label>\n          <div [ngModelGroup]=\"'languageSkills'\" class=\"language-skills-group\">\n            <div *ngFor=\"let language of languages\" class=\"language-skill-item\">\n              <input type=\"checkbox\" [(ngModel)]=\"language.isChecked\" [value]=\"language.id\" name=\"language\">\n              <label for=\"{{language.name}}\">{{language.name}}</label>\n            </div>\n          </div>\n        </div>\n\n\n        <div class=\"form-group\">\n          <label for=\"file\">Resume</label>\n          <input id=\"resumeFileName\"\n                 name=\"resumeFileName\"\n                 type=\"file\"\n                 class=\"form-control\"\n                 (change)=\"onFileSelected($event)\"\n                 accept=\".pdf,.doc\"\n                 [(ngModel)]=\"person.resumeFileName\"\n                 #resumeFileName=\"ngModel\">\n        </div>\n\n\n        <div class=\"mb-3 form-group\">\n          <label for=\"dateOfBirth\" class=\"form-label\">Date Of Birth</label>\n          <!--<input type=\"date\" class=\"form-control\" id=\"dateOfBirth\" name=\"dateOfBirth\" [value]=\"addPersonRequest.dateOfBirth | date: 'yyyy-MM-dd'\">-->\n          <input type=\"date\" class=\"form-control\" id=\"dateOfBirth\" name=\"dateOfBirth\" required [(ngModel)]=\"person.dateOfBirth\" #dateOfBirth=\"ngModel\">\n        </div>\n\n\n        <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!form.valid\">Save</button>\n\n      </form>\n    </div>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}