{"ast":null,"code":"import { forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nconst _c0 = [\"*\"];\nexport class CheckboxGroupComponent {\n  get model() {\n    return this._model;\n  }\n  writeValue(value) {\n    this._model = value;\n  }\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n  set(value) {\n    this._model = value;\n    this.onChange(this._model);\n  }\n  addOrRemove(value) {\n    if (this.contains(value)) {\n      this.remove(value);\n    } else {\n      this.add(value);\n    }\n  }\n  contains(value) {\n    if (this._model instanceof Array) {\n      return this._model.indexOf(value) > -1;\n    } else if (!!this._model) {\n      return this._model === value;\n    }\n    return false;\n  }\n  add(value) {\n    if (!this.contains(value)) {\n      if (this._model instanceof Array) {\n        this._model.push(value);\n      } else {\n        this._model = [value];\n      }\n      this.onChange(this._model);\n    }\n  }\n  remove(value) {\n    const index = this._model.indexOf(value);\n    if (!this._model || index < 0) {\n      return;\n    }\n    this._model.splice(index, 1);\n    this.onChange(this._model);\n  }\n}\nCheckboxGroupComponent.ɵfac = function CheckboxGroupComponent_Factory(t) {\n  return new (t || CheckboxGroupComponent)();\n};\nCheckboxGroupComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CheckboxGroupComponent,\n  selectors: [[\"checkbox-group\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => CheckboxGroupComponent),\n    multi: true\n  }])],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function CheckboxGroupComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2\n});","map":{"version":3,"mappings":"AAAA,SAAoBA,UAAU,QAAQ,eAAe;AACrD,SAA+BC,iBAAiB,QAAQ,gBAAgB;;;AAaxE,OAAM,MAAOC,sBAAsB;EAKjC,IAAIC,KAAK;IACP,OAAO,IAAI,CAACC,MAAM;EACpB;EAEAC,UAAU,CAACC,KAAU;IACnB,IAAI,CAACF,MAAM,GAAGE,KAAK;EACrB;EAEAC,gBAAgB,CAACC,EAAO;IACtB,IAAI,CAACC,QAAQ,GAAGD,EAAE;EACpB;EAEAE,iBAAiB,CAACF,EAAO;IACvB,IAAI,CAACG,SAAS,GAAGH,EAAE;EACrB;EAEAI,GAAG,CAACN,KAAU;IACZ,IAAI,CAACF,MAAM,GAAGE,KAAK;IACnB,IAAI,CAACG,QAAQ,CAAC,IAAI,CAACL,MAAM,CAAC;EAC5B;EAEAS,WAAW,CAACP,KAAU;IACpB,IAAI,IAAI,CAACQ,QAAQ,CAACR,KAAK,CAAC,EAAE;MACxB,IAAI,CAACS,MAAM,CAACT,KAAK,CAAC;KACnB,MAAM;MACL,IAAI,CAACU,GAAG,CAACV,KAAK,CAAC;;EAEnB;EAEAQ,QAAQ,CAACR,KAAU;IACjB,IAAI,IAAI,CAACF,MAAM,YAAYa,KAAK,EAAE;MAChC,OAAO,IAAI,CAACb,MAAM,CAACc,OAAO,CAACZ,KAAK,CAAC,GAAG,CAAC,CAAC;KACvC,MAAM,IAAI,CAAC,CAAC,IAAI,CAACF,MAAM,EAAE;MACxB,OAAO,IAAI,CAACA,MAAM,KAAKE,KAAK;;IAG9B,OAAO,KAAK;EACd;EAEQU,GAAG,CAACV,KAAU;IACpB,IAAI,CAAC,IAAI,CAACQ,QAAQ,CAACR,KAAK,CAAC,EAAE;MACzB,IAAI,IAAI,CAACF,MAAM,YAAYa,KAAK,EAAE;QAChC,IAAI,CAACb,MAAM,CAACe,IAAI,CAACb,KAAK,CAAC;OACxB,MAAM;QACL,IAAI,CAACF,MAAM,GAAG,CAACE,KAAK,CAAC;;MAEvB,IAAI,CAACG,QAAQ,CAAC,IAAI,CAACL,MAAM,CAAC;;EAE9B;EAEQW,MAAM,CAACT,KAAU;IACvB,MAAMc,KAAK,GAAG,IAAI,CAAChB,MAAM,CAACc,OAAO,CAACZ,KAAK,CAAC;IACxC,IAAI,CAAC,IAAI,CAACF,MAAM,IAAIgB,KAAK,GAAG,CAAC,EAAE;MAC7B;;IAGF,IAAI,CAAChB,MAAM,CAACiB,MAAM,CAACD,KAAK,EAAE,CAAC,CAAC;IAC5B,IAAI,CAACX,QAAQ,CAAC,IAAI,CAACL,MAAM,CAAC;EAC5B;;AA/DWF,sBAAsB;mBAAtBA,sBAAsB;AAAA;AAAtBA,sBAAsB;QAAtBA,sBAAsB;EAAAoB;EAAAC,iCARtB,CACT;IACEC,OAAO,EAAEvB,iBAAiB;IAC1BwB,WAAW,EAAEzB,UAAU,CAAC,MAAME,sBAAsB,CAAC;IACrDwB,KAAK,EAAE;GACR,CACF;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;;MAPUC,kBAAyB","names":["forwardRef","NG_VALUE_ACCESSOR","CheckboxGroupComponent","model","_model","writeValue","value","registerOnChange","fn","onChange","registerOnTouched","onTouched","set","addOrRemove","contains","remove","add","Array","indexOf","push","index","splice","selectors","features","provide","useExisting","multi","ngContentSelectors","decls","vars","template","i0"],"sourceRoot":"","sources":["D:\\Jashim\\Job\\AngularFullStack\\EIS\\FullStack UI\\FullStack.UI\\src\\app\\checkbox-group.component.ts"],"sourcesContent":["import { Component, forwardRef } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'checkbox-group',\r\n  template: `<ng-content></ng-content>`,\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => CheckboxGroupComponent),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class CheckboxGroupComponent implements ControlValueAccessor {\r\n  private _model: any;\r\n  private onChange!: (m: any) => void;\r\n  private onTouched!: (m: any) => void;\r\n\r\n  get model() {\r\n    return this._model;\r\n  }\r\n\r\n  writeValue(value: any): void {\r\n    this._model = value;\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  set(value: any) {\r\n    this._model = value;\r\n    this.onChange(this._model);\r\n  }\r\n\r\n  addOrRemove(value: any) {\r\n    if (this.contains(value)) {\r\n      this.remove(value);\r\n    } else {\r\n      this.add(value);\r\n    }\r\n  }\r\n\r\n  contains(value: any): boolean {\r\n    if (this._model instanceof Array) {\r\n      return this._model.indexOf(value) > -1;\r\n    } else if (!!this._model) {\r\n      return this._model === value;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  private add(value: any) {\r\n    if (!this.contains(value)) {\r\n      if (this._model instanceof Array) {\r\n        this._model.push(value);\r\n      } else {\r\n        this._model = [value];\r\n      }\r\n      this.onChange(this._model);\r\n    }\r\n  }\r\n\r\n  private remove(value: any) {\r\n    const index = this._model.indexOf(value);\r\n    if (!this._model || index < 0) {\r\n      return;\r\n    }\r\n\r\n    this._model.splice(index, 1);\r\n    this.onChange(this._model);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}