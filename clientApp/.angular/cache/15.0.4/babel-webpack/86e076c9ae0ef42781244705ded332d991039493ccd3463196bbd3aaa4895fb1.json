{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { environment } from '../../../environments/environment';\nlet AddPersonComponent = class AddPersonComponent {\n  constructor(fb, personService, router, countryService, cityService, languageService, http, fileUploadService) {\n    this.fb = fb;\n    this.personService = personService;\n    this.router = router;\n    this.countryService = countryService;\n    this.cityService = cityService;\n    this.languageService = languageService;\n    this.http = http;\n    this.fileUploadService = fileUploadService;\n    this.person = {\n      id: 0,\n      name: '',\n      countryId: 0,\n      cityId: 0,\n      languageSkills: '',\n      dateOfBirth: new Date(),\n      resumeFileName: '',\n      languages: [],\n      resumeFile: new File([], '')\n    };\n    this.selectedFile = new File([], '');\n    this.success = false;\n    this.error = false;\n    this.errorMessage = \"\";\n    this.languageSkills = \"\";\n    this.isChecked = false;\n    this.languages = [];\n    this.addPersonRequest = {\n      id: 0,\n      name: '',\n      countryId: 0,\n      cityId: 0,\n      languageSkills: '',\n      dateOfBirth: new Date(),\n      resumeFileName: '',\n      languages: [],\n      resumeFile: new File([], '')\n    };\n    //constructor(\n    //  private fb: FormBuilder,\n    //  private personService: PeopleService,\n    //  private router: Router,\n    //  private countryService: CountryService,\n    //  private cityService: CityService,\n    //  private languageService: LanguageService\n    //) {\n    //  this.addPersonForm = this.fb.group({\n    //    name: ['', Validators.required],\n    //    country: ['', Validators.required],\n    //    city: ['', Validators.required],\n    //    languageSkills: ['', Validators.required],\n    //    dateOfBirth: ['', Validators.required],\n    //    resumeFileName: ['', Validators.required],\n    //    languages: ['', Validators.required],\n    //    cityId: ['', Validators.required],\n    //    countryId: ['', Validators.required],\n    //    resumeFile: ['', Validators.required],\n    //  });\n    //}\n    this.baseApiUrl = environment.baseApiUrl;\n    this.uploadProgress = 0;\n    this.uploadSuccess = false;\n    this.uploadMessage = \"\";\n  }\n  ngOnInit() {\n    this.countryService.getCountries().subscribe(data => {\n      this.countries = data;\n    });\n    this.cityService.getCities().subscribe(data => {\n      this.cities = data;\n    });\n    this.languageService.getLanguages().subscribe(data => {\n      this.languages = data;\n    });\n    this.getLanguages();\n    this.loadCities();\n  }\n  getLanguages() {\n    this.languageService.getLanguages().subscribe(data => {\n      this.languages = data;\n    });\n  }\n  loadCities() {\n    this.cities = [];\n    this.addPersonRequest.cityId = -1;\n    this.cityService.getCitiesByCountryId(this.addPersonRequest.countryId).subscribe(data => {\n      this.cities = data;\n    });\n  }\n  getSelectedLanguageSkills() {\n    let selectedLanguageIds = this.languages.filter(language => language.isChecked).map(language => language.id).join(',');\n    return selectedLanguageIds;\n  }\n  onFileSelected(event) {\n    this.selectedResumeFile = event.target.files[0];\n    this.selectedFile = this.selectedResumeFile;\n    console.log(this.selectedFile);\n    console.log(\"File Got\");\n  }\n  addPerson(person) {\n    const formData = new FormData();\n    person.languageSkills = this.getSelectedLanguageSkills();\n    formData.append('id', person.id.toString());\n    formData.append('name', person.name);\n    formData.append('countryId', person.countryId.toString());\n    formData.append('cityId', person.cityId.toString());\n    formData.append('languageSkills', person.languageSkills);\n    formData.append('dateOfBirth', person.dateOfBirth.toString());\n    formData.append('resumeFileName', person.resumeFileName);\n    //formData.append('resumeFile', person.resumeFile);\n    formData.append('resumeFile', this.selectedFile);\n    console.log(person);\n    return this.http.post(`${this.baseApiUrl}/api/people`, formData);\n  }\n};\nAddPersonComponent = __decorate([Component({\n  selector: 'app-add-person',\n  templateUrl: './add-person.component.html',\n  styleUrls: ['./add-person.component.css']\n})], AddPersonComponent);\nexport { AddPersonComponent };","map":{"version":3,"mappings":"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","names":["Component","environment","AddPersonComponent","constructor","fb","personService","router","countryService","cityService","languageService","http","fileUploadService","id","name","countryId","cityId","languageSkills","dateOfBirth","Date","resumeFileName","languages","resumeFile","File","baseApiUrl","ngOnInit","getCountries","subscribe","data","countries","getCities","cities","getLanguages","loadCities","addPersonRequest","getCitiesByCountryId","getSelectedLanguageSkills","selectedLanguageIds","filter","language","isChecked","map","join","onFileSelected","event","selectedResumeFile","target","files","selectedFile","console","log","addPerson","person","formData","FormData","append","toString","post","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["D:\\Jashim\\Job\\AngularFullStack\\EIS\\FullStack UI\\FullStack.UI\\src\\app\\components\\add-person\\add-person.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { City } from '../../models/city.model';\r\nimport { Country } from '../../models/country.model';\r\nimport { Language } from '../../models/language.model';\r\nimport { Person } from '../../models/person.model';\r\nimport { CityService } from '../../services/city.service';\r\nimport { CountryService } from '../../services/country.service';\r\nimport { LanguageService } from '../../services/language.service';\r\nimport { PeopleService } from '../../services/people.service';\r\n\r\nimport { HttpClient, HttpEvent, HttpEventType, HttpHeaders, HttpRequest } from '@angular/common/http';\r\nimport { FormBuilder, FormGroup, NgForm } from '@angular/forms';\r\n\r\n\r\nimport { FileUploadService } from '../../services/file-upload.service';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-add-person',\r\n  templateUrl: './add-person.component.html',\r\n  styleUrls: ['./add-person.component.css']\r\n})\r\nexport class AddPersonComponent implements OnInit {\r\n\r\n  person: Person = {\r\n    id: 0,\r\n    name: '',\r\n    countryId: 0,\r\n    cityId: 0,\r\n    languageSkills: '',\r\n    dateOfBirth: new Date(),\r\n    resumeFileName: '',\r\n    languages: [],\r\n    resumeFile: new File([], '')\r\n\r\n  };\r\n  selectedFile: File = new File([], '');\r\n  success = false;\r\n  error = false;\r\n  errorMessage: string = \"\";\r\n\r\n\r\n  languageSkills: string = \"\";\r\n\r\n  countries!: Country[];\r\n  cities!: City[];\r\n\r\n  isChecked: boolean = false;\r\n  languages: Language[] = [];\r\n\r\n\r\n  addPersonForm!: FormGroup;\r\n  selectedResumeFile!: File;\r\n\r\n  addPersonRequest: Person = {\r\n    id: 0,\r\n    name: '',\r\n    countryId: 0,\r\n    cityId: 0,\r\n    languageSkills: '',\r\n    dateOfBirth: new Date(),\r\n    resumeFileName: '',\r\n    languages: [],\r\n    resumeFile: new File([], '')\r\n\r\n  };\r\n\r\n  //constructor(\r\n  //  private fb: FormBuilder,\r\n  //  private personService: PeopleService,\r\n  //  private router: Router,\r\n  //  private countryService: CountryService,\r\n  //  private cityService: CityService,\r\n  //  private languageService: LanguageService\r\n  //) {\r\n  //  this.addPersonForm = this.fb.group({\r\n  //    name: ['', Validators.required],\r\n  //    country: ['', Validators.required],\r\n  //    city: ['', Validators.required],\r\n  //    languageSkills: ['', Validators.required],\r\n  //    dateOfBirth: ['', Validators.required],\r\n  //    resumeFileName: ['', Validators.required],\r\n  //    languages: ['', Validators.required],\r\n  //    cityId: ['', Validators.required],\r\n  //    countryId: ['', Validators.required],\r\n  //    resumeFile: ['', Validators.required],\r\n  //  });\r\n  //}\r\n\r\n  baseApiUrl: string = environment.baseApiUrl;\r\n  uploadProgress: number = 0;\r\n  uploadSuccess: boolean = false;\r\n  uploadMessage: string = \"\";\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private personService: PeopleService,\r\n    private router: Router,\r\n    private countryService: CountryService,\r\n    private cityService: CityService,\r\n    private languageService: LanguageService,\r\n    private http: HttpClient,\r\n    private fileUploadService: FileUploadService\r\n\r\n  ) { }\r\n\r\n\r\n  ngOnInit() {\r\n    this.countryService.getCountries().subscribe((data: Country[]) => {\r\n      this.countries = data;\r\n    });\r\n\r\n    this.cityService.getCities().subscribe((data: City[]) => {\r\n      this.cities = data;\r\n    });\r\n\r\n    this.languageService.getLanguages().subscribe((data: Language[]) => {\r\n      this.languages = data;\r\n    });\r\n    this.getLanguages();\r\n    this.loadCities();\r\n  }\r\n\r\n\r\n\r\n  getLanguages() {\r\n    this.languageService.getLanguages().subscribe((data: Language[]) => {\r\n      this.languages = data;\r\n    });\r\n  }\r\n\r\n\r\n  loadCities() {\r\n    this.cities = [];\r\n    this.addPersonRequest.cityId = -1;\r\n    this.cityService.getCitiesByCountryId(this.addPersonRequest.countryId).subscribe((data: City[]) => {\r\n      this.cities = data;\r\n    });\r\n  }\r\n\r\n\r\n  getSelectedLanguageSkills(): string {\r\n    let selectedLanguageIds = this.languages\r\n      .filter(language => language.isChecked)\r\n      .map(language => language.id)\r\n      .join(',');\r\n    return selectedLanguageIds;\r\n  }\r\n\r\n\r\n  onFileSelected(event: any) {\r\n    this.selectedResumeFile = <File>event.target.files[0];\r\n    this.selectedFile = this.selectedResumeFile;\r\n    console.log(this.selectedFile);\r\n    console.log(\"File Got\");\r\n  }\r\n\r\n  addPerson(person: Person): Observable<Person> {\r\n\r\n    const formData = new FormData();\r\n\r\n    person.languageSkills = this.getSelectedLanguageSkills();\r\n\r\n    formData.append('id', person.id.toString());\r\n    formData.append('name', person.name);\r\n    formData.append('countryId', person.countryId.toString());\r\n    formData.append('cityId', person.cityId.toString());\r\n    formData.append('languageSkills', person.languageSkills);\r\n    formData.append('dateOfBirth', person.dateOfBirth.toString());\r\n    formData.append('resumeFileName', person.resumeFileName);\r\n    //formData.append('resumeFile', person.resumeFile);\r\n    formData.append('resumeFile', this.selectedFile);\r\n    console.log(person);\r\n    return this.http.post<Person>(`${this.baseApiUrl}/api/people`, formData);\r\n  }\r\n\r\n  //onAddPerson() {\r\n  //  //this.fileUploadService.uploadFile(this.selectedFile).subscribe(\r\n  //  this.fileUploadService.uploadFile(this.selectedFile).subscribe(\r\n  //    (event) => {\r\n  //      if (event instanceof HttpResponse) {\r\n  //        this.person.resumeFileName = event.body;\r\n  //        this.addPerson(this.person).subscribe(\r\n  //          () => {\r\n  //            console.log(event);\r\n  //            this.success = true;\r\n  //          },\r\n  //          (err: { error: { message: string; }; }) => {\r\n  //            this.error = true;\r\n  //            this.errorMessage = err.error.message;\r\n  //          }\r\n  //        );\r\n  //      }\r\n  //    }\r\n  //  );\r\n  //}\r\n\r\n\r\n  //addPerson(addPersonRequest: Person): Observable<Person> {\r\n  //  this.person.languageSkills = this.getSelectedLanguageSkills();\r\n  //  return this.http.post<Person>(this.baseApiUrl + '/api/people', {\r\n  //    ...addPersonRequest,\r\n  //    countryId: addPersonRequest.countryId,\r\n  //    cityId: addPersonRequest.cityId\r\n  //  });\r\n  //}\r\n\r\n\r\n  //addPerson(addPersonRequest: Person): Observable<Person> {\r\n  //  let formData = new FormData();\r\n  //  formData.append('resumeFile', addPersonRequest.resumeFile, addPersonRequest.resumeFile.name);\r\n  //  formData.append('id', addPersonRequest.id.toString());\r\n  //  formData.append('name', addPersonRequest.name);\r\n  //  formData.append('countryId', addPersonRequest.countryId.toString());\r\n  //  formData.append('cityId', addPersonRequest.cityId.toString());\r\n  //  formData.append('languageSkills', addPersonRequest.languageSkills);\r\n  //  formData.append('dateOfBirth', addPersonRequest.dateOfBirth.toDateString());\r\n\r\n  //  let headers = new HttpHeaders();\r\n  //  headers.append('Content-Type', 'multipart/form-data');\r\n\r\n  //  return this.http.post<Person>(this.baseApiUrl + '/api/people', formData, { headers });\r\n  //}\r\n\r\n\r\n  //addPerson() {\r\n  //  let formData = new FormData();\r\n  //  formData.append('file', this.selectedFile, this.selectedFile.name);\r\n  //  formData.append('addPersonRequest', JSON.stringify(this.addPersonRequest));\r\n\r\n  //  const headers = new HttpHeaders({});\r\n\r\n  //  //const req = new HttpRequest('POST', `${this.baseApiUrl}/File/upload`, formData, {\r\n  //  const req = new HttpRequest('POST', `${this.baseApiUrl}/api/People`, formData, {\r\n  //    headers: headers,\r\n  //    reportProgress: true,\r\n  //  });\r\n\r\n  //  this.http.request(req).subscribe((event: HttpEvent<any>) => {\r\n  //    if (event.type === HttpEventType.UploadProgress) {\r\n  //      event.total = 1;\r\n  //      this.uploadProgress = Math.round((100 * event.loaded) / event.total);\r\n  //    } else if (event.type === HttpEventType.Response) {\r\n  //      if (event.status === 200) {\r\n  //        this.uploadSuccess = true;\r\n  //        this.uploadMessage = 'Upload Successful';\r\n  //      } else {\r\n  //        this.uploadSuccess = false;\r\n  //        this.uploadMessage = event.statusText;\r\n  //      }\r\n  //    }\r\n  //  });\r\n  //}\r\n\r\n\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}